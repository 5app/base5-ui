{"version":3,"sources":["webpack:///../src/useInterval/index.js","webpack:///../src/Time/getDateString.js","webpack:///../src/Time/index.js","webpack:///../src/Time/README.mdx"],"names":["useInterval","callback","savedCallback","useRef","useEffect","delay","id","setInterval","clearInterval","TIME_MINUTE","TIME_DAY","date","d","getDateString","dateTime","locale","systemOffset","time","isNaN","systemtime","Date","offset","ms_today","getTimezoneOffset","dateString","mins","parseInt","Intl","hour12","hour","minute","weekday","month","day","year","Time","systemTime","forceUpdate","useReducer","e","current","title","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","__position","__code","__scope","Playground","Props","isMDXComponent"],"mappings":"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","file":"component---src-time-readme-mdx-c896152327ef59b5d3f6.js","sourcesContent":["import {useRef, useEffect} from 'react';\n\n/**\n * @param {Function} callback - Function to run\n * @param {number|null|undefined} delay - Delay in milliseconds. Interval pauses when null\n */\n\nfunction useInterval(callback, delay) {\n\tconst savedCallback = useRef();\n\n\t// Remember the latest callback.\n\tuseEffect(() => {\n\t\tsavedCallback.current = callback;\n\t});\n\n\t// Set up the interval.\n\tuseEffect(() => {\n\t\tfunction tick() {\n\t\t\tsavedCallback.current();\n\t\t}\n\t\tif (typeof delay === 'number') {\n\t\t\tconst id = setInterval(tick, delay);\n\t\t\treturn () => clearInterval(id);\n\t\t}\n\t}, [delay]);\n}\n\nexport default useInterval;\n","const TIME_MINUTE = 60 * 1000;\nconst TIME_HOUR = 60 * TIME_MINUTE;\nconst TIME_DAY = 24 * TIME_HOUR;\n\nfunction date(d) {\n\tif (!d) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn new Date(d);\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n\nfunction getDateString({dateTime, locale, systemOffset = 0}) {\n\t// Define the offset, how old is this...\n\tconst time = date(dateTime);\n\n\tif (isNaN(time)) {\n\t\treturn [];\n\t}\n\n\t// Update the system time\n\tconst systemtime = new Date();\n\tsystemtime.setTime(Date.now() + systemOffset);\n\tconst offset = time && systemtime && systemtime.getTime() - time.getTime();\n\n\t// Get the number of milliseconds since midnight in the local tz\n\tconst ms_today =\n\t\t(Date.now() - new Date().getTimezoneOffset() * 1000 * 60) % TIME_DAY;\n\tlet dateString = 'n/a';\n\n\t// Default delay\n\tlet delay = null;\n\n\t// A few seconds ago\n\tif (offset < TIME_MINUTE / 2) {\n\t\tdelay = TIME_MINUTE / 2 - offset;\n\t\tdateString = 'seconds ago';\n\t}\n\t// Less than a minute ago\n\telse if (offset < TIME_MINUTE) {\n\t\tdelay = TIME_MINUTE - offset;\n\t\tdateString = '< 1 minute ago';\n\t}\n\t// A few minutes ago\n\telse if (offset < TIME_MINUTE * 10) {\n\t\tdelay = TIME_MINUTE;\n\t\tconst mins = parseInt(offset / TIME_MINUTE);\n\t\tdateString = `${mins} minute${mins > 1 ? 's' : ''} ago`;\n\t}\n\t// Occcured today...\n\telse if (offset < ms_today) {\n\t\t// Number of ms until end of the day...\n\t\tdelay = TIME_DAY - ms_today;\n\t\tdateString = new Intl.DateTimeFormat(locale, {\n\t\t\thour12: true,\n\t\t\thour: 'numeric',\n\t\t\tminute: 'numeric',\n\t\t}).format(time);\n\t}\n\t// Occurred this week\n\telse if (offset < TIME_DAY * 6) {\n\t\t// Delay a day...\n\t\tdelay = TIME_DAY;\n\t\t// Get day\n\t\tdateString = new Intl.DateTimeFormat(locale, {\n\t\t\tweekday: 'short',\n\t\t\thour12: true,\n\t\t\thour: 'numeric',\n\t\t}).format(time);\n\t} else if (time.getYear() === systemtime.getYear()) {\n\t\tdateString = new Intl.DateTimeFormat(locale, {\n\t\t\tmonth: 'short',\n\t\t\tday: 'numeric',\n\t\t}).format(time);\n\t} else {\n\t\tdateString = new Intl.DateTimeFormat(locale, {\n\t\t\tmonth: 'short',\n\t\t\tday: 'numeric',\n\t\t\tyear: 'numeric',\n\t\t}).format(time);\n\t}\n\treturn [dateString, delay];\n}\n\nexport {date, getDateString};\n","import React, {useReducer, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport useInterval from '../useInterval';\nimport {date, getDateString} from './getDateString';\n\nfunction useForceUpdate() {\n\tconst [, forceUpdate] = useReducer(e => e + 1, 0);\n\treturn forceUpdate;\n}\n\nfunction Time({dateTime, systemTime, locale}) {\n\tconst forceUpdate = useForceUpdate();\n\n\t// Offset system time with local time...\n\tconst systemOffset = useRef(\n\t\tdate(systemTime) ? date(systemTime).getTime() - Date.now() : 0\n\t);\n\n\t// Get the date string and the delay before running the next loop\n\tconst [dateString, delay] = getDateString({\n\t\tdateTime,\n\t\tlocale,\n\t\tsystemOffset: systemOffset.current,\n\t});\n\n\t// Set the datestring\n\tuseInterval(forceUpdate, delay);\n\n\tconst title = date(dateTime);\n\n\treturn (\n\t\t<time dateTime={dateTime} title={title && title.toLocaleString()}>\n\t\t\t{dateString || 'n/a'}\n\t\t</time>\n\t);\n}\n\nTime.propTypes = {\n\t/**\n\t * Any Date string recognized by `Date.parse()`.\n\t * Suffix with `Z` to define the date as a UTC value or offset.\n\t */\n\tdateTime: PropTypes.oneOfType([\n\t\tPropTypes.instanceOf(Date),\n\t\tPropTypes.string,\n\t]).isRequired,\n\tsystemTime: PropTypes.oneOfType([\n\t\tPropTypes.instanceOf(Date),\n\t\tPropTypes.string,\n\t]),\n};\n\n// @component\nexport default Time;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Time from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"time\"\n    }}>{`Time`}</h1>\n    <p><inlineCode parentName=\"p\">{`Time`}</inlineCode>{` is a helper component for providing a reading-friendly time relative to a given context.`}</p>\n    <p>{`For example, if something happened a few seconds ago, it would say \"less than a minute ago\". Similarly, if the provided timestamp was today, report the time as \"3pm\" rather than the full date. The idea is to provide not too much information. E.g., seconds aren't relevant when we're talking hours.`}</p>\n    <p>{`The component auto-updates to keep the time accurate without requiring a page refresh. It renders a simple html `}<inlineCode parentName=\"p\">{`<time>`}</inlineCode>{` element with a `}<inlineCode parentName=\"p\">{`title`}</inlineCode>{` attribute that ensures that the full time is provided as a browser tooltip when holding a mouse cursor over it.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Time} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={1} __code={'<Time dateTime=\\\"2019-08-29T11:59:45Z\\\" systemTime=\\\"2019-08-29T12:00:00Z\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Time\n    }} mdxType=\"Playground\">\n\t<Time dateTime=\"2019-08-29T11:59:45Z\" systemTime=\"2019-08-29T12:00:00Z\" mdxType=\"Time\" />\n    </Playground>\n    <Playground __position={2} __code={'<Time dateTime=\\\"2019-08-29T11:57:00Z\\\" systemTime=\\\"2019-08-29T12:00:00Z\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Time\n    }} mdxType=\"Playground\">\n\t<Time dateTime=\"2019-08-29T11:57:00Z\" systemTime=\"2019-08-29T12:00:00Z\" mdxType=\"Time\" />\n    </Playground>\n    <Playground __position={3} __code={'<Time dateTime=\\\"2019-08-29T11:30:00Z\\\" systemTime=\\\"2019-08-29T12:00:00Z\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Time\n    }} mdxType=\"Playground\">\n\t<Time dateTime=\"2019-08-29T11:30:00Z\" systemTime=\"2019-08-29T12:00:00Z\" mdxType=\"Time\" />\n    </Playground>\n    <Playground __position={4} __code={'<Time dateTime=\\\"2019-08-28T11:30:00Z\\\" systemTime=\\\"2019-08-29T12:00:00Z\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Time\n    }} mdxType=\"Playground\">\n\t<Time dateTime=\"2019-08-28T11:30:00Z\" systemTime=\"2019-08-29T12:00:00Z\" mdxType=\"Time\" />\n    </Playground>\n    <Playground __position={5} __code={'<Time dateTime=\\\"2019-08-24T13:30:00Z\\\" systemTime=\\\"2019-08-29T12:00:00Z\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Time\n    }} mdxType=\"Playground\">\n\t<Time dateTime=\"2019-08-24T13:30:00Z\" systemTime=\"2019-08-29T12:00:00Z\" mdxType=\"Time\" />\n    </Playground>\n    <Playground __position={6} __code={'<Time dateTime=\\\"2019-01-24T13:30:00Z\\\" systemTime=\\\"2019-08-29T12:00:00Z\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Time\n    }} mdxType=\"Playground\">\n\t<Time dateTime=\"2019-01-24T13:30:00Z\" systemTime=\"2019-08-29T12:00:00Z\" mdxType=\"Time\" />\n    </Playground>\n    <Playground __position={7} __code={'<Time dateTime=\\\"1981-05-12\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Time\n    }} mdxType=\"Playground\">\n\t<Time dateTime=\"1981-05-12\" mdxType=\"Time\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"invalid-examples\"\n    }}>{`Invalid examples`}</h2>\n    <Playground __position={8} __code={'<Time dateTime=\\\"3017-13-32T25:61:00\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Time\n    }} mdxType=\"Playground\">\n\t<Time dateTime=\"3017-13-32T25:61:00\" mdxType=\"Time\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}