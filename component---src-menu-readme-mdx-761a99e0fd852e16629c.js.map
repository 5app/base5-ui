{"version":3,"sources":["webpack:///../src/Menu/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Status","Menu","MenuButton","MenuList","MenuItem","React","lastSelectedItem","setLastSelectedItem","id","iconRight","icon","label","isDisabled","map","item","key","onClick","mt","isToggle","of","isMDXComponent"],"mappings":"8RASaA,G,UAAe,S,qMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,QADR,QAGA,yFAAwE,6BAAGC,WAAW,KAAQ,CAC1F,KAAQ,6DAD4D,uBAAxE,KAGA,iOACsF,6BAAGA,WAAW,KAAQ,CACxG,KAAQ,wBAD0E,WADtF,oJAGyK,6BAAGA,WAAW,KAAQ,CAC3L,KAAQ,iFAD6J,QAHzK,QAK0B,6BAAGA,WAAW,KAAQ,CAC5C,KAAQ,2DADc,gBAL1B,2BAQA,2DAA0C,0BAAYA,WAAW,KAAvB,iBAA1C,OAA2G,0BAAYA,WAAW,KAAvB,oBAA3G,yBACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2gCAA8hCC,SAAO,GACtkCL,QACAH,kBACAS,eACAC,UACAC,WACAC,SACAC,eACAC,aACAC,cATskC,gBAUtkCf,IAVskC,EAWtkCH,eAXskC,GAYrkCO,QAAQ,eACb,WAAM,MACgDY,aAAzCC,EADP,KACyBC,EADzB,KAoBA,OAAO,4BACX,YAAC,IAAD,CAAMC,GAAG,YAAYf,QAAQ,QAC5B,YAAC,IAAD,CAAYgB,WAAS,EAACC,KAAK,UAAUjB,QAAQ,cAA7C,gBAGA,YAAC,IAAD,CAAUA,QAAQ,YAvBG,CAAC,CACjBe,GAAI,EACJG,MAAO,SACPD,KAAM,QACL,CACDF,GAAI,EACJG,MAAO,YACPD,KAAM,QACL,CACDF,GAAI,EACJG,MAAO,iBACPD,KAAM,WACNE,YAAY,GACX,CACDJ,GAAI,EACJG,MAAO,WACPD,KAAM,aAQCG,KAAI,SAAAC,GAAI,OAAI,YAAC,IAAD,CAAUC,IAAKD,EAAKN,GAAIE,KAAMI,EAAKJ,KAAME,WAAYE,EAAKF,WAAYI,QAAS,kBAAMT,EAAoBO,EAAKH,QAAQlB,QAAQ,YAClJqB,EAAKH,YAIV,YAAC,IAAD,CAAQM,GAAIX,EAAmB,IAAM,KAAMb,QAAQ,UACjDa,GAAoB,iBAAiBA,EAArB,SAKlB,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,UADR,QAGA,YAAC,IAAD,CAAOY,UAAQ,EAACC,GAAIlB,IAAMR,QAAQ,UAClC,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOyB,UAAQ,EAACC,GAAIjB,IAAYT,QAAQ,UACxC,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAOyB,UAAQ,EAACC,GAAIhB,IAAUV,QAAQ,UACtC,iBAAQ,CACN,GAAM,YADR,YAGA,6CAA4B,0BAAYC,WAAW,KAAvB,eAA5B,eAAmG,0BAAYA,WAAW,KAAvB,YAAnG,wBAAgL,0BAAYA,WAAW,KAAvB,MAAhL,6HAA4V,0BAAYA,WAAW,KAAvB,WAA5V,uBACA,YAAC,IAAD,CAAOwB,UAAQ,EAACC,GAAIf,IAAUX,QAAQ,gB,mMAK1CH,EAAW8B,gBAAiB","file":"component---src-menu-readme-mdx-761a99e0fd852e16629c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Status from '../Status';\nimport { Menu, MenuButton, MenuList, MenuItem } from './';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"menu\"\n    }}>{`Menu`}</h1>\n    <p>{`An implementation of the menu button pattern as described in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton\"\n      }}>{`WAI-ARIA guidelines`}</a>{`.`}</p>\n    <p>{`Only use this component when your menu items can best be described as immediate actions for your users to take.\nIf your menu items contain links or other textual content, you probably want to use the `}<a parentName=\"p\" {...{\n        \"href\": \"src-nav-menu-readme\"\n      }}>{`NavMenu`}</a>{` component instead, which provides a similar design & functionality, but doesn't override the roles of links or buttons in your menu items. (See `}<a parentName=\"p\" {...{\n        \"href\": \"https://adrianroselli.com/2017/10/dont-use-aria-menu-roles-for-site-nav.html\"\n      }}>{`this`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.marcozehe.de/wai-aria-menus-use-with-care/\"\n      }}>{`this article`}</a>{` for more information.)`}</p>\n    <p>{`This component doesn't support the `}<inlineCode parentName=\"p\">{`menuitemradio`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`menuitemcheckbox`}</inlineCode>{` roles at this point.`}</p>\n    <Playground __position={0} __code={'() => {\\n  const [lastSelectedItem, setLastSelectedItem] = React.useState()\\n  const menuItems = [\\n    { id: 0, label: \\'Insert\\', icon: \\'plus\\' },\\n    { id: 1, label: \\'Favourite\\', icon: \\'star\\' },\\n    {\\n      id: 2,\\n      label: \\'Reset progress\\',\\n      icon: \\'trending\\',\\n      isDisabled: true,\\n    },\\n    { id: 3, label: \\'Download\\', icon: \\'download\\' },\\n  ]\\n  return (\\n    <>\\n      <Menu id=\\\"demo-menu\\\">\\n        <MenuButton iconRight icon=\\\"chevron\\\">\\n          More actions\\n        </MenuButton>\\n        <MenuList>\\n          {menuItems.map(item => (\\n            <MenuItem\\n              key={item.id}\\n              icon={item.icon}\\n              isDisabled={item.isDisabled}\\n              onClick={() => setLastSelectedItem(item.label)}\\n            >\\n              {item.label}\\n            </MenuItem>\\n          ))}\\n        </MenuList>\\n      </Menu>\\n      <Status mt={lastSelectedItem ? \\'s\\' : null}>\\n        {lastSelectedItem && `Last action: \\\"${lastSelectedItem}\\\"`}\\n      </Status>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Status,\n      Menu,\n      MenuButton,\n      MenuList,\n      MenuItem,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t{() => {\n        const [lastSelectedItem, setLastSelectedItem] = React.useState();\n        const menuItems = [{\n          id: 0,\n          label: 'Insert',\n          icon: 'plus'\n        }, {\n          id: 1,\n          label: 'Favourite',\n          icon: 'star'\n        }, {\n          id: 2,\n          label: 'Reset progress',\n          icon: 'trending',\n          isDisabled: true\n        }, {\n          id: 3,\n          label: 'Download',\n          icon: 'download'\n        }];\n        return <>\n\t\t\t\t<Menu id=\"demo-menu\" mdxType=\"Menu\">\n\t\t\t\t\t<MenuButton iconRight icon=\"chevron\" mdxType=\"MenuButton\">\n\t\t\t\t\t\tMore actions\n\t\t\t\t\t</MenuButton>\n\t\t\t\t\t<MenuList mdxType=\"MenuList\">\n\t\t\t\t\t\t{menuItems.map(item => <MenuItem key={item.id} icon={item.icon} isDisabled={item.isDisabled} onClick={() => setLastSelectedItem(item.label)} mdxType=\"MenuItem\">\n\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t</MenuItem>)}\n\t\t\t\t\t</MenuList>\n\t\t\t\t</Menu>\n\t\t\t\t<Status mt={lastSelectedItem ? 's' : null} mdxType=\"Status\">\n\t\t\t\t\t{lastSelectedItem && `Last action: \"${lastSelectedItem}\"`}\n\t\t\t\t</Status>\n\t\t\t</>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <h3 {...{\n      \"id\": \"menu-1\"\n    }}>{`Menu`}</h3>\n    <Props isToggle of={Menu} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"menubutton\"\n    }}>{`MenuButton`}</h3>\n    <Props isToggle of={MenuButton} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"menulist\"\n    }}>{`MenuList`}</h3>\n    <Props isToggle of={MenuList} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"menuitem\"\n    }}>{`MenuItem`}</h3>\n    <p>{`Note that unlike the `}<inlineCode parentName=\"p\">{`NavMenuItem`}</inlineCode>{` component, `}<inlineCode parentName=\"p\">{`MenuItem`}</inlineCode>{` doesn't support the `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` prop, i.e. its rendered element can not be changed. If you need to include a link in the menu, you might want to use the `}<inlineCode parentName=\"p\">{`NavMenu`}</inlineCode>{` component instead.`}</p>\n    <Props isToggle of={MenuItem} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}