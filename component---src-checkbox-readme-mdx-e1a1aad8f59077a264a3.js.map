{"version":3,"sources":["webpack:///../src/Checkbox/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Stack","Text","Checkbox","React","checked","setChecked","triState","setTriState","spacing","onChange","dimmed","as","disabled","indeterminate","prevState","scale","size","of","isMDXComponent"],"mappings":"qiBAUO,IAAMA,EAAe,Q,yMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,YADR,YAGA,yFACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,q5CAA06CC,SAAO,GACl9CJ,QACAH,kBACAQ,eACAC,UACAC,UACAC,SACAC,cAPk9C,gBAQl9CZ,IARk9C,EASl9CH,eATk9C,GAUj9CO,QAAQ,eACb,WAAM,MAC8BS,YAAe,GAAtCC,EADP,KACgBC,EADhB,OAKgCF,WAAe,iBAAxCG,EALP,KAKiBC,EALjB,KAsBA,OAAO,YAAC,IAAD,CAAOC,QAAQ,IAAId,QAAQ,SACnC,yBACC,YAAC,IAAD,CAAUU,QAASA,EAASK,SArBb,kBAAMJ,GAAW,SAAAD,GAAO,OAAKA,MAqBEV,QAAQ,aADvD,mBAIA,YAAC,IAAD,CAAMgB,QAAM,EAACC,GAAG,QAAQjB,QAAQ,QAC/B,YAAC,IAAD,CAAUU,SAAO,EAACQ,UAAQ,EAAClB,QAAQ,aADpC,4BAGA,YAAC,IAAD,CAAMgB,QAAM,EAACC,GAAG,QAAQjB,QAAQ,QAC/B,YAAC,IAAD,CAAUkB,UAAQ,EAAClB,QAAQ,aAD5B,8BAGA,yBACC,YAAC,IAAD,CAAUmB,cAA4B,kBAAbP,EAA8BF,QAAsB,YAAbE,EAAwBG,SA3BxF,WACEF,GAAY,SAAAO,GACV,OAAQA,GACN,IAAK,gBACH,MAAO,UAET,IAAK,UACH,MAAO,YAET,IAAK,YACH,MAAO,qBAiBkGpB,QAAQ,aAAc,IADxI,wBAIA,YAAC,IAAD,CAAMgB,QAAM,EAACC,GAAG,QAAQjB,QAAQ,QAC/B,YAAC,IAAD,CAAUkB,UAAQ,EAACC,eAAa,EAACnB,QAAQ,aAD1C,kCAIA,yBACC,YAAC,IAAD,CAAUqB,MAAO,IAAMrB,QAAQ,aADhC,yBAGA,YAAC,IAAD,CAAMiB,GAAG,QAAQK,KAAK,KAAKtB,QAAQ,QAClC,YAAC,IAAD,CAAUqB,MAAM,OAAOrB,QAAQ,aADhC,6CAMH,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOuB,GAAIf,IAAUR,QAAQ,gB,uMAKjCH,EAAW2B,gBAAiB","file":"component---src-checkbox-readme-mdx-e1a1aad8f59077a264a3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Stack from '../Stack';\nimport Text from '../Text';\nimport Checkbox from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`Pretty and accessible checkbox that'll match your theme colours.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [checked, setChecked] = React.useState(true)\\n  const toggle = () => setChecked(checked => !checked)\\n  const [triState, setTriState] = React.useState(\\'indeterminate\\')\\n  function cycleTriState() {\\n    setTriState(prevState => {\\n      switch (prevState) {\\n        case \\'indeterminate\\':\\n          return \\'checked\\'\\n        case \\'checked\\':\\n          return \\'unchecked\\'\\n        case \\'unchecked\\':\\n          return \\'indeterminate\\'\\n      }\\n    })\\n  }\\n  return (\\n    <Stack spacing=\\\"s\\\">\\n      <label>\\n        <Checkbox checked={checked} onChange={toggle} /> Regular option\\n      </label>\\n      <Text dimmed as=\\\"label\\\">\\n        <Checkbox checked disabled /> Disabled checked option\\n      </Text>\\n      <Text dimmed as=\\\"label\\\">\\n        <Checkbox disabled /> Disabled unchecked option\\n      </Text>\\n      <label>\\n        <Checkbox\\n          indeterminate={triState === \\'indeterminate\\'}\\n          checked={triState === \\'checked\\'}\\n          onChange={cycleTriState}\\n        />{\\' \\'}\\n        Indeterminate option\\n      </label>\\n      <Text dimmed as=\\\"label\\\">\\n        <Checkbox disabled indeterminate /> Disabled indeterminate option\\n      </Text>\\n      <label>\\n        <Checkbox scale={0.75} /> Scaled-down checkbox\\n      </label>\\n      <Text as=\\\"label\\\" size=\\\"xl\\\">\\n        <Checkbox scale=\\\"auto\\\" /> Checkbox that scales along with text\\n      </Text>\\n    </Stack>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Stack,\n      Text,\n      Checkbox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t{() => {\n        const [checked, setChecked] = React.useState(true);\n\n        const toggle = () => setChecked(checked => !checked);\n\n        const [triState, setTriState] = React.useState('indeterminate');\n\n        function cycleTriState() {\n          setTriState(prevState => {\n            switch (prevState) {\n              case 'indeterminate':\n                return 'checked';\n\n              case 'checked':\n                return 'unchecked';\n\n              case 'unchecked':\n                return 'indeterminate';\n            }\n          });\n        }\n\n        return <Stack spacing=\"s\" mdxType=\"Stack\">\n    \t\t\t<label>\n    \t\t\t\t<Checkbox checked={checked} onChange={toggle} mdxType=\"Checkbox\" /> Regular\n    \t\t\t\toption\n    \t\t\t</label>\n    \t\t\t<Text dimmed as=\"label\" mdxType=\"Text\">\n    \t\t\t\t<Checkbox checked disabled mdxType=\"Checkbox\" /> Disabled checked option\n    \t\t\t</Text>\n    \t\t\t<Text dimmed as=\"label\" mdxType=\"Text\">\n    \t\t\t\t<Checkbox disabled mdxType=\"Checkbox\" /> Disabled unchecked option\n    \t\t\t</Text>\n    \t\t\t<label>\n    \t\t\t\t<Checkbox indeterminate={triState === 'indeterminate'} checked={triState === 'checked'} onChange={cycleTriState} mdxType=\"Checkbox\" />{' '}\n    \t\t\t\tIndeterminate option\n    \t\t\t</label>\n    \t\t\t<Text dimmed as=\"label\" mdxType=\"Text\">\n    \t\t\t\t<Checkbox disabled indeterminate mdxType=\"Checkbox\" /> Disabled indeterminate\n    \t\t\t\toption\n    \t\t\t</Text>\n    \t\t\t<label>\n    \t\t\t\t<Checkbox scale={0.75} mdxType=\"Checkbox\" /> Scaled-down checkbox\n    \t\t\t</label>\n    \t\t\t<Text as=\"label\" size=\"xl\" mdxType=\"Text\">\n    \t\t\t\t<Checkbox scale=\"auto\" mdxType=\"Checkbox\" /> Checkbox that scales along with text\n    \t\t\t</Text>\n    \t\t</Stack>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}