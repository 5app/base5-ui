{"version":3,"sources":["webpack:///../src/useAriaFeedProps/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"wPAOaA,G,oBAAe,S,iNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,0DACE,gBAAO,CACL,KAAQ,qDACR,WAAc,KAFhB,2BADF,KAMA,uFACA,sBAEE,iBAAQ,CACN,WAAc,MACb,yBAAgB,CACf,WAAc,MADf,gBAFH,0CAQA,iBAAQ,CACN,WAAc,MACb,yBAAgB,CACf,WAAc,MADf,mBAFH,4JASF,iBAAQ,CACN,GAAM,iBADR,iBAGA,mCACE,yBAAgB,CACd,WAAc,KADhB,oBADF,kCAKE,yBAAgB,CACd,WAAc,KADhB,aALF,+CASE,yBAAgB,CACd,WAAc,KADhB,kBATF,iBAaA,6CACE,gBAAO,CACL,KAAQ,uFACR,WAAc,KAFhB,gBADF,mFAMA,uBAAK,mBAAU,CACX,UAAa,eACb,WAAc,OAFb,w+B,+MAqCTH,EAAWI,gBAAiB","file":"component---src-use-aria-feed-props-readme-mdx-698ca4a3a8f88f57d9b0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"useariafeedprops\"\n    }}>{`useAriaFeedProps`}</h1>\n    <p>{`A React hook for implementing the `}\n      <a {...{\n        \"href\": \"https://www.w3.org/TR/wai-aria-practices-1.1/#feed\",\n        \"parentName\": \"p\"\n      }}>{`WAI-ARIA 'Feed' pattern`}</a>\n      {`.`}</p>\n    <p>{`Supports the keyboard shortcuts recommended in the references:`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`Page up/down`}</inlineCode>\n        {` to navigate to the previous/next item`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`Ctrl + Home/End`}</inlineCode>\n        {` to navigate to the first/last item\n(To do: Provide a way to pass in refs to first focusable elements before and after the feed & focus those instead)`}</li>\n\n    </ul>\n    <h2 {...{\n      \"id\": \"example-usage\"\n    }}>{`Example usage`}</h2>\n    <p>{`Initialise `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`useAriaFeedProps`}</inlineCode>\n      {` with an object containing the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`isLoading`}</inlineCode>\n      {` state of your feed, and, if available, the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`totalItemCount`}</inlineCode>\n      {` of the feed.`}</p>\n    <p>{`The hook returns two `}\n      <a {...{\n        \"href\": \"https://kentcdodds.com/blog/how-to-give-rendering-control-to-users-with-prop-getters\",\n        \"parentName\": \"p\"\n      }}>{`prop getters`}</a>\n      {` that have to be spread onto the wrapper of the feed and each item ('article').`}</p>\n    <pre><code {...{\n        \"className\": \"language-jsx\",\n        \"parentName\": \"pre\"\n      }}>{`const {getWrapperProps, getItemProps} = useAriaFeedProps({\n    isLoading: hasMoreItems,\n    totalItemCount,\n});\n\nreturn (\n    <>\n        <h1 id={HEADING_ID}>My thrilling feed</h1>\n        <div {...getWrapperProps({labelledBy: HEADING_ID})}>\n            {items.map((item, index) => {\n                const ITEM_HEADING_ID = \\`\\${item.id}-title\\`;\n                const ITEM_DESC_ID = \\`\\${item.id}-description\\`;\n                return (\n                    <article\n                        key={item.id}\n                        {...getItemProps({\n                            index,\n                            labelledBy: ITEM_HEADING_ID,\n                            describedBy: ITEM_HEADING_ID,\n                        })}\n                    >\n                        <h2 id={ITEM_HEADING_ID}>{item.name}</h2>\n                        <p id={ITEM_DESC_ID}>{item.desc}</p>\n                    </article>\n                );\n            })}\n        </div>\n    </>\n);\n`}</code></pre>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}