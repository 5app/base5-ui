{"version":3,"sources":["/home/circleci/repo/src/ButtonCore/index.js","/home/circleci/repo/src/InlineList/README.mdx","/home/circleci/repo/src/InlineList/index.js","/home/circleci/repo/src/TextLink/index.js","/home/circleci/repo/src/mixins/border.js","/home/circleci/repo/src/mixins/centerChildren.js","/home/circleci/repo/src/mixins/ellipsis.js","/home/circleci/repo/src/mixins/fillParent.js","/home/circleci/repo/src/mixins/ie11Hack.js","/home/circleci/repo/src/mixins/overflowWrap.js","/home/circleci/repo/src/mixins/visuallyHidden.js","/home/circleci/repo/src/mixins/zIndex.js","/home/circleci/repo/src/mixins/index.js","/home/circleci/repo/src/styleProps/flexProps.js","/home/circleci/repo/src/utils/theme.js","/home/circleci/repo/src/styleProps/borderProps.js","/home/circleci/repo/src/styleProps/paddingProps.js","/home/circleci/repo/src/styleProps/positionProps.js","/home/circleci/repo/src/styleProps/marginProps.js","/home/circleci/repo/src/styleProps/textProps.js","/home/circleci/repo/src/styleProps/index.js"],"names":["Clickable","styled","button","withConfig","displayName","componentId","ButtonCore","forwardRef","props","ref","as","type","isActive","isDisabled","disabled","className","otherProps","Object","_home_circleci_repo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","classNames","is-active","is-disabled","defaultType","color","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","defaultProps","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","mdxType","id","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Props","Icon","TextLink","InlineList","__codesandbox","___WEBPACK_IMPORTED_MODULE_6__","_Icon__WEBPACK_IMPORTED_MODULE_4__","name","splitBy","_TextLink__WEBPACK_IMPORTED_MODULE_5__","href","of","isMDXComponent","Item","li","Wrapper","ul","p","spacing","css","theme","globals","align","children","React","Children","map","child","i","key","textLinkStyles","bold","stealthy","links","concat","linkRef","_ButtonCore__WEBPACK_IMPORTED_MODULE_4__","positionProps","marginProps","forwardedAs","border","dir","alpha","shade","lineStrength","centerChildren","ellipsis","overflow","textOverflow","whiteSpace","fillParent","ie11Hack","overflowWrap","visuallyHidden","zIndex","z","__webpack_require__","d","__webpack_exports__","mixins_ellipsis","mixins_fillParent","mixins_overflowWrap","alignMap","_utils_units__WEBPACK_IMPORTED_MODULE_0__","top","left","center","bottom","right","flexProps","flexAlign","basis","grow","shrink","flex","minWidth","flexBasis","pxToRem","undefined","flexGrow","flexShrink","alignSelf","checkTheme","ThemeSectionError","borderKeys","borderProps","defineProperty","paddingProps","px","py","pt","pr","pb","pl","padding","getSpacing","paddingTop","paddingRight","paddingBottom","paddingLeft","pos","position","m","mx","my","mt","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","wrap","objectSpread","display","textProps","alignStyles","caps","dimmed","fontSize","lineHeight","textAlign","width","typeScale","fontWeight","textTransform","text","textDimStrength","styleProps_borderProps","styleProps_paddingProps","styleProps_positionProps","styleProps_marginProps","styleProps_textProps"],"mappings":"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","file":"static/js/src-inline-list-readme.27edc5f1.js","sourcesContent":["import React, {forwardRef} from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\n\nimport 'focus-visible';\n\nconst Clickable = styled.button`\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0;\n\tvertical-align: middle;\n\n\tfont: inherit;\n\ttext-decoration: none;\n\ttext-align: inherit;\n\n\tcolor: inherit;\n\tbackground-color: transparent;\n\tborder: none;\n\tborder-radius: 0;\n\tcursor: pointer;\n\n\tappearance: none;\n\n\t&:focus:not(.focus-visible) {\n\t\toutline: none;\n\t}\n\n\t&.focus-visible {\n\t\toutline: 3px solid currentColor;\n\t\toutline-offset: 3px;\n\t}\n\n\t/* Normalise inner button spacing in Gecko browsers */\n\t&::-moz-focus-inner {\n\t\tpadding: 0;\n\t\tborder: 0;\n\t}\n`;\n\nconst ButtonCore = forwardRef((props, ref) => {\n\tconst {\n\t\tas,\n\t\ttype,\n\t\tisActive,\n\t\tisDisabled,\n\t\tdisabled,\n\t\tclassName,\n\t\t...otherProps\n\t} = props;\n\n\tconst classes = classNames(className, {\n\t\t'is-active': isActive,\n\t\t'is-disabled': isDisabled || disabled,\n\t});\n\n\tconst defaultType = !type && as === 'button' ? as : type;\n\n\t// Delete button props that would end up in DOM due to\n\t// styled-components' overly permissive attribute whitelist\n\tdelete otherProps.color;\n\n\treturn (\n\t\t<Clickable\n\t\t\t{...otherProps}\n\t\t\tref={ref}\n\t\t\tas={as}\n\t\t\ttype={defaultType}\n\t\t\tdisabled={isDisabled || disabled}\n\t\t\tclassName={classes}\n\t\t/>\n\t);\n});\n\nButtonCore.defaultProps = {\n\tas: 'button',\n};\n\nexport default ButtonCore;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport Icon from '../Icon'\nimport TextLink from '../TextLink'\nimport InlineList from './'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"inlinelist\"\n    }}>{`InlineList`}</h1>\n    <p>{`Lay out children horizontally with optional spacing or separators.`}</p>\n    <Playground __position={0} __code={'<InlineList>\\n  <Icon name=\\\"android\\\" />\\n  <Icon name=\\\"apple\\\" />\\n  <Icon name=\\\"asset-image\\\" />\\n</InlineList>\\n<InlineList splitBy=\\\"comma\\\">\\n  <span>Milk</span>\\n  <span>Flour</span>\\n  <span>Sugar</span>\\n  <span>Eggs</span>\\n</InlineList>\\n\\n<InlineList splitBy=\\\"dot\\\">\\n  <TextLink href=\\\"#\\\">Home</TextLink>\\n  <TextLink href=\\\"#\\\">Projects</TextLink>\\n  <TextLink href=\\\"#\\\">About us</TextLink>\\n</InlineList>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Icon,\n      TextLink,\n      InlineList\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<InlineList mdxType=\"InlineList\">\n\t\t<Icon name=\"android\" mdxType=\"Icon\" />\n\t\t<Icon name=\"apple\" mdxType=\"Icon\" />\n\t\t<Icon name=\"asset-image\" mdxType=\"Icon\" />\n\t</InlineList>\n      <InlineList splitBy=\"comma\" mdxType=\"InlineList\">\n\t<span>Milk</span>\n\t<span>Flour</span>\n\t<span>Sugar</span>\n\t<span>Eggs</span>\n      </InlineList>\n\n      <InlineList splitBy=\"dot\" mdxType=\"InlineList\">\n\t<TextLink href=\"#\" mdxType=\"TextLink\">Home</TextLink>\n\t<TextLink href=\"#\" mdxType=\"TextLink\">Projects</TextLink>\n\t<TextLink href=\"#\" mdxType=\"TextLink\">About us</TextLink>\n      </InlineList>\n    </Playground>\n    <Props of={InlineList} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nconst Item = styled.li`\n\tdisplay: inline-block;\n\tmax-width: 100%;\n`;\n\nconst Wrapper = styled.ul`\n\tlist-style: none;\n\tmargin: 0;\n    padding: 0;\n\n\t${p =>\n\t\tp.spacing &&\n\t\tcss`\n\t\t\t/* Compensate for Item's padding */\n\t\t\tmargin-left: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t\tmargin-bottom: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t`}\n\n\t& > ${Item} {\n\t\tvertical-align: ${p => p.align || 'top'};\n\n\t\t${p =>\n\t\t\tp.spacing &&\n\t\t\tcss`\n\t\t\t\tpadding-left: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t\tpadding-bottom: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'comma' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: ',';\n\t\t\t\t\tmargin-right: 0.3em;\n\t\t\t\t}\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'dot' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: '·';\n\t\t\t\t\tmargin: 0 0.35em;\n\t\t\t\t}\n\t\t\t`}\n\t}\n`;\n\nconst InlineList = ({children, ...otherProps}) => {\n\treturn (\n\t\t<Wrapper {...otherProps}>\n\t\t\t{React.Children.map(children, (child, i) => {\n\t\t\t\tif (child) {\n\t\t\t\t\treturn <Item key={i}>{child}</Item>;\n\t\t\t\t}\n\t\t\t})}\n\t\t</Wrapper>\n\t);\n};\nInlineList.propTypes = {\n\talign: PropTypes.string,\n\tspacing: PropTypes.string,\n\tsplitBy: PropTypes.oneOf(['comma', 'dot']),\n};\n\nInlineList.Wrapper = Wrapper;\nInlineList.Item = Item;\n\nexport default InlineList;\n","import React, {forwardRef} from 'react';\nimport styled, {css} from 'styled-components';\n\nimport {positionProps, marginProps} from '../styleProps';\n\nimport ButtonCore from '../ButtonCore';\n\nconst textLinkStyles = css`\n\t${p =>\n\t\tp.bold &&\n\t\t`\n\t\tfont-weight: bold;\n\t`}\n\n\ttext-align: inherit;\n\ttext-decoration: none;\n\ttransition: color 0.25s ease-in;\n\tcolor: ${p => (p.stealthy ? 'inherit' : p.theme.links)};\n\n\t&:hover,\n\t&:active,\n\t&:focus {\n\t\t${p =>\n\t\t\tp.stealthy &&\n\t\t\t`\n\t\t\tcolor: ${p.theme.links};\n\t\t`}\n\t\ttext-decoration: underline;\n\t\ttransition-timing-function: ease-out;\n\t}\n`;\n\nconst Wrapper = styled(({linkRef, bold, stealthy, ...otherProps}) => (\n\t<ButtonCore ref={linkRef} {...otherProps} />\n))`\n\t${positionProps}\n\tdisplay: inline;\n\tvertical-align: baseline;\n\t${marginProps}\n\n\t${textLinkStyles}\n`;\n\nfunction TextLink(props, ref) {\n\tconst {as, ...otherProps} = props;\n\n\treturn <Wrapper {...otherProps} linkRef={ref} forwardedAs={as || 'a'} />;\n}\n\n// Allow components to re-use simple text link styles\nexport {textLinkStyles};\nexport default forwardRef(TextLink);\n","import {css} from 'styled-components';\n\nimport {alpha} from '../utils/colors';\n\nconst border = dir => css`\n\tborder-${dir}: 1px solid ${p => alpha(p.theme.shade, p.theme.lineStrength)};\n`;\n\nexport default border;\n","import {css} from 'styled-components';\n\nconst centerChildren = css`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport default centerChildren;\n","const ellipsis = {\n\toverflow: 'hidden',\n\ttextOverflow: 'ellipsis',\n\twhiteSpace: 'nowrap',\n};\n\nexport default ellipsis;\n","import {css} from 'styled-components';\n\nconst fillParent = css`\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n`;\n\nexport default fillParent;\n","/* Use this as a media query to apply styles only on IE 11 */\n\nconst ie11Hack =\n\t'screen and (-ms-high-contrast: active), (-ms-high-contrast: none)';\n\nexport default ie11Hack;\n","import {css} from 'styled-components';\n\nconst overflowWrap = css`\n\toverflow-wrap: break-word;\n\tword-wrap: break-word;\n\n\tword-break: break-word;\n`;\n\nexport default overflowWrap;\n","import {css} from 'styled-components';\n\nconst visuallyHidden = css`\n\tposition: absolute;\n\toverflow: hidden;\n\twidth: 1px;\n\theight: 1px;\n\tpadding: 0;\n\tclip: rect(0 0 0 0);\n\tborder: 0;\n`;\n\nexport default visuallyHidden;\n","import {css} from 'styled-components';\n\nconst zIndex = css`\n\tz-index: ${p => p.theme.globals.z[p.z]};\n`;\n\nexport default zIndex;\n","import border from './border';\nimport centerChildren from './centerChildren';\nimport ellipsis from './ellipsis';\nimport fillParent from './fillParent';\nimport ie11Hack from './ie11Hack';\nimport overflowWrap from './overflowWrap';\nimport visuallyHidden from './visuallyHidden';\nimport zIndex from './zIndex';\n\nexport {\n\tborder,\n\tcenterChildren,\n\tellipsis,\n\tfillParent,\n\tie11Hack,\n\toverflowWrap,\n\tvisuallyHidden,\n\tzIndex,\n};\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: `1px solid ${alpha(\n\t\t\ttheme.shade,\n\t\t\ttheme.lineStrength\n\t\t)}`,\n\t};\n}\n\nexport default borderProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis,\n\twrap: {\n\t\tdisplay: 'block',\n\t\t...overflowWrap,\n\t},\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\tlet alignStyles;\n\tif (textAlign) {\n\t\talignStyles = {\n\t\t\tdisplay: 'block',\n\t\t\twidth: '100%',\n\t\t\ttextAlign,\n\t\t};\n\t}\n\n\treturn {\n\t\t...alignStyles,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps ? textTransformMap[caps] : undefined,\n\t\tcolor: dimmed ? alpha(theme.text, theme.textDimStrength) : undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import borderProps from './borderProps';\nimport flexProps from './flexProps';\nimport paddingProps from './paddingProps';\nimport positionProps from './positionProps';\nimport marginProps from './marginProps';\nimport textProps from './textProps';\n\nexport {\n\tborderProps,\n\tflexProps,\n\tpaddingProps,\n\tpositionProps,\n\tmarginProps,\n\ttextProps,\n};\n"],"sourceRoot":""}