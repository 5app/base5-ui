{"version":3,"sources":["/home/circleci/repo/src/Button/index.js","/home/circleci/repo/src/Button/README.mdx","/home/circleci/repo/src/ButtonCore/index.js","/home/circleci/repo/src/InlineList/index.js","/home/circleci/repo/src/mixins/border.js","/home/circleci/repo/src/mixins/centerChildren.js","/home/circleci/repo/src/mixins/ellipsis.js","/home/circleci/repo/src/mixins/fillParent.js","/home/circleci/repo/src/mixins/ie11Hack.js","/home/circleci/repo/src/mixins/overflowWrap.js","/home/circleci/repo/src/mixins/visuallyHidden.js","/home/circleci/repo/src/mixins/zIndex.js","/home/circleci/repo/src/mixins/index.js","/home/circleci/repo/src/styleProps/flexProps.js","/home/circleci/repo/src/utils/theme.js","/home/circleci/repo/src/styleProps/borderProps.js","/home/circleci/repo/src/styleProps/paddingProps.js","/home/circleci/repo/src/styleProps/positionProps.js","/home/circleci/repo/src/styleProps/marginProps.js","/home/circleci/repo/src/styleProps/textProps.js","/home/circleci/repo/src/styleProps/index.js"],"names":["Wrapper","styled","_ref","buttonRef","otherProps","round","square","fullWidth","color","size","align","Object","objectWithoutProperties","react_default","a","createElement","ButtonCore","assign","ref","withConfig","displayName","componentId","positionProps","p","css","pxToRem","marginProps","theme","globals","typeScale","m","borderRadius","buttons","s","xs","text","background","links","alpha","shade","shadeStrength","fillParent","lineStrength","ThreePx","FocusRing","span","HoverShade","Math","min","Content","ButtonText","spacing","xxs","Subtitle","xxxs","ellipsis","textDimStrength","Button","forwardRef","props","as","children","_props$color","icon","iconRight","subline","title","iconEl","Icon","name","position","forwardedAs","aria-label","propTypes","PropTypes","string","bool","oneOf","layoutProps","MDXLayout","MDXContent","components","index_es","mdxType","id","index_esm","__position","__code","__scope","this","Playground","Props","InlineList","__codesandbox","src_Button","isActive","of","isMDXComponent","Clickable","button","type","isDisabled","disabled","className","_home_circleci_repo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","classNames","is-active","is-disabled","defaultType","react__WEBPACK_IMPORTED_MODULE_1___default","defaultProps","Item","li","ul","splitBy","React","Children","map","child","i","key","border","dir","centerChildren","overflow","textOverflow","whiteSpace","ie11Hack","overflowWrap","visuallyHidden","zIndex","z","__webpack_require__","d","__webpack_exports__","mixins_ellipsis","mixins_fillParent","mixins_overflowWrap","alignMap","_utils_units__WEBPACK_IMPORTED_MODULE_0__","top","left","center","bottom","right","flexProps","flexAlign","basis","grow","shrink","flex","minWidth","flexBasis","undefined","flexGrow","flexShrink","alignSelf","checkTheme","ThemeSectionError","borderKeys","borderProps","defineProperty","concat","paddingProps","px","py","pt","pr","pb","pl","padding","getSpacing","paddingTop","paddingRight","paddingBottom","paddingLeft","pos","mx","my","mt","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","objectSpread","display","wrap","textProps","alignStyles","bold","caps","dimmed","fontSize","lineHeight","textAlign","width","fontWeight","textTransform","styleProps_borderProps","styleProps_paddingProps","styleProps_positionProps","styleProps_marginProps","styleProps_textProps"],"mappings":"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","file":"static/js/src-button-readme.c9198100.js","sourcesContent":["import React, {forwardRef} from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nimport {alpha} from '../utils/colors';\nimport {pxToRem} from '../utils/units';\nimport {fillParent, ellipsis} from '../mixins';\n\nimport {positionProps, marginProps} from '../styleProps';\n\nimport ButtonCore from '../ButtonCore';\nimport Icon from '../Icon';\n\nimport 'focus-visible';\n\nconst PropFilteringWrapper = ({\n\tbuttonRef,\n\tround,\n\tsquare,\n\tfullWidth,\n\tcolor,\n\tsize,\n\talign,\n\t...otherProps\n}) => <ButtonCore ref={buttonRef} {...otherProps} />;\n\nconst Wrapper = styled(PropFilteringWrapper)`\n\t/* Structure, size & spacing */\n\n\t${positionProps}\n\n\t${p =>\n\t\tp.fullWidth &&\n\t\tcss`\n\t\t\tdisplay: block;\n\t\t\twidth: 100%; /* needed for button element */\n\t\t`}\n\tpadding: ${pxToRem(12)};\n\t${marginProps}\n\n\tfont-size: ${p => p.theme.globals.typeScale.m};\n\tfont-weight: 600;\n\tline-height: 1;\n\ttext-align: ${p => p.align || 'center'};\n\ttext-decoration: none;\n\n\t${p =>\n\t\t!p.square &&\n\t\tcss`\n\t\t\tborder-radius: ${p.round\n\t\t\t\t? '2rem'\n\t\t\t\t: pxToRem(p.theme.globals.borderRadius.buttons)};\n\t\t`}\n\n\t${p =>\n\t\tp.size === 'large' &&\n\t\tcss`\n\t\t\tpadding: ${pxToRem(19)};\n\t\t`}\n\n\t${p =>\n\t\tp.size === 'medium' &&\n\t\tcss`\n\t\t\tpadding: ${pxToRem(8)};\n\t\t\tfont-size: ${p => p.theme.globals.typeScale.s};\n\t\t`}\n\n\t${p =>\n\t\tp.size === 'small' &&\n\t\tcss`\n\t\t\tpadding: ${pxToRem(5)};\n\t\t\tfont-size: ${p => p.theme.globals.typeScale.xs};\n\t\t`}\n\n\t/* Colours */\n\n\t${p =>\n\t\t(p.color === 'default' ||\n\t\t\tp.color === 'primary' ||\n\t\t\tp.color === 'important') &&\n\t\tcss`\n\t\t\tcolor: ${p => p.theme.globals.buttons[p.color].text};\n\t\t\tbackground-color: ${p =>\n\t\t\t\tp.theme.globals.buttons[p.color].background};\n\t\t`}\n\n\t${p =>\n\t\tp.color === 'transparent' &&\n\t\tcss`\n\t\t\tcolor: ${p => p.theme.links};\n\t\t\tbackground-color: transparent;\n\t\t`}\n\n\t${p =>\n\t\tp.color === 'shaded' &&\n\t\tcss`\n\t\t\tcolor: ${p => p.theme.links};\n\t\t\tbackground-color: ${p =>\n\t\t\t\talpha(p.theme.shade, p.theme.shadeStrength)};\n\t\t`}\n\n\t/* Add a border to default button */\n\t${p =>\n\t\tp.color === 'default' &&\n\t\tcss`\n\t\t\t&::before {\n\t\t\t\tcontent: '';\n\t\t\t\t${fillParent}\n\t\t\t\tborder-radius: inherit;\n\t\t\t\tborder: 1px solid\n\t\t\t\t\t${p => alpha(p.theme.shade, p.theme.lineStrength)};\n\t\t\t}\n\t\t`}\n\n\t&.focus-visible {\n\t\toutline: none;\n\t}\n\n\t&.is-disabled {\n\t\tcolor: white;\n\t\tbackground-color: ${alpha('black', 0.3)};\n\t\tborder-color: transparent;\n\t\topacity: 0.3;\n\t\ttext-shadow: 0 1px 3px black;\n\t\tcursor: not-allowed;\n\n\t\t${p =>\n\t\t\t(p.color === 'transparent' || p.color === 'shaded') &&\n\t\t\tcss`\n\t\t\t\tcolor: ${p => p.theme.text};\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder-color: transparent;\n\t\t\t\ttext-shadow: none;\n\t\t\t`}\n\t}\n`;\n\nconst ThreePx = pxToRem(3);\n\nconst FocusRing = styled.span`\n\t${fillParent}\n\tborder-radius: inherit;\n\n\tbox-shadow: 0 0 0 ${ThreePx}\n\t\t${p => alpha(p.theme.shade, p.theme.lineStrength + 0.05)};\n\n\topacity: 0;\n\ttransition: opacity 250ms linear;\n\twill-change: opacity;\n\n\t${Wrapper}.focus-visible > & {\n\t\ttop: -${ThreePx};\n\t\tleft: -${ThreePx};\n\t\tbottom: -${ThreePx};\n\t\tright: -${ThreePx};\n\n\t\tbox-shadow: 0 0 0 ${ThreePx}\n\t\t\t${p =>\n\t\t\t\tp.color === 'primary' || p.color === 'important'\n\t\t\t\t\t? p.theme.globals.buttons[p.color].background\n\t\t\t\t\t: p.theme.links};\n\n\t\topacity: 1;\n\t\ttransition-duration: 50ms;\n\t}\n\t/* prettier-ignore */\n\t${Wrapper}:not(.is-disabled):active > & {\n\t\topacity: 1;\n\t\ttransition-duration: 50ms;\n\t}\n`;\n\nconst HoverShade = styled.span`\n\t${fillParent}\n\tborder-radius: inherit;\n\n\tbackground-color: ${p =>\n\t\talpha(p.theme.shade, Math.min(p.theme.shadeStrength, 0.12))};\n\n\topacity: 0;\n\ttransition: opacity 250ms linear;\n\twill-change: opacity;\n\n\t${Wrapper}.is-active > & {\n\t\topacity: 0.666;\n\t\tbox-shadow: inset 0 0 0.25rem rgba(0, 0, 0, 0.5);\n\t}\n\t/* prettier-ignore */\n\t${Wrapper}:not(.is-disabled):hover > & {\n\t\topacity: 1;\n\t\ttransition-duration: 50ms;\n\t}\n\t/* prettier-ignore */\n\t${Wrapper}:not(.is-disabled):active > & {\n\t\topacity: 0;\n\t\ttransition-duration: 250ms;\n\t}\n`;\n\nconst Content = styled.span`\n\tdisplay: block;\n\ttransform: translateZ(0);\n`;\n\nconst ButtonText = styled.span`\n\tpadding: 0 ${p => p.theme.globals.spacing.xxs};\n\tvertical-align: middle;\n`;\n\nconst Subtitle = styled.span`\n\tdisplay: block;\n\tpadding: ${p => p.theme.globals.spacing.xxxs} ${p =>\n\tp.theme.globals.spacing.xxs};\n\t${ellipsis}\n\topacity: ${p => p.theme.textDimStrength};\n\n\tfont-size: ${p => p.theme.globals.typeScale.s};\n`;\n\nfunction ButtonWithRef(props, ref) {\n\tconst {\n\t\tas,\n\t\tchildren,\n\t\tcolor = 'default',\n\t\ticon,\n\t\ticonRight,\n\t\tsubline,\n\t\ttitle,\n\t\t...otherProps\n\t} = props;\n\n\tconst iconEl = icon && <Icon name={icon} />;\n\n\treturn (\n\t\t<Wrapper\n\t\t\tposition=\"relative\"\n\t\t\tforwardedAs={as}\n\t\t\tbuttonRef={ref}\n\t\t\taria-label={props['aria-label'] || title}\n\t\t\tcolor={color}\n\t\t\t{...otherProps}\n\t\t>\n\t\t\t<HoverShade />\n\t\t\t<FocusRing color={color} />\n\t\t\t<Content>\n\t\t\t\t{!iconRight && iconEl}\n\t\t\t\t{children && <ButtonText>{children}</ButtonText>}\n\t\t\t\t{iconRight && iconEl}\n\t\t\t\t{subline && <Subtitle>{subline}</Subtitle>}\n\t\t\t</Content>\n\t\t</Wrapper>\n\t);\n}\n\nconst Button = forwardRef(ButtonWithRef);\n\nButton.propTypes = {\n\ticon: PropTypes.string,\n\ticonRight: PropTypes.bool,\n\tsubline: PropTypes.string,\n\n\tround: PropTypes.bool,\n\tsquare: PropTypes.bool,\n\tfullWidth: PropTypes.bool,\n\tcolor: PropTypes.oneOf([\n\t\t'default',\n\t\t'primary',\n\t\t'important',\n\t\t'transparent',\n\t\t'shaded',\n\t]),\n\tsize: PropTypes.oneOf(['small', 'medium', 'large']),\n\talign: PropTypes.string,\n};\n\nexport default Button;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport InlineList from '../InlineList'\nimport Button from './'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Nice looking buttons, yo.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<InlineList spacing=\\\"s\\\">\\n  <Button color=\\\"primary\\\" icon=\\\"ok\\\">\\n    Save\\n  </Button>\\n  <Button>Cancel</Button>\\n  <Button size=\\\"medium\\\" color=\\\"important\\\">\\n    Delete\\n  </Button>\\n  <Button size=\\\"medium\\\" icon=\\\"send\\\">\\n    Share\\n  </Button>\\n  <Button size=\\\"small\\\" color=\\\"transparent\\\">\\n    Forgot password?\\n  </Button>\\n  <Button round icon=\\\"plus\\\" color=\\\"important\\\" />\\n  <Button isActive size=\\\"medium\\\">\\n    Done\\n  </Button>\\n</InlineList>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      InlineList,\n      Button\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<InlineList spacing=\"s\" mdxType=\"InlineList\">\n\t\t<Button color=\"primary\" icon=\"ok\" mdxType=\"Button\">Save</Button>\n\t\t<Button mdxType=\"Button\">Cancel</Button>\n\t\t<Button size=\"medium\" color=\"important\" mdxType=\"Button\">Delete</Button>\n\t\t<Button size=\"medium\" icon=\"send\" mdxType=\"Button\">Share</Button>\n\t\t<Button size=\"small\" color=\"transparent\" mdxType=\"Button\">Forgot password?</Button>\n\t\t<Button round icon=\"plus\" color=\"important\" mdxType=\"Button\" />\n\t\t<Button isActive size=\"medium\" mdxType=\"Button\">Done</Button>\n\t</InlineList>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  ","import React, {forwardRef} from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\n\nimport 'focus-visible';\n\nconst Clickable = styled.button`\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0;\n\tvertical-align: middle;\n\n\tfont: inherit;\n\ttext-decoration: none;\n\ttext-align: inherit;\n\n\tcolor: inherit;\n\tbackground-color: transparent;\n\tborder: none;\n\tborder-radius: 0;\n\tcursor: pointer;\n\n\tappearance: none;\n\n\t&:focus:not(.focus-visible) {\n\t\toutline: none;\n\t}\n\n\t&.focus-visible {\n\t\toutline: 3px solid currentColor;\n\t\toutline-offset: 3px;\n\t}\n\n\t/* Normalise inner button spacing in Gecko browsers */\n\t&::-moz-focus-inner {\n\t\tpadding: 0;\n\t\tborder: 0;\n\t}\n`;\n\nconst ButtonCore = forwardRef((props, ref) => {\n\tconst {\n\t\tas,\n\t\ttype,\n\t\tisActive,\n\t\tisDisabled,\n\t\tdisabled,\n\t\tclassName,\n\t\t...otherProps\n\t} = props;\n\n\tconst classes = classNames(className, {\n\t\t'is-active': isActive,\n\t\t'is-disabled': isDisabled || disabled,\n\t});\n\n\tconst defaultType = !type && as === 'button' ? as : type;\n\n\t// Delete button props that would end up in DOM due to\n\t// styled-components' overly permissive attribute whitelist\n\tdelete otherProps.color;\n\n\treturn (\n\t\t<Clickable\n\t\t\t{...otherProps}\n\t\t\tref={ref}\n\t\t\tas={as}\n\t\t\ttype={defaultType}\n\t\t\tdisabled={isDisabled || disabled}\n\t\t\tclassName={classes}\n\t\t/>\n\t);\n});\n\nButtonCore.defaultProps = {\n\tas: 'button',\n};\n\nexport default ButtonCore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nconst Item = styled.li`\n\tdisplay: inline-block;\n\tmax-width: 100%;\n`;\n\nconst Wrapper = styled.ul`\n\tlist-style: none;\n\tmargin: 0;\n    padding: 0;\n\n\t${p =>\n\t\tp.spacing &&\n\t\tcss`\n\t\t\t/* Compensate for Item's padding */\n\t\t\tmargin-left: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t\tmargin-bottom: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t`}\n\n\t& > ${Item} {\n\t\tvertical-align: ${p => p.align || 'top'};\n\n\t\t${p =>\n\t\t\tp.spacing &&\n\t\t\tcss`\n\t\t\t\tpadding-left: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t\tpadding-bottom: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'comma' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: ',';\n\t\t\t\t\tmargin-right: 0.3em;\n\t\t\t\t}\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'dot' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: '·';\n\t\t\t\t\tmargin: 0 0.35em;\n\t\t\t\t}\n\t\t\t`}\n\t}\n`;\n\nconst InlineList = ({children, ...otherProps}) => {\n\treturn (\n\t\t<Wrapper {...otherProps}>\n\t\t\t{React.Children.map(children, (child, i) => {\n\t\t\t\tif (child) {\n\t\t\t\t\treturn <Item key={i}>{child}</Item>;\n\t\t\t\t}\n\t\t\t})}\n\t\t</Wrapper>\n\t);\n};\nInlineList.propTypes = {\n\talign: PropTypes.string,\n\tspacing: PropTypes.string,\n\tsplitBy: PropTypes.oneOf(['comma', 'dot']),\n};\n\nInlineList.Wrapper = Wrapper;\nInlineList.Item = Item;\n\nexport default InlineList;\n","import {css} from 'styled-components';\n\nimport {alpha} from '../utils/colors';\n\nconst border = dir => css`\n\tborder-${dir}: 1px solid ${p => alpha(p.theme.shade, p.theme.lineStrength)};\n`;\n\nexport default border;\n","import {css} from 'styled-components';\n\nconst centerChildren = css`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport default centerChildren;\n","const ellipsis = {\n\toverflow: 'hidden',\n\ttextOverflow: 'ellipsis',\n\twhiteSpace: 'nowrap',\n};\n\nexport default ellipsis;\n","import {css} from 'styled-components';\n\nconst fillParent = css`\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n`;\n\nexport default fillParent;\n","/* Use this as a media query to apply styles only on IE 11 */\n\nconst ie11Hack =\n\t'screen and (-ms-high-contrast: active), (-ms-high-contrast: none)';\n\nexport default ie11Hack;\n","import {css} from 'styled-components';\n\nconst overflowWrap = css`\n\toverflow-wrap: break-word;\n\tword-wrap: break-word;\n\n\tword-break: break-word;\n`;\n\nexport default overflowWrap;\n","import {css} from 'styled-components';\n\nconst visuallyHidden = css`\n\tposition: absolute;\n\toverflow: hidden;\n\twidth: 1px;\n\theight: 1px;\n\tpadding: 0;\n\tclip: rect(0 0 0 0);\n\tborder: 0;\n`;\n\nexport default visuallyHidden;\n","import {css} from 'styled-components';\n\nconst zIndex = css`\n\tz-index: ${p => p.theme.globals.z[p.z]};\n`;\n\nexport default zIndex;\n","import border from './border';\nimport centerChildren from './centerChildren';\nimport ellipsis from './ellipsis';\nimport fillParent from './fillParent';\nimport ie11Hack from './ie11Hack';\nimport overflowWrap from './overflowWrap';\nimport visuallyHidden from './visuallyHidden';\nimport zIndex from './zIndex';\n\nexport {\n\tborder,\n\tcenterChildren,\n\tellipsis,\n\tfillParent,\n\tie11Hack,\n\toverflowWrap,\n\tvisuallyHidden,\n\tzIndex,\n};\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: `1px solid ${alpha(\n\t\t\ttheme.shade,\n\t\t\ttheme.lineStrength\n\t\t)}`,\n\t};\n}\n\nexport default borderProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis: {\n\t\tdisplay: 'block',\n\t\t...ellipsis,\n\t},\n\twrap: {\n\t\tdisplay: 'block',\n\t\t...overflowWrap,\n\t},\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\tlet alignStyles;\n\tif (textAlign) {\n\t\talignStyles = {\n\t\t\tdisplay: 'block',\n\t\t\twidth: '100%',\n\t\t\ttextAlign,\n\t\t};\n\t}\n\n\treturn {\n\t\t...alignStyles,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps ? textTransformMap[caps] : undefined,\n\t\tcolor: dimmed ? alpha(theme.text, theme.textDimStrength) : undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import borderProps from './borderProps';\nimport flexProps from './flexProps';\nimport paddingProps from './paddingProps';\nimport positionProps from './positionProps';\nimport marginProps from './marginProps';\nimport textProps from './textProps';\n\nexport {\n\tborderProps,\n\tflexProps,\n\tpaddingProps,\n\tpositionProps,\n\tmarginProps,\n\ttextProps,\n};\n"],"sourceRoot":""}