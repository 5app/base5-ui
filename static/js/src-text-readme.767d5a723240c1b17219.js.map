{"version":3,"sources":["/home/circleci/repo/src/Text/README.mdx","/home/circleci/repo/src/Text/index.js","/home/circleci/repo/src/mixins/borderValue.js","/home/circleci/repo/src/mixins/centerChildren.js","/home/circleci/repo/src/mixins/ellipsis.js","/home/circleci/repo/src/mixins/fillParent.js","/home/circleci/repo/src/mixins/ie11Hack.js","/home/circleci/repo/src/mixins/overflowWrap.js","/home/circleci/repo/src/mixins/visuallyHidden.js","/home/circleci/repo/src/mixins/index.js","/home/circleci/repo/src/styleProps/flexProps.js","/home/circleci/repo/src/utils/theme.js","/home/circleci/repo/src/styleProps/borderProps.js","/home/circleci/repo/src/styleProps/displayProps.js","/home/circleci/repo/src/styleProps/paddingProps.js","/home/circleci/repo/src/styleProps/positionProps.js","/home/circleci/repo/src/styleProps/marginProps.js","/home/circleci/repo/src/styleProps/textProps.js","/home/circleci/repo/src/styleProps/index.js","/home/circleci/repo/src/utils/spacing.js"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","Playground","Props","Text","__codesandbox","as","size","lineHeight","dimmed","bold","mt","caps","overflow","display","of","isMDXComponent","styled","span","displayProps","textProps","textAlign","align","fontSize","marginProps","paddingProps","propTypes","PropTypes","bool","oneOfType","oneOf","string","number","borderValue","theme","alpha","shade","lineStrength","centerChildren","alignItems","justifyContent","ellipsis","textOverflow","whiteSpace","fillParent","position","top","right","bottom","left","ie11Hack","overflowWrap","wordWrap","wordBreak","visuallyHidden","width","height","padding","clip","border","alignMap","center","flexProps","flexAlign","basis","grow","shrink","flex","minWidth","flexBasis","pxToRem","undefined","flexGrow","flexShrink","alignSelf","checkTheme","globals","ThemeSectionError","borderKeys","borderProps","supportedDisplayValues","includes","console","warn","p","px","py","pt","pr","pb","pl","getSpacing","paddingTop","paddingRight","paddingBottom","paddingLeft","positionProps","pos","z","zIndex","m","mx","my","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","wrap","typeScale","fontWeight","textTransform","color","text","textDimStrength","passThroughValues","shortCode","indexOf","charAt","spacing","substring"],"mappings":"obAaMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,QADR,QAGA,qBAAG,0BAAYC,WAAW,KAAvB,QAAH,mGACA,sBACE,kBAAIA,WAAW,MAAf,+EACA,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,uBAEF,2CAA0B,0BAAYA,WAAW,KAAvB,YAA1B,QAAuF,0BAAYA,WAAW,KAAvB,aAAvF,uDAAoM,0BAAYA,WAAW,KAAvB,QAApM,QAA6P,0BAAYA,WAAW,KAAvB,SAA7P,KACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+mCAA6oCC,QAAS,CACvrCL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,eACAC,UACAC,UACCC,cAAa,mxSAAsxST,QAAQ,cACjzS,YAAC,IAAD,CAAMU,GAAG,KAAKC,KAAK,KAAKC,WAAY,IAAKZ,QAAQ,QAAjD,+CAGA,YAAC,IAAD,CAAMa,QAAM,EAACH,GAAG,IAAIV,QAAQ,QAA5B,2BAC0B,IACzB,YAAC,IAAD,CAAMc,MAAI,EAACD,QAAQ,EAAOb,QAAQ,QAAlC,uBAID,YAAC,IAAD,CAAMc,MAAI,EAACJ,GAAG,IAAIK,GAAG,IAAIf,QAAQ,QAAjC,8BAC4B,YAAC,IAAD,CAAMc,MAAM,EAAOd,QAAQ,QAA3B,YAD5B,SAGA,YAAC,IAAD,CAAMU,GAAG,IAAIM,KAAK,MAAMD,GAAG,IAAIf,QAAQ,QAAvC,yDAGA,YAAC,IAAD,CAAMU,GAAG,IAAIM,KAAK,QAAQhB,QAAQ,QAAlC,6DAC4D,IAC3D,YAAC,IAAD,CAAMgB,MAAM,EAAOhB,QAAQ,QAA3B,yBAED,YAAC,IAAD,CAAMU,GAAG,IAAIO,SAAS,OAAOF,GAAG,IAAIf,QAAQ,QAA5C,yJAGA,YAAC,IAAD,CAAMkB,QAAQ,QAAQD,SAAS,WAAWF,GAAG,IAAIf,QAAQ,QAAzD,iRAOG,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOmB,GAAIX,IAAMR,QAAQ,W,yKAK7BH,EAAWuB,gBAAiB,G,8hBCrE5B,IAAMZ,EAAOa,IAAOC,KAAV,uDAAGD,CAAH,oBACPE,KACA,SAAAxB,GAAK,OACNyB,Y,yVAAU,CAAD,GACLzB,EADK,CAER0B,UAAW1B,EAAM2B,OAAS3B,EAAM0B,UAChCE,SAAU5B,EAAMY,MAAQZ,EAAM4B,cAE9BC,IACAC,KAGHrB,EAAKsB,UAAY,CAChBhB,KAAMiB,IAAUC,KAChBhB,KAAMe,IAAUE,UAAU,CACzBF,IAAUG,MAAM,CAAC,MAAO,UACxBH,IAAUC,OAEXnB,OAAQkB,IAAUC,KAClBd,QAASa,IAAUG,MAAM,CAAC,QAAS,SAAU,iBAC7CP,SAAUI,IAAUI,OACpBvB,WAAYmB,IAAUK,OACtBnB,SAAUc,IAAUG,MAAM,CAAC,WAAY,SACvCT,UAAWM,IAAUG,MAAM,CAAC,OAAQ,SAAU,WAGhC1B,M,gRClCf,SAAS6B,EAAYC,GACpB,MAAM,aAAN,OAAoBC,YAAMD,EAAME,MAAOF,EAAMG,eAG/BJ,Q,gLCNf,IAAMK,EAAiB,CACtBxB,QAAS,OACTyB,WAAY,SACZC,eAAgB,UAGFF,I,8MCNf,IAAMG,EAAW,CAChB5B,SAAU,SACV6B,aAAc,WACdC,WAAY,UAGEF,I,kMCNf,IAAMG,EAAa,CAClBC,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAGQL,I,sMCNf,IAAMM,EACL,oEAEcA,I,uKCLf,IAAMC,EAAe,CACpBA,aAAc,aACdC,SAAU,aAEVC,UAAW,cAGGF,I,0MCPf,IAAMG,EAAiB,CACtBT,SAAU,WACVhC,SAAU,SACV0C,MAAO,EACPC,OAAQ,EACRC,QAAS,EACTC,KAAM,gBACNC,OAAQ,GAGML,I,8MCVf,0K,i3CCAA,kEAEaM,EAAW,CACvBd,IAAK,aACLG,KAAM,aACNY,OAAQ,SACRb,OAAQ,WACRD,MAAO,YAGR,SAASe,EAAUnE,GAAQ,IACnBoE,EAAkCpE,EAAlCoE,UAAWC,EAAuBrE,EAAvBqE,MAAOC,EAAgBtE,EAAhBsE,KAAMC,EAAUvE,EAAVuE,OAE/B,MAAO,CAENC,KAAM,OAENC,SAAU,EACVC,UAAWL,EAAQM,YAAQN,QAASO,EACpCC,SAAUP,EAAO,OAAIM,EACrBE,WAAYP,EAAS,OAAIK,EACzBG,UAAWd,EAASG,IAAcA,G,uMAIrBD,M,wXCvBf,SAASa,EAAWzC,GACnB,IAAKA,IAAUA,EAAM0C,QACpB,MAAM,IAAIC,I,yMCANC,EAAa,CAClBhC,IAAK,YACLG,KAAM,aACND,OAAQ,eACRD,MAAO,eAGR,SAASgC,EAAYpF,GAAQ,IACrBgE,EAAiBhE,EAAjBgE,OAAQzB,EAASvC,EAATuC,MAIf,OAFAyC,EAAWzC,GAEN4C,EAAWnB,GAIT,eACLmB,EAAWnB,GAAU1B,YAAYC,IAJ3B,KAQM6C,Q,oLCzBf,IAAMC,EAAyB,CAAC,QAAS,SAAU,gBAEnD,SAAS7D,EAAaxB,GAAQ,IACtBmB,EAAWnB,EAAXmB,QAEP,OAAKA,EAEDkE,EAAuBC,SAASnE,GAC5B,CACNA,gBAGDoE,QAAQC,KAAR,6KAPoB,KAePhE,Q,6PCjBf,SAASM,EAAa9B,GAAQ,IACtByF,EAAoCzF,EAApCyF,EAAGC,EAAiC1F,EAAjC0F,GAAIC,EAA6B3F,EAA7B2F,GAAIC,EAAyB5F,EAAzB4F,GAAIC,EAAqB7F,EAArB6F,GAAIC,EAAiB9F,EAAjB8F,GAAIC,EAAa/F,EAAb+F,GAAIxD,EAASvC,EAATuC,MAIlC,OAFAyC,EAAWzC,GAEJ,CACNuB,QAAS2B,EAAIO,YAAWP,EAAGlD,QAASqC,EACpCqB,WAAYN,EACTK,YAAWL,EAAIpD,GACfqD,EACAI,YAAWJ,EAAIrD,QACfqC,EACHsB,aAAcR,EACXM,YAAWN,EAAInD,GACfsD,EACAG,YAAWH,EAAItD,QACfqC,EACHuB,cAAeR,EACZK,YAAWL,EAAIpD,GACfuD,EACAE,YAAWF,EAAIvD,QACfqC,EACHwB,YAAaV,EACVM,YAAWN,EAAInD,GACfwD,EACAC,YAAWD,EAAIxD,QACfqC,GAIU9C,QC9Bf,SAASuE,EAAcrG,GAAQ,IACvBsG,EAAqDtG,EAArDsG,IAAKpD,EAAgDlD,EAAhDkD,SAAUC,EAAsCnD,EAAtCmD,IAAKG,EAAiCtD,EAAjCsD,KAAMD,EAA2BrD,EAA3BqD,OAAQD,EAAmBpD,EAAnBoD,MAAOmD,EAAYvG,EAAZuG,EAAGhE,EAASvC,EAATuC,MAInD,OAFAyC,EAAWzC,GAEJ,CACNW,SAAUoD,GAAOpD,QAAY0B,EAE7BzB,IAAKA,EAAM6C,YAAW7C,EAAKZ,QAASqC,EACpCtB,KAAMA,EAAO0C,YAAW1C,EAAMf,QAASqC,EACvCvB,OAAQA,EAAS2C,YAAW3C,EAAQd,QAASqC,EAC7CxB,MAAOA,EAAQ4C,YAAW5C,EAAOb,QAASqC,EAE1C4B,OAASjE,EAAM0C,QAAQsB,GAAKhE,EAAM0C,QAAQsB,EAAEA,IAAOA,QAAK3B,G,sLAI3CyB,QCjBf,SAASxE,EAAY7B,GAAQ,IACrByG,EAAoCzG,EAApCyG,EAAGC,EAAiC1G,EAAjC0G,GAAIC,EAA6B3G,EAA7B2G,GAAI3F,EAAyBhB,EAAzBgB,GAAI4F,EAAqB5G,EAArB4G,GAAIC,EAAiB7G,EAAjB6G,GAAIC,EAAa9G,EAAb8G,GAAIvE,EAASvC,EAATuC,MAIlC,OAFAyC,EAAWzC,GAEJ,CACNwE,OAAQN,EAAIT,YAAWS,EAAGlE,QAASqC,EACnCoC,UAAWL,EACRX,YAAWW,EAAIpE,GACfvB,EACAgF,YAAWhF,EAAIuB,QACfqC,EACHqC,YAAaP,EACVV,YAAWU,EAAInE,GACfqE,EACAZ,YAAWY,EAAIrE,QACfqC,EACHsC,aAAcP,EACXX,YAAWW,EAAIpE,GACfsE,EACAb,YAAWa,EAAItE,QACfqC,EACHuC,WAAYT,EACTV,YAAWU,EAAInE,GACfuE,EACAd,YAAWc,EAAIvE,QACfqC,G,wLAIU/C,Q,mbC7Bf,IAAMuF,EAAmB,CACxBC,IAAK,YACLC,MAAO,cAGFC,EAAoB,CACzBzE,aACA0E,UAGD,SAAS/F,EAAUzB,GAAQ,IAEzBe,EASGf,EATHe,KACAE,EAQGjB,EARHiB,KACAH,EAOGd,EAPHc,OACAc,EAMG5B,EANH4B,SACAf,EAKGb,EALHa,WACAK,EAIGlB,EAJHkB,SACAQ,EAGG1B,EAHH0B,UAEAa,EACGvC,EADHuC,MAKD,OAFAyC,EAAWzC,G,yVAEJ,CAAP,CACCb,YACAE,SAAUA,EAAWW,EAAM0C,QAAQwC,UAAU7F,QAAYgD,EACzD8C,WAAY3G,EAAO,QAAkB,IAATA,EAAiB,cAAW6D,EACxD/D,aACA8G,cAAe1G,EACZmG,EAAiBnG,IACR,IAATA,EACA,YACA2D,EACHgD,MAAO9G,EACJ0B,YAAMD,EAAMsF,KAAMtF,EAAMuF,kBACb,IAAXhH,EACAyB,EAAMsF,UACNjD,GACC1D,EAAWqG,EAAkBrG,QAAY0D,GAIhCnD,Q,gLChDf,gP,66CCAA,kEAEMsG,EAAoB,CAAC,QAE3B,SAAS/B,EAAWgC,EAAWzF,GAC9B,YAAkBqC,IAAdoD,GAAyC,OAAdA,IAAoC,IAAdA,EAC7CA,EAIe,kBAAdA,GAA+C,kBAAdA,GAC3B,MAAdA,EAEO,IAGiB,kBAAdA,EACHrD,YAAQqD,GAGZD,EAAkBE,QAAQD,IAAc,EACpCA,EAGoB,MAAxBA,EAAUE,OAAO,GACb,IAAM3F,EAAM0C,QAAQkD,QAAQH,EAAUI,UAAU,IAEhD7F,EAAM0C,QAAQkD,QAAQH,G","file":"static/js/src-text-readme.2551d84a.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport {Playground, Props} from 'docz';\nimport Text from './';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"text\"\n    }}>{`Text`}</h1>\n    <p><inlineCode parentName=\"p\">{`Text`}</inlineCode>{` is a helper component for formatting text. It supports styling props for the following styles:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Text styles (bold, dimmed, fontSize, lineHeight, textAlign, overflow, caps)`}</li>\n      <li parentName=\"ul\">{`Display (block, inline, inline-block)`}</li>\n      <li parentName=\"ul\">{`Margin and padding`}</li>\n    </ul>\n    <p>{`In addition to the `}<inlineCode parentName=\"p\">{`fontSize`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`textAlign`}</inlineCode>{` props, this component also supports the shorthands `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`align`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<Text as=\\\"h1\\\" size=\\\"xl\\\" lineHeight={1.3}>\\n  Extra-large text with a smaller line height\\n</Text>\\n<Text dimmed as=\\\"p\\\">\\n  A dimmed subtitle with a{\\' \\'}\\n  <Text bold dimmed={false}>\\n    non-dimmed segment\\n  </Text>\\n</Text>\\n<Text bold as=\\\"p\\\" mt=\\\"m\\\">\\n  Bold text with some nested <Text bold={false}>non-bold</Text> text\\n</Text>\\n<Text as=\\\"p\\\" caps=\\\"all\\\" mt=\\\"m\\\">\\n  this text is all-lowercase, but displays in uppercase\\n</Text>\\n<Text as=\\\"p\\\" caps=\\\"first\\\">\\n  this text is all-lowercase, but is displayed in title-case{\\' \\'}\\n  <Text caps={false}>(unless overwritten)</Text>\\n</Text>\\n<Text as=\\\"p\\\" overflow=\\\"wrap\\\" mt=\\\"m\\\">\\n  OverflowWrapWillMakeLongWordsWithNoSpacesForExampleUrlsBreakIntoANewLineInsteadOfGoingOnAndBreakingOutOfTheirContainerWhichUsuallyDoesntLookVeryGood.\\n</Text>\\n<Text display=\\\"block\\\" overflow=\\\"ellipsis\\\" mt=\\\"m\\\">\\n  An overflow value of \\'ellipsis\\' will prevent line-breaks and cut off\\n  overflowing text with an ellipsis (…). This only works with \\\"block-level\\\"\\n  elements (e.g. div, p). If you want to use it with a non-block element like\\n  `span`, set the `display` prop to \\'block\\'.\\n</Text>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Text\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<Text as=\"h1\" size=\"xl\" lineHeight={1.3} mdxType=\"Text\">\n\t\tExtra-large text with a smaller line height\n\t</Text>\n\t<Text dimmed as=\"p\" mdxType=\"Text\">\n\t\tA dimmed subtitle with a{' '}\n\t\t<Text bold dimmed={false} mdxType=\"Text\">\n\t\t\tnon-dimmed segment\n\t\t</Text>\n\t</Text>\n\t<Text bold as=\"p\" mt=\"m\" mdxType=\"Text\">\n\t\tBold text with some nested <Text bold={false} mdxType=\"Text\">non-bold</Text> text\n\t</Text>\n\t<Text as=\"p\" caps=\"all\" mt=\"m\" mdxType=\"Text\">\n\t\tthis text is all-lowercase, but displays in uppercase\n\t</Text>\n\t<Text as=\"p\" caps=\"first\" mdxType=\"Text\">\n\t\tthis text is all-lowercase, but is displayed in title-case{' '}\n\t\t<Text caps={false} mdxType=\"Text\">(unless overwritten)</Text>\n\t</Text>\n\t<Text as=\"p\" overflow=\"wrap\" mt=\"m\" mdxType=\"Text\">\n\t\tOverflowWrapWillMakeLongWordsWithNoSpacesForExampleUrlsBreakIntoANewLineInsteadOfGoingOnAndBreakingOutOfTheirContainerWhichUsuallyDoesntLookVeryGood.\n\t</Text>\n\t<Text display=\"block\" overflow=\"ellipsis\" mt=\"m\" mdxType=\"Text\">\n\t\tAn overflow value of 'ellipsis' will prevent line-breaks and cut off\n\t\toverflowing text with an ellipsis (…). This only works with\n\t\t\"block-level\" elements (e.g. div, p). If you want to use it with a\n\t\tnon-block element like `span`, set the `display` prop to 'block'.\n\t</Text>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Text} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n\tdisplayProps,\n\ttextProps,\n\tmarginProps,\n\tpaddingProps,\n} from '../styleProps';\n\nconst Text = styled.span`\n\t${displayProps}\n\t${props =>\n\t\ttextProps({\n\t\t\t...props,\n\t\t\ttextAlign: props.align || props.textAlign,\n\t\t\tfontSize: props.size || props.fontSize,\n\t\t})}\n\t${marginProps}\n\t${paddingProps}\n`;\n\nText.propTypes = {\n\tbold: PropTypes.bool,\n\tcaps: PropTypes.oneOfType([\n\t\tPropTypes.oneOf(['all', 'first']),\n\t\tPropTypes.bool,\n\t]),\n\tdimmed: PropTypes.bool,\n\tdisplay: PropTypes.oneOf(['block', 'inline', 'inline-block']),\n\tfontSize: PropTypes.string,\n\tlineHeight: PropTypes.number,\n\toverflow: PropTypes.oneOf(['ellipsis', 'wrap']),\n\ttextAlign: PropTypes.oneOf(['left', 'center', 'right']),\n};\n\nexport default Text;\n","import {alpha} from '../utils/colors';\n\nfunction borderValue(theme) {\n\treturn `1px solid ${alpha(theme.shade, theme.lineStrength)}`;\n}\n\nexport default borderValue;\n","const centerChildren = {\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n};\n\nexport default centerChildren;\n","const ellipsis = {\n\toverflow: 'hidden',\n\ttextOverflow: 'ellipsis',\n\twhiteSpace: 'nowrap',\n};\n\nexport default ellipsis;\n","const fillParent = {\n\tposition: 'absolute',\n\ttop: 0,\n\tright: 0,\n\tbottom: 0,\n\tleft: 0,\n};\n\nexport default fillParent;\n","/* Use this as a media query to apply styles only on IE 11 */\n\nconst ie11Hack =\n\t'screen and (-ms-high-contrast: active), (-ms-high-contrast: none)';\n\nexport default ie11Hack;\n","const overflowWrap = {\n\toverflowWrap: 'break-word',\n\twordWrap: 'break-word',\n\n\twordBreak: 'break-word',\n};\n\nexport default overflowWrap;\n","const visuallyHidden = {\n\tposition: 'absolute',\n\toverflow: 'hidden',\n\twidth: 1,\n\theight: 1,\n\tpadding: 0,\n\tclip: 'rect(0 0 0 0)',\n\tborder: 0,\n};\n\nexport default visuallyHidden;\n","import borderValue from './borderValue';\nimport centerChildren from './centerChildren';\nimport ellipsis from './ellipsis';\nimport fillParent from './fillParent';\nimport ie11Hack from './ie11Hack';\nimport overflowWrap from './overflowWrap';\nimport visuallyHidden from './visuallyHidden';\n\nexport {\n\tborderValue,\n\tcenterChildren,\n\tellipsis,\n\tfillParent,\n\tie11Hack,\n\toverflowWrap,\n\tvisuallyHidden,\n};\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {checkTheme} from '../utils/theme';\n\nimport {borderValue} from '../mixins';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: borderValue(theme),\n\t};\n}\n\nexport default borderProps;\n","const supportedDisplayValues = ['block', 'inline', 'inline-block'];\n\nfunction displayProps(props) {\n\tconst {display} = props;\n\n\tif (!display) return null;\n\n\tif (supportedDisplayValues.includes(display)) {\n\t\treturn {\n\t\t\tdisplay,\n\t\t};\n\t} else {\n\t\tconsole.warn(\n\t\t\t`Only 'block', 'inline', and 'inline-block' are supported for\n\t\t\tthe 'display' styling prop. Please use 'base5-ui/Flex' or custom CSS\n\t\t\tfor more complex styling.`\n\t\t);\n\t}\n}\n\nexport default displayProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap as wrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis,\n\twrap,\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\ttextAlign,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : bold === false ? 'normal' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps\n\t\t\t? textTransformMap[caps]\n\t\t\t: caps === false\n\t\t\t? 'none'\n\t\t\t: undefined,\n\t\tcolor: dimmed\n\t\t\t? alpha(theme.text, theme.textDimStrength)\n\t\t\t: dimmed === false\n\t\t\t? theme.text\n\t\t\t: undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import borderProps from './borderProps';\nimport displayProps from './displayProps';\nimport flexProps from './flexProps';\nimport paddingProps from './paddingProps';\nimport positionProps from './positionProps';\nimport marginProps from './marginProps';\nimport textProps from './textProps';\n\nexport {\n\tborderProps,\n\tdisplayProps,\n\tflexProps,\n\tpaddingProps,\n\tpositionProps,\n\tmarginProps,\n\ttextProps,\n};\n","import {pxToRem} from './units';\n\nconst passThroughValues = ['auto'];\n\nfunction getSpacing(shortCode, theme) {\n\tif (shortCode === undefined || shortCode === null || shortCode === false) {\n\t\treturn shortCode;\n\t}\n\n\tif (\n\t\t(typeof shortCode !== 'number' && typeof shortCode !== 'string') ||\n\t\tshortCode === '0'\n\t) {\n\t\treturn '0';\n\t}\n\n\tif (typeof shortCode === 'number') {\n\t\treturn pxToRem(shortCode);\n\t}\n\n\tif (passThroughValues.indexOf(shortCode) > -1) {\n\t\treturn shortCode;\n\t}\n\n\tif (shortCode.charAt(0) === '-') {\n\t\treturn '-' + theme.globals.spacing[shortCode.substring(1)];\n\t} else {\n\t\treturn theme.globals.spacing[shortCode];\n\t}\n}\n\nexport {getSpacing};\n"],"sourceRoot":""}