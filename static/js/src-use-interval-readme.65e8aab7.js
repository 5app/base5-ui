(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"./src/useInterval/README.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return c}));var s=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),o=(n("./node_modules/docz/dist/index.esm.js"),{}),r="wrapper";function c(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(a.b)(r,Object.assign({},o,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"useinterval"},"useInterval"),Object(a.b)("p",null,"A hook for safely & declaratively setting up intervals in functional React components."),Object(a.b)("p",null,"Based on Dan Abramov's blog post ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://overreacted.io/making-setinterval-declarative-with-react-hooks/"}),'"Making setInterval Declarative with React Hooks"')),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"import useInterval from 'base5-ui/useInterval';\n\nfunction Counter() {\n    const [count, setCount] = useState(0);\n\n    useInterval(() => {\n        // Your custom logic here\n        setCount(count + 1);\n    }, 1000);\n\n    return <h1>{count}</h1>;\n}\n")))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/useInterval/README.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=src-use-interval-readme.d264c099a58d24d9f86d.js.map