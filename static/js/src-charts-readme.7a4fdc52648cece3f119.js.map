{"version":3,"sources":["/home/circleci/repo/src/Arrow/getArrowPosition.js","/home/circleci/repo/src/Arrow/index.js","/home/circleci/repo/src/Box/index.js","/home/circleci/repo/src/Portal/index.js","/home/circleci/repo/src/PopOver/ResizeAware.js","/home/circleci/repo/src/PopOver/index.js","/home/circleci/repo/src/Text/index.js","/home/circleci/repo/src/charts/useChartist.js","/home/circleci/repo/src/VisuallyHidden/index.js","/home/circleci/repo/src/charts/SimpleChart/ChartTooltips.js","/home/circleci/repo/src/charts/SimpleChart/index.js","/home/circleci/repo/src/charts/SimpleGauge/StripesPattern.js","/home/circleci/repo/src/charts/SimpleGauge/index.js","/home/circleci/repo/src/charts/README.mdx","/home/circleci/repo/src/mixins/borderValue.js","/home/circleci/repo/src/mixins/centerChildren.js","/home/circleci/repo/src/mixins/ellipsis.js","/home/circleci/repo/src/mixins/fillParent.js","/home/circleci/repo/src/mixins/ie11Hack.js","/home/circleci/repo/src/mixins/overflowWrap.js","/home/circleci/repo/src/mixins/visuallyHidden.js","/home/circleci/repo/src/mixins/index.js","/home/circleci/repo/src/styleProps/flexProps.js","/home/circleci/repo/src/utils/theme.js","/home/circleci/repo/src/styleProps/borderProps.js","/home/circleci/repo/src/styleProps/paddingProps.js","/home/circleci/repo/src/styleProps/positionProps.js","/home/circleci/repo/src/styleProps/marginProps.js","/home/circleci/repo/src/styleProps/textProps.js","/home/circleci/repo/src/styleProps/index.js","/home/circleci/repo/src/utils/spacing.js"],"names":["getPlacements","placement","secondaryPlacement","primaryPlacement","indexOf","split","getArrowPosition","primary","secondary","defaultPrimaryValue","defaultSecondaryValue","centerOffset","secondaryDirection","transformMap","top","right","bottom","left","Arrow","forwardRef","props","ref","size","distanceFromEdge","style","baseArrowStyles","arrowSize","useMemo","position","display","width","height","backgroundColor","border","borderLeftColor","borderBottomColor","transform","transformOrigin","clipPath","useArrowStyles","defaultArrowPosition","arrowStyle","displayName","defaultProps","Box","styled","div","positionProps","flexProps","marginProps","paddingProps","borderProps","textProps","propTypes","PropTypes","oneOf","flexAlign","basis","oneOfType","number","string","grow","bool","shrink","bold","caps","dimmed","fontSize","lineHeight","overflow","textAlign","Portal","targetElement","children","Boolean","window","document","ReactDOM","createPortal","body","object","Measurer","fillParent","ResizeAware","onResize","useRef","useSize","useEffect","PopOver","content","distance","innerRef","isOpen","offset","positionFixed","PopOverRenderer","renderer","autoDistance","useState","refMeasurements","setRefMeasurements","getRefModifier","enabled","order","fn","data","offsets","reference","modifiers","computeStyle","gpuAcceleration","flip","flipVariations","flipVariationsByContent","arrowProps","scheduleUpdate","arrow","resizeWatcher","popOverRef","background","color","borderRadius","padding","maxWidth","Text","span","align","useChartist","hostRef","options","type","preserveAspectRatio","chartRef","current","Chartist","detach","chartHeight","on","node","svg","_node","setAttribute","clientWidth","clientHeight","VisuallyHidden","visuallyHiddenMixin","ReadoutList","ul","ReadoutListItem","li","Cursor","p","yValue","alpha","theme","shade","lineStrength","getDefaultReadout","name","value","label","ChartTooltips","labels","getReadout","tooltipRenderer","hoveredPoint","setHoveredPoint","length","maxValue","Math","max","apply","map","index","getLabel","readOut","key","onMouseEnter","onMouseLeave","popover","ChartWrapper","getColorBlock","isEmpty","defaultOptions","showArea","showPoint","lineSmooth","fullWidth","chartPadding","axisX","showLabel","showGrid","axisY","low","getRandomPoints","Array","fill","random","SimpleChart","getTooltipReadout","emptyContent","hasData","series","mx","my","Wrapper","StripesPattern","id","viewBox","version","xmlns","xmlnsXlink","patternUnits","stroke","strokeWidth","fillRule","points","css","pxToRem","patternId","donut","donutWidth","donutSolid","startAngle","total","SimpleGauge","hasValue","fraction","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","this","Playground","Props","__codesandbox","isMDXComponent","borderValue","centerChildren","alignItems","justifyContent","ellipsis","textOverflow","whiteSpace","ie11Hack","overflowWrap","wordWrap","wordBreak","visuallyHidden","clip","alignMap","center","flex","minWidth","flexBasis","undefined","flexGrow","flexShrink","alignSelf","checkTheme","globals","ThemeSectionError","borderKeys","px","py","pt","pr","pb","pl","getSpacing","paddingTop","paddingRight","paddingBottom","paddingLeft","pos","z","zIndex","m","mt","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","wrap","alignStyles","typeScale","fontWeight","textTransform","text","textDimStrength","passThroughValues","shortCode","charAt","spacing","substring"],"mappings":"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","file":"static/js/src-charts-readme.0ec4b8dd.js","sourcesContent":["/* Given a popper.js placement string, this function\n * returns a CSS style object containing sensible default\n * styles for the placement string.\n *\n * The (customisable) defaults are:\n * - 100% for the primary direction\n * - 8 pixels for the secondary direction\n *\n * When no secondary direction is defined, styles for centering\n * are returned which can be customised with an offset:\n * `calc(50% + ${centerOffset})`\n *\n * Examples:\n * getArrowPosition('bottom-start') // returns {bottom: '100%', left: 8}\n * getArrowPosition('bottom-start', {defaultSecondaryValue: 4}) // returns {bottom: '100%', left: 4}\n * getArrowPosition('left-end') // returns {left: '100%', bottom: 8}\n * getArrowPosition('right') // returns {right: '100%', top: 50%}\n * getArrowPosition('right', {centerOffset: '-4px'}) // returns {right: '100%', top: calc(50% - 4px)}\n */\n\nfunction getSecondaryDirection(primary, secondary) {\n\tif (primary === 'left' || primary === 'right') {\n\t\treturn secondary === 'end' ? 'bottom' : 'top';\n\t} else {\n\t\treturn secondary === 'end' ? 'right' : 'left';\n\t}\n}\n\nexport function getPlacements(placement) {\n\tlet primaryPlacement = placement;\n\tlet secondaryPlacement;\n\tif (placement.indexOf('-') > -1) {\n\t\t[primaryPlacement, secondaryPlacement] = placement.split('-');\n\t}\n\treturn [primaryPlacement, secondaryPlacement];\n}\n\nfunction getArrowPosition(\n\tplacement,\n\t{defaultPrimaryValue = '100%', defaultSecondaryValue = 8, centerOffset}\n) {\n\tconst [primaryPlacement, secondaryPlacement] = getPlacements(placement);\n\tconst secondaryDirection = getSecondaryDirection(\n\t\tprimaryPlacement,\n\t\tsecondaryPlacement\n\t);\n\n\treturn {\n\t\t[primaryPlacement]: defaultPrimaryValue,\n\t\t[secondaryDirection]: secondaryPlacement\n\t\t\t? defaultSecondaryValue\n\t\t\t: centerOffset\n\t\t\t? `calc(50% + ${centerOffset})`\n\t\t\t: '50%',\n\t};\n}\n\nexport default getArrowPosition;\n","import React, {forwardRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\n\nimport getArrowPosition, {getPlacements} from './getArrowPosition';\n\nconst transformMap = {\n\ttop: 'translateY(-50%) rotate(135deg)',\n\tright: 'translateX(50%) rotate(225deg)',\n\tbottom: 'translateY(50%) rotate(-45deg)',\n\tleft: 'translateX(-50%) rotate(45deg)',\n};\n\nfunction useArrowStyles(primaryPlacement, arrowSize) {\n\tconst arrowStyles = useMemo(\n\t\t() => ({\n\t\t\tposition: 'absolute',\n\n\t\t\tdisplay: 'inline-block',\n\t\t\twidth: arrowSize + 'px',\n\t\t\theight: arrowSize + 'px',\n\n\t\t\tbackgroundColor: 'inherit',\n\t\t\tborder: 'inherit',\n\t\t\tborderLeftColor: 'transparent',\n\t\t\tborderBottomColor: 'transparent',\n\n\t\t\ttransform: transformMap[primaryPlacement],\n\t\t\ttransformOrigin: '50%',\n\t\t\tclipPath: 'polygon(0 0, 100% 0, 100% 100%)',\n\t\t}),\n\t\t[arrowSize, primaryPlacement]\n\t);\n\n\treturn arrowStyles;\n}\n\nconst Arrow = forwardRef((props, ref) => {\n\tconst {placement, size, distanceFromEdge, style} = props;\n\n\tconst [primaryPlacement] = getPlacements(placement);\n\tconst baseArrowStyles = useArrowStyles(primaryPlacement, size);\n\tconst defaultArrowPosition = useMemo(\n\t\t() =>\n\t\t\tgetArrowPosition(placement, {\n\t\t\t\tcenterOffset: `-${size / 2}px`,\n\t\t\t\tdefaultSecondaryValue: distanceFromEdge,\n\t\t\t}),\n\t\t[distanceFromEdge, placement, size]\n\t);\n\t// Don't let an empty primary position attribute reset the default\n\tif (style && style[primaryPlacement] === '') {\n\t\tdelete style[primaryPlacement];\n\t}\n\tconst arrowStyle = {\n\t\t...baseArrowStyles,\n\t\t...defaultArrowPosition,\n\t\t...style,\n\t};\n\n\treturn <span ref={ref} style={arrowStyle} />;\n});\n\nArrow.displayName = 'Arrow';\n\nArrow.defaultProps = {\n\tplacement: 'top',\n\tsize: 8,\n\tdistanceFromEdge: 8,\n};\n\nArrow.propTypes = {\n\t/** Controls how far the arrow is placed from the container's edge when the placement contains a '-start' or '-end' suffix. */\n\tdistanceFromEdge: PropTypes.number,\n\t/** The arrow will be placed on the opposing side of the defined direction: 'top', 'bottom', 'left', or 'right'. Add an optional suffix '-start' or '-end' to align the arrow to the start or end of the chosen direction. */\n\tplacement: PropTypes.string,\n\t/** Control the arrow size (length of side) */\n\tsize: PropTypes.number,\n};\n\nexport default Arrow;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport {\n\tpositionProps,\n\tflexProps,\n\tmarginProps,\n\tpaddingProps,\n\tborderProps,\n\ttextProps,\n} from '../styleProps';\n\nconst Box = styled.div`\n\t${positionProps}\n\t${flexProps}\n\t${marginProps}\n\t${paddingProps}\n\t${borderProps}\n\t${textProps}\n`;\n\nBox.propTypes = {\n\tposition: PropTypes.oneOf(['static', 'relative', 'absolute', 'fixed']),\n\tborder: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\tflexAlign: PropTypes.oneOf(['top', 'left', 'center', 'bottom', 'right']),\n\tbasis: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\tgrow: PropTypes.bool,\n\tshrink: PropTypes.bool,\n\tbold: PropTypes.bool,\n\tcaps: PropTypes.oneOf(['all', 'first']),\n\tdimmed: PropTypes.bool,\n\tfontSize: PropTypes.string,\n\tlineHeight: PropTypes.number,\n\toverflow: PropTypes.oneOf(['ellipsis', 'wrap']),\n\ttextAlign: PropTypes.oneOf(['left', 'center', 'right']),\n};\n\nexport default Box;\n","import ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nfunction canUseDom() {\n\treturn Boolean(typeof window !== 'undefined' && window.document);\n}\n\nfunction Portal({targetElement, children}) {\n\tif (!canUseDom) return null;\n\tif (!targetElement) return children;\n\n\treturn ReactDOM.createPortal(children, targetElement);\n}\n\nPortal.defaultProps = {\n\ttargetElement: document.body,\n};\n\nPortal.propTypes = {\n\t/**\n\t * Element to render the Portal's children into.\n\t * Must be an object, e.g. the result of a getElementById() call\n\t */\n\ttargetElement: PropTypes.object,\n};\n\nexport default Portal;\n","import React, {useEffect, useRef} from 'react';\nimport {useSize} from 'react-hook-size';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport {fillParent} from '../mixins';\n\nconst Measurer = styled.div`\n\t${fillParent}\n\n\topacity: 0;\n\toverflow: hidden;\n\tpointer-events: none;\n\tz-index: -1;\n`;\n\nfunction ResizeAware({onResize}) {\n\tconst ref = useRef();\n\tconst {width, height} = useSize(ref);\n\n\tuseEffect(() => {\n\t\tonResize();\n\t}, [width, height, onResize]);\n\n\treturn <Measurer ref={ref} />;\n}\n\nResizeAware.propTypes = {\n\tonResize: PropTypes.func.isRequired,\n};\n\nexport default ResizeAware;\n","import React, {useState} from 'react';\nimport {Manager, Reference, Popper, placements} from 'react-popper';\nimport PropTypes from 'prop-types';\n\nimport Arrow from '../Arrow';\nimport Portal from '../Portal';\n\nimport ResizeAware from './ResizeAware';\n\nfunction PopOver(props) {\n\tconst {\n\t\tarrowSize,\n\t\tchildren,\n\t\tcontent,\n\t\tdistance,\n\t\tinnerRef,\n\t\tisOpen,\n\t\toffset,\n\t\tplacement,\n\t\tpositionFixed,\n\t\trenderer: PopOverRenderer,\n\t} = props;\n\n\tconst autoDistance = +arrowSize / 2 + +distance;\n\n\tconst [refMeasurements, setRefMeasurements] = useState({});\n\n\tconst getRefModifier = {\n\t\tenabled: true,\n\t\torder: 950,\n\t\tfn: data => {\n\t\t\tif (data.offsets && data.offsets.reference) {\n\t\t\t\tsetRefMeasurements(data.offsets.reference);\n\t\t\t}\n\t\t\treturn data;\n\t\t},\n\t};\n\n\treturn (\n\t\t<Manager>\n\t\t\t<Reference innerRef={innerRef}>{children}</Reference>\n\t\t\t<Popper\n\t\t\t\tpositionFixed={positionFixed}\n\t\t\t\tplacement={placement}\n\t\t\t\tmodifiers={{\n\t\t\t\t\toffset: {offset: `${offset}, ${autoDistance}`},\n\t\t\t\t\tcomputeStyle: {gpuAcceleration: false},\n\t\t\t\t\tflip: {flipVariations: true, flipVariationsByContent: true},\n\t\t\t\t\tgetRefModifier,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ref, style, placement, arrowProps, scheduleUpdate}) => {\n\t\t\t\t\tconst arrow = arrowSize > 0 && (\n\t\t\t\t\t\t<Arrow\n\t\t\t\t\t\t\tsize={arrowSize}\n\t\t\t\t\t\t\tplacement={placement}\n\t\t\t\t\t\t\tref={arrowProps.ref}\n\t\t\t\t\t\t\tstyle={arrowProps.style}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\n\t\t\t\t\tconst resizeWatcher = (\n\t\t\t\t\t\t<ResizeAware onResize={scheduleUpdate} />\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<PopOverRenderer\n\t\t\t\t\t\t\tpopOverRef={ref}\n\t\t\t\t\t\t\tstyle={style}\n\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\t\tarrow={arrow}\n\t\t\t\t\t\t\trefMeasurements={refMeasurements}\n\t\t\t\t\t\t\tresizeWatcher={resizeWatcher}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Popper>\n\t\t</Manager>\n\t);\n}\n\nfunction DefaultPopover({\n\tpopOverRef,\n\tisOpen,\n\tstyle,\n\tcontent,\n\tarrow,\n\tresizeWatcher,\n}) {\n\tif (!isOpen) return null;\n\n\treturn (\n\t\t<Portal targetElement={document.body}>\n\t\t\t<span\n\t\t\t\tref={popOverRef}\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: 'black',\n\t\t\t\t\tcolor: 'white',\n\t\t\t\t\tborderRadius: '3px',\n\t\t\t\t\tpadding: '5px 10px',\n\t\t\t\t\tmaxWidth: '100%',\n\t\t\t\t\t...style,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t\t{arrow}\n\t\t\t\t{resizeWatcher}\n\t\t\t</span>\n\t\t</Portal>\n\t);\n}\n\nPopOver.defaultProps = {\n\tarrowSize: 12,\n\tdistance: 0,\n\toffset: 0,\n\tplacement: 'top',\n\tpositionFixed: true,\n\trenderer: DefaultPopover,\n};\n\nPopOver.propTypes = {\n\t/** Control the popover's arrow size */\n\tarrowSize: PropTypes.number,\n\t/** Child function, providing a ref that needs to be passed to the wrapped reference component */\n\tchildren: PropTypes.func.isRequired,\n\t/** Set the content of the popover */\n\tcontent: PropTypes.node,\n\t/** Control the popover's distance from its reference element */\n\tdistance: PropTypes.number,\n\t/** Access the reference component's ref */\n\tinnerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\t/** Control whether the popover is shown or not */\n\tisOpen: PropTypes.bool,\n\t/** Shift the popover along the corss-axix */\n\toffset: PropTypes.number,\n\t/** One of 'top', 'bottom', 'left', or 'right'. Add an optional suffix '-start' or '-end' to align the popover to the start or end of the chosen direction. */\n\tplacement: PropTypes.oneOf(placements),\n\t/** Control whether the popover should be positioned using \"position: absolute\" or \"position: fixed\" */\n\tpositionFixed: PropTypes.bool,\n\t/**\n\t * Customise popover rendering (e.g. for custom styling, transitions, etc).\n\t * Should be a React component that takes the props\n\t * `popOverRef`, `isOpen`, `style`, `content`, `arrow`, `resizeWatcher`,\n\t * and `refMeasurements`\n\t */\n\trenderer: PropTypes.elementType,\n};\n\nexport {Arrow};\n\nexport default PopOver;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {textProps, marginProps, paddingProps} from '../styleProps';\n\nconst Text = styled.span`\n\t${props =>\n\t\ttextProps({\n\t\t\t...props,\n\t\t\ttextAlign: props.align,\n\t\t\tfontSize: props.size,\n\t\t})}\n\t${marginProps}\n\t${paddingProps}\n`;\n\nText.propTypes = {\n\tbold: PropTypes.bool,\n\tcaps: PropTypes.oneOf(['all', 'first']),\n\tdimmed: PropTypes.bool,\n\tfontSize: PropTypes.string,\n\tlineHeight: PropTypes.number,\n\toverflow: PropTypes.oneOf(['ellipsis', 'wrap']),\n\ttextAlign: PropTypes.oneOf(['left', 'center', 'right']),\n};\n\nexport default Text;\n","import {useRef, useEffect} from 'react';\nimport Chartist from 'chartist';\n\nfunction useChartist(\n\thostRef,\n\t{data, options, type = 'Line', preserveAspectRatio}\n) {\n\tconst chartRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tchartRef.current = new Chartist[type](hostRef.current, data, options);\n\t\treturn function cleanUp() {\n\t\t\tchartRef.current.detach();\n\t\t};\n\t}, [data, hostRef, options, type]);\n\n\tconst chartHeight = options && options.height;\n\n\t// This effect adds a viewBox attribute to the generated SVG element,\n\t// which allows it to grow/shwink along with the container when the size\n\t// of it changes - in case the change is not due to a window resize,\n\t// which Chartist already handles by redrawing the chart.\n\tuseEffect(() => {\n\t\tfunction updateViewBox(data) {\n\t\t\tconst node = data.svg && data.svg._node;\n\t\t\tif (node) {\n\t\t\t\tnode.setAttribute(\n\t\t\t\t\t'viewBox',\n\t\t\t\t\t`0 0 ${node.clientWidth} ${chartHeight ||\n\t\t\t\t\t\tnode.clientHeight}`\n\t\t\t\t);\n\t\t\t\tif (preserveAspectRatio) {\n\t\t\t\t\tnode.setAttribute(\n\t\t\t\t\t\t'preserveAspectRatio',\n\t\t\t\t\t\tpreserveAspectRatio\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchartRef.current.on('created', updateViewBox);\n\t}, [chartRef, preserveAspectRatio, chartHeight]);\n}\n\nexport default useChartist;\n","import styled from 'styled-components';\nimport {visuallyHidden as visuallyHiddenMixin} from '../mixins';\n\nconst VisuallyHidden = styled.span`\n\t${visuallyHiddenMixin}\n`;\n\nexport default VisuallyHidden;\n","import React, {Fragment, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {alpha} from '../../utils/colors';\n\nimport PopOver from '../../PopOver';\nimport Text from '../../Text';\nimport VisuallyHidden from '../../VisuallyHidden';\n\nconst ReadoutList = styled.ul`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0;\n\tdisplay: flex;\n\twidth: 100%;\n\tmargin: 0;\n\tpadding: 4px 0;\n\tlist-style-type: none;\n`;\n\nconst ReadoutListItem = styled.li`\n\tposition: relative;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: flex-end;\n\tflex: 1;\n\ttext-align: center;\n\topacity: 0;\n\n\t&:first-child,\n\t&:last-child {\n\t\tflex: 0.5;\n\t}\n\n\t&:first-child {\n\t\tjustify-content: flex-start;\n\t}\n\n\t&:last-child {\n\t\tjustify-content: flex-end;\n\t}\n\n\t&:hover {\n\t\topacity: 1;\n\t}\n`;\n\nconst Cursor = styled.span`\n\tdisplay: block;\n\theight: ${p => p.yValue * 100}%;\n\twidth: 1px;\n\tbackground-color: ${p => alpha(p.theme.shade, p.theme.lineStrength)};\n`;\nCursor.defaultProps = {\n\tyValue: 1,\n};\n\n// Return a label from the given array of labels\n// and an index. If the index is higher than the\n// number of labels (i.e. if there are more items\n// than labels), the labels are treated like they're\n// repeating.\nfunction getLabel(labels, index) {\n\tif (!labels || !labels.length) return null;\n\n\treturn labels[index] || labels[index % labels.length];\n}\n\nfunction getDefaultReadout(name, value, label) {\n\treturn (\n\t\t<Fragment>\n\t\t\t{label && (\n\t\t\t\t<Text bold size=\"m\" lineHeight={1}>\n\t\t\t\t\t{label}\n\t\t\t\t\t<br />\n\t\t\t\t</Text>\n\t\t\t)}\n\t\t\t{name}\n\t\t\t{name ? ':' : ''} {value}\n\t\t</Fragment>\n\t);\n}\n\nfunction ChartTooltips({\n\tdata,\n\tlabels,\n\tname,\n\tgetReadout = getDefaultReadout,\n\ttooltipRenderer,\n}) {\n\tconst [hoveredPoint, setHoveredPoint] = useState(null);\n\n\tif (!data || !data.length) return null;\n\n\tconst maxValue = Math.max.apply(null, data);\n\n\treturn (\n\t\t<ReadoutList>\n\t\t\t{data.map((value, index) => {\n\t\t\t\tconst label = getLabel(labels, index);\n\t\t\t\tconst readOut = getReadout(name, value, label);\n\t\t\t\treturn (\n\t\t\t\t\t<ReadoutListItem\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tonMouseEnter={() => setHoveredPoint(index)}\n\t\t\t\t\t\tonMouseLeave={() => setHoveredPoint(null)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<PopOver\n\t\t\t\t\t\t\tisOpen={hoveredPoint === index}\n\t\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\t\tdistance={8}\n\t\t\t\t\t\t\tcontent={readOut}\n\t\t\t\t\t\t\trenderer={tooltipRenderer}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{popover => (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<VisuallyHidden>{readOut}</VisuallyHidden>\n\t\t\t\t\t\t\t\t\t<Cursor\n\t\t\t\t\t\t\t\t\t\tref={popover.ref}\n\t\t\t\t\t\t\t\t\t\tyValue={value / maxValue}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</PopOver>\n\t\t\t\t\t</ReadoutListItem>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ReadoutList>\n\t);\n}\n\nChartTooltips.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\tlabels: PropTypes.array,\n\tname: PropTypes.string,\n\tgetReadout: PropTypes.func,\n\ttooltipRenderer: PropTypes.func,\n};\n\nexport default ChartTooltips;\n","import React, {useRef} from 'react';\nimport styled from 'styled-components';\n\nimport {getColorBlock} from '../../utils/colors';\n\nimport Box from '../../Box';\n\nimport useChartist from '../useChartist';\nimport ChartTooltips from './ChartTooltips';\n\nconst ChartWrapper = styled.div`\n\tposition: relative;\n\n\t> svg {\n\t\tvertical-align: middle;\n\t\tcolor: ${p => getColorBlock(p.color, p.theme)};\n\t}\n\t.ct-line {\n\t\tfill: none;\n\t\tstroke: currentColor;\n\t\tstroke-width: 4px;\n\t}\n\t.ct-area {\n\t\tfill: currentColor;\n\t\topacity: 0.1;\n\t}\n\t.ct-grid {\n\t\tstroke: black;\n\t\topacity: 0.1;\n\t}\n\n\t${p =>\n\t\tp.isEmpty &&\n\t\t`\n\t\t.ct-line {\n\t\t\topacity: 0.2;\n\t\t\tstroke-dasharray: 10;\n\t\t}\n\t\t.ct-area {\n\t\t\topacity: 0;\n\t\t}\n\t`}\n`;\n\nconst defaultOptions = {\n\tshowArea: true,\n\tshowPoint: false,\n\tlineSmooth: false,\n\tfullWidth: true,\n\tchartPadding: {\n\t\ttop: 4,\n\t\tbottom: 4,\n\t\tleft: 0,\n\t\tright: 0,\n\t},\n\taxisX: {\n\t\toffset: 0,\n\t\tshowLabel: false,\n\t\tshowGrid: false,\n\t},\n\taxisY: {\n\t\toffset: 0,\n\t\tshowLabel: false,\n\t\tshowGrid: false,\n\t\tlow: 0,\n\t},\n};\n\nfunction getRandomPoints(length = 7) {\n\treturn Array(length)\n\t\t.fill(1)\n\t\t.map(() => Math.random());\n}\n\nfunction SimpleChart({\n\tlabels,\n\tdata,\n\theight,\n\tname,\n\tcolor = 'links',\n\ttooltipRenderer,\n\tgetTooltipReadout,\n\tisEmpty,\n\temptyContent = 'No data to display',\n}) {\n\tconst hostRef = useRef(null);\n\n\tconst options = {\n\t\t...defaultOptions,\n\t\theight,\n\t};\n\n\tconst hasData = !isEmpty && data && data.length !== 0;\n\n\tuseChartist(hostRef, {\n\t\ttype: 'Line',\n\t\tdata: {\n\t\t\tlabels,\n\t\t\tseries: [hasData ? data : getRandomPoints()],\n\t\t},\n\t\toptions,\n\t\tpreserveAspectRatio: 'none',\n\t});\n\n\treturn (\n\t\t<ChartWrapper ref={hostRef} color={color} isEmpty={!hasData}>\n\t\t\t{hasData ? (\n\t\t\t\t<ChartTooltips\n\t\t\t\t\tdata={data}\n\t\t\t\t\tlabels={labels}\n\t\t\t\t\tname={name}\n\t\t\t\t\ttooltipRenderer={tooltipRenderer}\n\t\t\t\t\tgetReadout={getTooltipReadout}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Box dimmed bottom right position=\"absolute\" mx=\"xs\" my=\"xxs\">\n\t\t\t\t\t{emptyContent}\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</ChartWrapper>\n\t);\n}\n\nexport default SimpleChart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {getColorBlock} from '../../utils/colors';\n\nconst Wrapper = styled.div`\n\theight: 0;\n\tcolor: ${p => getColorBlock(p.color, p.theme)};\n`;\n\nfunction StripesPattern({id, color}) {\n\treturn (\n\t\t<Wrapper color={color}>\n\t\t\t<svg\n\t\t\t\twidth=\"0\"\n\t\t\t\theight=\"0\"\n\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\tversion=\"1.1\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\txmlnsXlink=\"http://www.w3.org/1999/xlink\"\n\t\t\t>\n\t\t\t\t<defs>\n\t\t\t\t\t<pattern\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tpatternUnits=\"userSpaceOnUse\"\n\t\t\t\t\t\twidth=\"20\"\n\t\t\t\t\t\theight=\"20\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<g\n\t\t\t\t\t\t\tstroke=\"none\"\n\t\t\t\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<g fill=\"currentColor\">\n\t\t\t\t\t\t\t\t<polygon points=\"0 20 20 0 10 0 0 10\" />\n\t\t\t\t\t\t\t\t<polygon points=\"20 20 20 10 10 20\" />\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</pattern>\n\t\t\t\t</defs>\n\t\t\t</svg>\n\t\t</Wrapper>\n\t);\n}\n\nexport default StripesPattern;\n","import React, {useRef} from 'react';\nimport styled, {css} from 'styled-components';\n\nimport {pxToRem} from '../../utils/units';\nimport {getColorBlock} from '../../utils/colors';\n\nimport Box from '../../Box';\n\nimport useChartist from '../useChartist';\nimport StripesPattern from './StripesPattern';\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\toverflow: hidden;\n\t${p =>\n\t\tp.height &&\n\t\tcss`\n\t\t\theight: ${pxToRem(p.height)};\n\t\t`}\n\n\t> svg {\n\t\tvertical-align: middle;\n\t\tcolor: ${p => getColorBlock(p.color, p.theme)};\n\t\t${p =>\n\t\t\tp.patternId &&\n\t\t\t`\n\t\t\topacity: 0.2;\n\t\t`}\n\t}\n\t.ct-slice-donut {\n\t\tstroke: none;\n\t\tfill: none;\n\t}\n\t.ct-series-a {\n\t\tfill: ${p =>\n\t\t\tp.patternId ? `url(#${p.patternId}) currentColor` : 'currentColor'};\n\t}\n\t.ct-series-b {\n\t\tfill: currentColor;\n\t\topacity: 0.2;\n\t}\n`;\n\nconst defaultOptions = {\n\tdonut: true,\n\tdonutWidth: '80%',\n\tdonutSolid: true,\n\tstartAngle: 270,\n\ttotal: 200,\n\tshowLabel: false,\n\tchartPadding: 0,\n};\n\nfunction SimpleGauge({\n\tvalue,\n\theight,\n\tcolor = 'links',\n\tisEmpty,\n\temptyContent = 'No data to display',\n}) {\n\tconst hostRef = useRef(null);\n\n\tconst hasValue = typeof value !== 'undefined' && value !== null && !isEmpty;\n\n\tconst fraction = (hasValue ? value : Math.random()) * 100;\n\n\tconst options = {\n\t\t...defaultOptions,\n\t\theight: height * 2,\n\t};\n\n\tuseChartist(hostRef, {\n\t\ttype: 'Pie',\n\t\tdata: {\n\t\t\tseries: [fraction, 100 - fraction],\n\t\t},\n\t\toptions,\n\t});\n\n\tconst patternId = `gauge-chart-${Math.random()}`;\n\n\treturn (\n\t\t<Wrapper\n\t\t\tref={hostRef}\n\t\t\theight={height}\n\t\t\tcolor={color}\n\t\t\tpatternId={hasValue ? null : patternId}\n\t\t>\n\t\t\t{!hasValue && (\n\t\t\t\t<Box dimmed bottom right position=\"absolute\" mx=\"xs\" my=\"xxs\">\n\t\t\t\t\t{emptyContent}\n\t\t\t\t\t<StripesPattern color={color} id={patternId} />\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</Wrapper>\n\t);\n}\n\nexport default SimpleGauge;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport {Playground, Props} from 'docz';\nimport SimpleChart from './SimpleChart';\nimport SimpleGauge from './SimpleGauge';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"charts\"\n    }}>{`Charts`}</h1>\n    <p>{`base5-UI provides a few very simple charts to illustrate trends and metrics in your UI.`}</p>\n    <p>{`The chart's colours can be customised by providing a `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` name from either the theme's `}<inlineCode parentName=\"p\">{`colorBlock`}</inlineCode>{` or current `}<inlineCode parentName=\"p\">{`section`}</inlineCode>{` palette, or any valid CSS color.`}</p>\n    <p>{`Both charts will take up the full width of their container and their height can be set using the `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` prop.`}</p>\n    <p>{`The charts are generated using `}<a parentName=\"p\" {...{\n        \"href\": \"http://gionkunz.github.io/chartist-js\"\n      }}>{`Chartist.js`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"simplechart\"\n    }}>{`SimpleChart`}</h2>\n    <p>{`Takes a `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` prop that must contain of a simple array of number values which will then be plotted out as a pretty graph.`}</p>\n    <p>{`You can also provide a `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` prop for the tooltip value and an array of `}<inlineCode parentName=\"p\">{`labels`}</inlineCode>{` for the x axis. When you specify more data points than labels, the labels will repeat to match the number of data values.`}</p>\n    <Playground __position={0} __code={'<SimpleChart data={[5, 3, 4, 0, 5, 2, 1]} height={125} color=\\\"links\\\" />\\n<br />\\n<SimpleChart\\n  name=\\\"Opens\\\"\\n  data={[2, 1, 9, 6, 6, 3, 7, 3, 6, 7, 8, 10]}\\n  labels={[\\'Mon\\', \\'Tue\\', \\'Wed\\']}\\n  height={125}\\n  color=\\\"highlight\\\"\\n/>\\n<br />\\n<SimpleChart isEmpty height={125} color=\\\"positive\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      SimpleChart,\n      SimpleGauge\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<SimpleChart data={[5, 3, 4, 0, 5, 2, 1]} height={125} color=\"links\" mdxType=\"SimpleChart\" />\n\t<br />\n\t<SimpleChart name=\"Opens\" data={[2, 1, 9, 6, 6, 3, 7, 3, 6, 7, 8, 10]} labels={['Mon', 'Tue', 'Wed']} height={125} color=\"highlight\" mdxType=\"SimpleChart\" />\n\t<br />\n\t<SimpleChart isEmpty height={125} color=\"positive\" mdxType=\"SimpleChart\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"simplegauge\"\n    }}>{`SimpleGauge`}</h2>\n    <p>{`Takes a single `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` prop that must be a Number value between `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{` which will then be plotted out as a pretty (half of a) pie chart.`}</p>\n    <Playground __position={1} __code={'<SimpleGauge value={0.3} height={125} />\\n<br />\\n<SimpleGauge value={0.8} height={80} color=\\\"positive\\\" />\\n<br />\\n<SimpleGauge isEmpty height={80} color=\\\"negative\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      SimpleChart,\n      SimpleGauge\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<SimpleGauge value={0.3} height={125} mdxType=\"SimpleGauge\" />\n\t<br />\n\t<SimpleGauge value={0.8} height={80} color=\"positive\" mdxType=\"SimpleGauge\" />\n\t<br />\n\t<SimpleGauge isEmpty height={80} color=\"negative\" mdxType=\"SimpleGauge\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import {alpha} from '../utils/colors';\n\nfunction borderValue(theme) {\n\treturn `1px solid ${alpha(theme.shade, theme.lineStrength)}`;\n}\n\nexport default borderValue;\n","const centerChildren = {\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n};\n\nexport default centerChildren;\n","const ellipsis = {\n\toverflow: 'hidden',\n\ttextOverflow: 'ellipsis',\n\twhiteSpace: 'nowrap',\n};\n\nexport default ellipsis;\n","const fillParent = {\n\tposition: 'absolute',\n\ttop: 0,\n\tright: 0,\n\tbottom: 0,\n\tleft: 0,\n};\n\nexport default fillParent;\n","/* Use this as a media query to apply styles only on IE 11 */\n\nconst ie11Hack =\n\t'screen and (-ms-high-contrast: active), (-ms-high-contrast: none)';\n\nexport default ie11Hack;\n","const overflowWrap = {\n\toverflowWrap: 'break-word',\n\twordWrap: 'break-word',\n\n\twordBreak: 'break-word',\n};\n\nexport default overflowWrap;\n","const visuallyHidden = {\n\tposition: 'absolute',\n\toverflow: 'hidden',\n\twidth: 1,\n\theight: 1,\n\tpadding: 0,\n\tclip: 'rect(0 0 0 0)',\n\tborder: 0,\n};\n\nexport default visuallyHidden;\n","import borderValue from './borderValue';\nimport centerChildren from './centerChildren';\nimport ellipsis from './ellipsis';\nimport fillParent from './fillParent';\nimport ie11Hack from './ie11Hack';\nimport overflowWrap from './overflowWrap';\nimport visuallyHidden from './visuallyHidden';\n\nexport {\n\tborderValue,\n\tcenterChildren,\n\tellipsis,\n\tfillParent,\n\tie11Hack,\n\toverflowWrap,\n\tvisuallyHidden,\n};\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {checkTheme} from '../utils/theme';\n\nimport {borderValue} from '../mixins';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: borderValue(theme),\n\t};\n}\n\nexport default borderProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis: {\n\t\tdisplay: 'block',\n\t\t...ellipsis,\n\t},\n\twrap: {\n\t\tdisplay: 'block',\n\t\t...overflowWrap,\n\t},\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\tlet alignStyles;\n\tif (textAlign) {\n\t\talignStyles = {\n\t\t\tdisplay: 'block',\n\t\t\twidth: '100%',\n\t\t\ttextAlign,\n\t\t};\n\t}\n\n\treturn {\n\t\t...alignStyles,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps ? textTransformMap[caps] : undefined,\n\t\tcolor: dimmed ? alpha(theme.text, theme.textDimStrength) : undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import borderProps from './borderProps';\nimport flexProps from './flexProps';\nimport paddingProps from './paddingProps';\nimport positionProps from './positionProps';\nimport marginProps from './marginProps';\nimport textProps from './textProps';\n\nexport {\n\tborderProps,\n\tflexProps,\n\tpaddingProps,\n\tpositionProps,\n\tmarginProps,\n\ttextProps,\n};\n","import {pxToRem} from './units';\n\nconst passThroughValues = ['auto'];\n\nfunction getSpacing(shortCode, theme) {\n\tif (shortCode === undefined || shortCode === null || shortCode === false) {\n\t\treturn shortCode;\n\t}\n\n\tif (\n\t\t(typeof shortCode !== 'number' && typeof shortCode !== 'string') ||\n\t\tshortCode === '0'\n\t) {\n\t\treturn '0';\n\t}\n\n\tif (typeof shortCode === 'number') {\n\t\treturn pxToRem(shortCode);\n\t}\n\n\tif (passThroughValues.indexOf(shortCode) > -1) {\n\t\treturn shortCode;\n\t}\n\n\tif (shortCode.charAt(0) === '-') {\n\t\treturn '-' + theme.globals.spacing[shortCode.substring(1)];\n\t} else {\n\t\treturn theme.globals.spacing[shortCode];\n\t}\n}\n\nexport {getSpacing};\n"],"sourceRoot":""}