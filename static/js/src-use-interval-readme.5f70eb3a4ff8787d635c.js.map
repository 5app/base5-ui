{"version":3,"sources":["/home/circleci/repo/src/useInterval/README.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mXAYMA,G,2CAAc,IAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,eADR,eAGA,+GACA,yDAAwC,+BAAGC,WAAW,KAAQ,CAC1D,KAAQ,4EAD4B,sDAGxC,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,yQ,gLAmBTJ,EAAWK,gBAAiB","file":"static/js/src-use-interval-readme.f0e5e565.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport {Playground, Props} from 'docz';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"useinterval\"\n    }}>{`useInterval`}</h1>\n    <p>{`A hook for safely & declaratively setting up intervals in functional React components.`}</p>\n    <p>{`Based on Dan Abramov's blog post `}<a parentName=\"p\" {...{\n        \"href\": \"https://overreacted.io/making-setinterval-declarative-with-react-hooks/\"\n      }}>{`\"Making setInterval Declarative with React Hooks\"`}</a></p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import useInterval from 'base5-ui/useInterval';\n\nfunction Counter() {\n    const [count, setCount] = useState(0);\n\n    useInterval(() => {\n        // Your custom logic here\n        setCount(count + 1);\n    }, 1000);\n\n    return <h1>{count}</h1>;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}