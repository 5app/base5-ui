{"version":3,"sources":["/home/circleci/repo/src/Button/index.js","/home/circleci/repo/src/Button/README.mdx","/home/circleci/repo/src/ButtonCore/index.js","/home/circleci/repo/src/InlineList/index.js","/home/circleci/repo/src/mixins/borderValue.js","/home/circleci/repo/src/mixins/centerChildren.js","/home/circleci/repo/src/mixins/ellipsis.js","/home/circleci/repo/src/mixins/fillParent.js","/home/circleci/repo/src/mixins/ie11Hack.js","/home/circleci/repo/src/mixins/overflowWrap.js","/home/circleci/repo/src/mixins/visuallyHidden.js","/home/circleci/repo/src/mixins/index.js","/home/circleci/repo/src/styleProps/flexProps.js","/home/circleci/repo/src/utils/theme.js","/home/circleci/repo/src/styleProps/borderProps.js","/home/circleci/repo/src/styleProps/displayProps.js","/home/circleci/repo/src/styleProps/paddingProps.js","/home/circleci/repo/src/styleProps/positionProps.js","/home/circleci/repo/src/styleProps/marginProps.js","/home/circleci/repo/src/styleProps/textProps.js","/home/circleci/repo/src/styleProps/index.js"],"names":["Wrapper","styled","buttonRef","otherProps","round","square","fullWidth","color","size","align","ButtonCore","ref","positionProps","p","css","pxToRem","marginProps","theme","globals","typeScale","m","borderRadius","buttons","s","xs","text","background","links","alpha","shade","shadeStrength","fillParent","lineStrength","ThreePx","FocusRing","span","HoverShade","Math","min","Content","alignMap","ButtonText","spacing","xxs","Button","forwardRef","props","as","children","icon","iconRight","title","iconEl","Icon","name","position","forwardedAs","aria-label","propTypes","PropTypes","string","bool","oneOf","layoutProps","MDXLayout","MDXContent","components","mdxType","__position","__code","__scope","this","Playground","Props","InlineList","__codesandbox","isActive","of","isMDXComponent","Clickable","button","type","isDisabled","disabled","className","classes","classNames","defaultType","defaultProps","Item","li","ul","splitBy","React","Children","map","child","i","key","borderValue","centerChildren","display","alignItems","justifyContent","ellipsis","overflow","textOverflow","whiteSpace","top","right","bottom","left","ie11Hack","overflowWrap","wordWrap","wordBreak","visuallyHidden","width","height","padding","clip","border","center","flexProps","flexAlign","basis","grow","shrink","flex","minWidth","flexBasis","undefined","flexGrow","flexShrink","alignSelf","checkTheme","ThemeSectionError","borderKeys","borderProps","supportedDisplayValues","displayProps","includes","console","warn","paddingProps","px","py","pt","pr","pb","pl","getSpacing","paddingTop","paddingRight","paddingBottom","paddingLeft","pos","z","zIndex","mx","my","mt","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","wrap","textProps","bold","caps","dimmed","fontSize","lineHeight","textAlign","fontWeight","textTransform","textDimStrength"],"mappings":"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","file":"static/js/src-button-readme.77a6e8e1.js","sourcesContent":["import React, {forwardRef} from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nimport {alpha} from '../utils/colors';\nimport {pxToRem} from '../utils/units';\nimport {fillParent} from '../mixins';\n\nimport {positionProps, marginProps} from '../styleProps';\nimport {alignMap} from '../styleProps/flexProps';\n\nimport ButtonCore from '../ButtonCore';\nimport Icon from '../Icon';\n\nimport 'focus-visible';\n\nconst PropFilteringWrapper = ({\n\tbuttonRef,\n\tround,\n\tsquare,\n\tfullWidth,\n\tcolor,\n\tsize,\n\talign,\n\t...otherProps\n}) => <ButtonCore ref={buttonRef} {...otherProps} />;\n\nconst Wrapper = styled(PropFilteringWrapper)`\n\t/* Structure, size & spacing */\n\n\t${positionProps}\n\n\t${p =>\n\t\tp.fullWidth &&\n\t\tcss`\n\t\t\tdisplay: block;\n\t\t\twidth: 100%; /* needed for button element */\n\t\t`}\n\tpadding: ${pxToRem(12)};\n\t${marginProps}\n\n\tfont-size: ${p => p.theme.globals.typeScale.m};\n\tfont-weight: 600;\n\tline-height: 1;\n\ttext-align: ${p => p.align || 'center'};\n\ttext-decoration: none;\n\n\t${p =>\n\t\t!p.square &&\n\t\tcss`\n\t\t\tborder-radius: ${p.round\n\t\t\t\t? '2rem'\n\t\t\t\t: pxToRem(p.theme.globals.borderRadius.buttons)};\n\t\t`}\n\n\t${p =>\n\t\tp.size === 'large' &&\n\t\tcss`\n\t\t\tpadding: ${pxToRem(19)};\n\t\t`}\n\n\t${p =>\n\t\tp.size === 'medium' &&\n\t\tcss`\n\t\t\tpadding: ${pxToRem(8)};\n\t\t\tfont-size: ${p => p.theme.globals.typeScale.s};\n\t\t`}\n\n\t${p =>\n\t\tp.size === 'small' &&\n\t\tcss`\n\t\t\tpadding: ${pxToRem(5)};\n\t\t\tfont-size: ${p => p.theme.globals.typeScale.xs};\n\t\t`}\n\n\t/* Colours */\n\n\t${p =>\n\t\t(p.color === 'default' ||\n\t\t\tp.color === 'primary' ||\n\t\t\tp.color === 'important') &&\n\t\tcss`\n\t\t\tcolor: ${p => p.theme.globals.buttons[p.color].text};\n\t\t\tbackground-color: ${p =>\n\t\t\t\tp.theme.globals.buttons[p.color].background};\n\t\t`}\n\n\t${p =>\n\t\tp.color === 'transparent' &&\n\t\tcss`\n\t\t\tcolor: ${p => p.theme.links};\n\t\t\tbackground-color: transparent;\n\t\t`}\n\n\t${p =>\n\t\tp.color === 'shaded' &&\n\t\tcss`\n\t\t\tcolor: ${p => p.theme.links};\n\t\t\tbackground-color: ${p =>\n\t\t\t\talpha(p.theme.shade, p.theme.shadeStrength)};\n\t\t`}\n\n\t/* Add a border to default button */\n\t${p =>\n\t\tp.color === 'default' &&\n\t\tcss`\n\t\t\t&::before {\n\t\t\t\tcontent: '';\n\t\t\t\t${fillParent}\n\t\t\t\tborder-radius: inherit;\n\t\t\t\tborder: 1px solid\n\t\t\t\t\t${p => alpha(p.theme.shade, p.theme.lineStrength)};\n\t\t\t}\n\t\t`}\n\n\t&.focus-visible {\n\t\toutline: none;\n\t}\n\n\t&.is-disabled {\n\t\tcolor: white;\n\t\tbackground-color: ${alpha('black', 0.3)};\n\t\tborder-color: transparent;\n\t\topacity: 0.3;\n\t\ttext-shadow: 0 1px 3px black;\n\t\tcursor: not-allowed;\n\n\t\t${p =>\n\t\t\t(p.color === 'transparent' || p.color === 'shaded') &&\n\t\t\tcss`\n\t\t\t\tcolor: ${p => p.theme.text};\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder-color: transparent;\n\t\t\t\ttext-shadow: none;\n\t\t\t`}\n\t}\n`;\n\nconst ThreePx = pxToRem(3);\n\nconst FocusRing = styled.span`\n\t${fillParent}\n\tborder-radius: inherit;\n\n\tbox-shadow: 0 0 0 ${ThreePx}\n\t\t${p => alpha(p.theme.shade, p.theme.lineStrength + 0.05)};\n\n\topacity: 0;\n\ttransition: opacity 250ms linear;\n\twill-change: opacity;\n\n\t${Wrapper}.focus-visible > & {\n\t\ttop: -${ThreePx};\n\t\tleft: -${ThreePx};\n\t\tbottom: -${ThreePx};\n\t\tright: -${ThreePx};\n\n\t\tbox-shadow: 0 0 0 ${ThreePx}\n\t\t\t${p =>\n\t\t\t\tp.color === 'primary' || p.color === 'important'\n\t\t\t\t\t? p.theme.globals.buttons[p.color].background\n\t\t\t\t\t: p.theme.links};\n\n\t\topacity: 1;\n\t\ttransition-duration: 50ms;\n\t}\n\t/* prettier-ignore */\n\t${Wrapper}:not(.is-disabled):active > & {\n\t\topacity: 1;\n\t\ttransition-duration: 50ms;\n\t}\n`;\n\nconst HoverShade = styled.span`\n\t${fillParent}\n\tborder-radius: inherit;\n\n\tbackground-color: ${p =>\n\t\talpha(p.theme.shade, Math.min(p.theme.shadeStrength, 0.12))};\n\n\topacity: 0;\n\ttransition: opacity 250ms linear;\n\twill-change: opacity;\n\n\t${Wrapper}.is-active > & {\n\t\topacity: 0.666;\n\t\tbox-shadow: inset 0 0 0.25rem rgba(0, 0, 0, 0.5);\n\t}\n\t/* prettier-ignore */\n\t${Wrapper}:not(.is-disabled):hover > & {\n\t\topacity: 1;\n\t\ttransition-duration: 50ms;\n\t}\n\t/* prettier-ignore */\n\t${Wrapper}:not(.is-disabled):active > & {\n\t\topacity: 0;\n\t\ttransition-duration: 250ms;\n\t}\n`;\n\nconst Content = styled.span`\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: ${p => (p.align ? alignMap[p.align] : 'center')};\n`;\n\nconst ButtonText = styled.span`\n\tpadding: 0 ${p => p.theme.globals.spacing.xxs};\n\tvertical-align: middle;\n`;\n\nfunction ButtonWithRef(props, ref) {\n\tconst {\n\t\talign,\n\t\tas,\n\t\tchildren,\n\t\tcolor = 'default',\n\t\ticon,\n\t\ticonRight,\n\t\ttitle,\n\t\t...otherProps\n\t} = props;\n\n\tconst iconEl = icon && <Icon name={icon} />;\n\n\treturn (\n\t\t<Wrapper\n\t\t\tposition=\"relative\"\n\t\t\tforwardedAs={as}\n\t\t\tbuttonRef={ref}\n\t\t\taria-label={props['aria-label'] || title}\n\t\t\tcolor={color}\n\t\t\talign={align}\n\t\t\t{...otherProps}\n\t\t>\n\t\t\t<HoverShade />\n\t\t\t<FocusRing color={color} />\n\t\t\t<Content align={align}>\n\t\t\t\t{!iconRight && iconEl}\n\t\t\t\t{children && <ButtonText>{children}</ButtonText>}\n\t\t\t\t{iconRight && iconEl}\n\t\t\t</Content>\n\t\t</Wrapper>\n\t);\n}\n\nconst Button = forwardRef(ButtonWithRef);\n\nButton.propTypes = {\n\ticon: PropTypes.string,\n\ticonRight: PropTypes.bool,\n\n\tround: PropTypes.bool,\n\tsquare: PropTypes.bool,\n\tfullWidth: PropTypes.bool,\n\tcolor: PropTypes.oneOf([\n\t\t'default',\n\t\t'primary',\n\t\t'important',\n\t\t'transparent',\n\t\t'shaded',\n\t]),\n\tsize: PropTypes.oneOf(['small', 'medium', 'large']),\n\talign: PropTypes.oneOf(['left', 'right', 'center']),\n};\n\nexport default Button;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport {Playground, Props} from 'docz';\nimport InlineList from '../InlineList';\nimport Button from './';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Nice looking buttons, yo.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<InlineList spacing=\\\"s\\\">\\n  <Button color=\\\"primary\\\" icon=\\\"ok\\\">\\n    Save\\n  </Button>\\n  <Button>Cancel</Button>\\n  <Button size=\\\"medium\\\" color=\\\"important\\\">\\n    Delete\\n  </Button>\\n  <Button size=\\\"medium\\\" icon=\\\"send\\\">\\n    Share\\n  </Button>\\n  <Button icon=\\\"tools\\\" size=\\\"medium\\\" color=\\\"shaded\\\" />\\n  <Button size=\\\"small\\\" color=\\\"transparent\\\">\\n    Forgot password?\\n  </Button>\\n  <Button round icon=\\\"plus\\\" color=\\\"important\\\" />\\n  <Button isActive size=\\\"medium\\\">\\n    Done\\n  </Button>\\n</InlineList>\\n<br />\\n<Button fullWidth color=\\\"primary\\\" icon=\\\"ok\\\">\\n  Login\\n</Button>\\n<br />\\n<Button fullWidth align=\\\"left\\\" size=\\\"large\\\" color=\\\"shaded\\\" icon=\\\"plus\\\">\\n  Add to My learning\\n</Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      InlineList,\n      Button\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<InlineList spacing=\"s\" mdxType=\"InlineList\">\n\t\t<Button color=\"primary\" icon=\"ok\" mdxType=\"Button\">\n\t\t\tSave\n\t\t</Button>\n\t\t<Button mdxType=\"Button\">Cancel</Button>\n\t\t<Button size=\"medium\" color=\"important\" mdxType=\"Button\">\n\t\t\tDelete\n\t\t</Button>\n\t\t<Button size=\"medium\" icon=\"send\" mdxType=\"Button\">\n\t\t\tShare\n\t\t</Button>\n\t\t<Button icon=\"tools\" size=\"medium\" color=\"shaded\" mdxType=\"Button\" />\n\t\t<Button size=\"small\" color=\"transparent\" mdxType=\"Button\">\n\t\t\tForgot password?\n\t\t</Button>\n\t\t<Button round icon=\"plus\" color=\"important\" mdxType=\"Button\" />\n\t\t<Button isActive size=\"medium\" mdxType=\"Button\">\n\t\t\tDone\n\t\t</Button>\n\t</InlineList>\n\t<br />\n\t<Button fullWidth color=\"primary\" icon=\"ok\" mdxType=\"Button\">\n\t\tLogin\n\t</Button>\n\t<br />\n\t<Button fullWidth align=\"left\" size=\"large\" color=\"shaded\" icon=\"plus\" mdxType=\"Button\">\n\t\tAdd to My learning\n\t</Button>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React, {forwardRef} from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\n\nimport 'focus-visible';\n\nconst Clickable = styled.button`\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0;\n\tvertical-align: middle;\n\n\tfont: inherit;\n\ttext-decoration: none;\n\ttext-align: inherit;\n\n\tcolor: inherit;\n\tbackground-color: transparent;\n\tborder: none;\n\tborder-radius: 0;\n\tcursor: pointer;\n\n\tappearance: none;\n\n\t&:focus:not(.focus-visible) {\n\t\toutline: none;\n\t}\n\n\t&.focus-visible {\n\t\toutline: 3px solid currentColor;\n\t\toutline-offset: 3px;\n\t}\n\n\t/* Normalise inner button spacing in Gecko browsers */\n\t&::-moz-focus-inner {\n\t\tpadding: 0;\n\t\tborder: 0;\n\t}\n`;\n\nconst ButtonCore = forwardRef((props, ref) => {\n\tconst {\n\t\tas,\n\t\ttype,\n\t\tisActive,\n\t\tisDisabled,\n\t\tdisabled,\n\t\tclassName,\n\t\t...otherProps\n\t} = props;\n\n\tconst classes = classNames(className, {\n\t\t'is-active': isActive,\n\t\t'is-disabled': isDisabled || disabled,\n\t});\n\n\tconst defaultType = !type && as === 'button' ? as : type;\n\n\t// Delete button props that would end up in DOM due to\n\t// styled-components' overly permissive attribute whitelist\n\tdelete otherProps.color;\n\n\treturn (\n\t\t<Clickable\n\t\t\t{...otherProps}\n\t\t\tref={ref}\n\t\t\tas={as}\n\t\t\ttype={defaultType}\n\t\t\tdisabled={isDisabled || disabled}\n\t\t\tclassName={classes}\n\t\t/>\n\t);\n});\n\nButtonCore.defaultProps = {\n\tas: 'button',\n};\n\nexport default ButtonCore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nconst Item = styled.li`\n\tdisplay: inline-block;\n\tmax-width: 100%;\n`;\n\nconst Wrapper = styled.ul`\n\tlist-style: none;\n\tmargin: 0;\n    padding: 0;\n\n\t${p =>\n\t\tp.spacing &&\n\t\tcss`\n\t\t\t/* Compensate for Item's padding */\n\t\t\tmargin-left: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t\tmargin-bottom: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t`}\n\n\t& > ${Item} {\n\t\tvertical-align: ${p => p.align || 'top'};\n\n\t\t${p =>\n\t\t\tp.spacing &&\n\t\t\tcss`\n\t\t\t\tpadding-left: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t\tpadding-bottom: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'comma' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: ',';\n\t\t\t\t\tmargin-right: 0.3em;\n\t\t\t\t}\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'dot' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: '·';\n\t\t\t\t\tmargin: 0 0.35em;\n\t\t\t\t}\n\t\t\t`}\n\t}\n`;\n\nconst InlineList = ({children, ...otherProps}) => {\n\treturn (\n\t\t<Wrapper {...otherProps}>\n\t\t\t{React.Children.map(children, (child, i) => {\n\t\t\t\tif (child) {\n\t\t\t\t\treturn <Item key={i}>{child}</Item>;\n\t\t\t\t}\n\t\t\t})}\n\t\t</Wrapper>\n\t);\n};\nInlineList.propTypes = {\n\talign: PropTypes.string,\n\tspacing: PropTypes.string,\n\tsplitBy: PropTypes.oneOf(['comma', 'dot']),\n};\n\nInlineList.Wrapper = Wrapper;\nInlineList.Item = Item;\n\nexport default InlineList;\n","import {alpha} from '../utils/colors';\n\nfunction borderValue(theme) {\n\treturn `1px solid ${alpha(theme.shade, theme.lineStrength)}`;\n}\n\nexport default borderValue;\n","const centerChildren = {\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n};\n\nexport default centerChildren;\n","const ellipsis = {\n\toverflow: 'hidden',\n\ttextOverflow: 'ellipsis',\n\twhiteSpace: 'nowrap',\n};\n\nexport default ellipsis;\n","const fillParent = {\n\tposition: 'absolute',\n\ttop: 0,\n\tright: 0,\n\tbottom: 0,\n\tleft: 0,\n};\n\nexport default fillParent;\n","/* Use this as a media query to apply styles only on IE 11 */\n\nconst ie11Hack =\n\t'screen and (-ms-high-contrast: active), (-ms-high-contrast: none)';\n\nexport default ie11Hack;\n","const overflowWrap = {\n\toverflowWrap: 'break-word',\n\twordWrap: 'break-word',\n\n\twordBreak: 'break-word',\n};\n\nexport default overflowWrap;\n","const visuallyHidden = {\n\tposition: 'absolute',\n\toverflow: 'hidden',\n\twidth: 1,\n\theight: 1,\n\tpadding: 0,\n\tclip: 'rect(0 0 0 0)',\n\tborder: 0,\n};\n\nexport default visuallyHidden;\n","import borderValue from './borderValue';\nimport centerChildren from './centerChildren';\nimport ellipsis from './ellipsis';\nimport fillParent from './fillParent';\nimport ie11Hack from './ie11Hack';\nimport overflowWrap from './overflowWrap';\nimport visuallyHidden from './visuallyHidden';\n\nexport {\n\tborderValue,\n\tcenterChildren,\n\tellipsis,\n\tfillParent,\n\tie11Hack,\n\toverflowWrap,\n\tvisuallyHidden,\n};\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {checkTheme} from '../utils/theme';\n\nimport {borderValue} from '../mixins';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: borderValue(theme),\n\t};\n}\n\nexport default borderProps;\n","const supportedDisplayValues = ['block', 'inline', 'inline-block'];\n\nfunction displayProps(props) {\n\tconst {display} = props;\n\n\tif (!display) return null;\n\n\tif (supportedDisplayValues.includes(display)) {\n\t\treturn {\n\t\t\tdisplay,\n\t\t};\n\t} else {\n\t\tconsole.warn(\n\t\t\t`Only 'block', 'inline', and 'inline-block' are supported for\n\t\t\tthe 'display' styling prop. Please use 'base5-ui/Flex' or custom CSS\n\t\t\tfor more complex styling.`\n\t\t);\n\t}\n}\n\nexport default displayProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap as wrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis,\n\twrap,\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\ttextAlign,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : bold === false ? 'normal' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps\n\t\t\t? textTransformMap[caps]\n\t\t\t: caps === false\n\t\t\t? 'none'\n\t\t\t: undefined,\n\t\tcolor: dimmed\n\t\t\t? alpha(theme.text, theme.textDimStrength)\n\t\t\t: dimmed === false\n\t\t\t? theme.text\n\t\t\t: undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import borderProps from './borderProps';\nimport displayProps from './displayProps';\nimport flexProps from './flexProps';\nimport paddingProps from './paddingProps';\nimport positionProps from './positionProps';\nimport marginProps from './marginProps';\nimport textProps from './textProps';\n\nexport {\n\tborderProps,\n\tdisplayProps,\n\tflexProps,\n\tpaddingProps,\n\tpositionProps,\n\tmarginProps,\n\ttextProps,\n};\n"],"sourceRoot":""}