{"version":3,"sources":["/home/circleci/repo/src/ButtonCore/index.js","/home/circleci/repo/src/InlineList/README.mdx","/home/circleci/repo/src/InlineList/index.js","/home/circleci/repo/src/TextLink/index.js","/home/circleci/repo/src/mixins/borderValue.js","/home/circleci/repo/src/mixins/centerChildren.js","/home/circleci/repo/src/mixins/ellipsis.js","/home/circleci/repo/src/mixins/fillParent.js","/home/circleci/repo/src/mixins/ie11Hack.js","/home/circleci/repo/src/mixins/overflowWrap.js","/home/circleci/repo/src/mixins/visuallyHidden.js","/home/circleci/repo/src/mixins/index.js","/home/circleci/repo/src/styleProps/flexProps.js","/home/circleci/repo/src/utils/theme.js","/home/circleci/repo/src/styleProps/borderProps.js","/home/circleci/repo/src/styleProps/displayProps.js","/home/circleci/repo/src/styleProps/paddingProps.js","/home/circleci/repo/src/styleProps/positionProps.js","/home/circleci/repo/src/styleProps/marginProps.js","/home/circleci/repo/src/styleProps/textProps.js","/home/circleci/repo/src/styleProps/index.js"],"names":["Clickable","styled","button","ButtonCore","forwardRef","props","ref","as","type","isActive","isDisabled","disabled","className","otherProps","classes","classNames","defaultType","color","defaultProps","layoutProps","MDXLayout","MDXContent","components","mdxType","__position","__code","__scope","this","Playground","Props","Icon","TextLink","InlineList","__codesandbox","name","splitBy","href","of","isMDXComponent","Item","li","Wrapper","ul","p","spacing","css","theme","globals","align","children","React","Children","map","child","i","key","textLinkStyles","bold","stealthy","links","linkRef","positionProps","marginProps","forwardedAs","borderValue","alpha","shade","lineStrength","centerChildren","display","alignItems","justifyContent","ellipsis","overflow","textOverflow","whiteSpace","fillParent","position","top","right","bottom","left","ie11Hack","overflowWrap","wordWrap","wordBreak","visuallyHidden","width","height","padding","clip","border","alignMap","center","flexProps","flexAlign","basis","grow","shrink","flex","minWidth","flexBasis","pxToRem","undefined","flexGrow","flexShrink","alignSelf","checkTheme","ThemeSectionError","borderKeys","borderProps","supportedDisplayValues","displayProps","includes","console","warn","paddingProps","px","py","pt","pr","pb","pl","getSpacing","paddingTop","paddingRight","paddingBottom","paddingLeft","pos","z","zIndex","m","mx","my","mt","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","wrap","textProps","caps","dimmed","fontSize","lineHeight","textAlign","typeScale","fontWeight","textTransform","text","textDimStrength"],"mappings":"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","file":"static/js/src-inline-list-readme.8bcc1627.js","sourcesContent":["import React, {forwardRef} from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\n\nimport 'focus-visible';\n\nconst Clickable = styled.button`\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0;\n\tvertical-align: middle;\n\n\tfont: inherit;\n\ttext-decoration: none;\n\ttext-align: inherit;\n\n\tcolor: inherit;\n\tbackground-color: transparent;\n\tborder: none;\n\tborder-radius: 0;\n\tcursor: pointer;\n\n\tappearance: none;\n\n\t&:focus:not(.focus-visible) {\n\t\toutline: none;\n\t}\n\n\t&.focus-visible {\n\t\toutline: 3px solid currentColor;\n\t\toutline-offset: 3px;\n\t}\n\n\t/* Normalise inner button spacing in Gecko browsers */\n\t&::-moz-focus-inner {\n\t\tpadding: 0;\n\t\tborder: 0;\n\t}\n`;\n\nconst ButtonCore = forwardRef((props, ref) => {\n\tconst {\n\t\tas,\n\t\ttype,\n\t\tisActive,\n\t\tisDisabled,\n\t\tdisabled,\n\t\tclassName,\n\t\t...otherProps\n\t} = props;\n\n\tconst classes = classNames(className, {\n\t\t'is-active': isActive,\n\t\t'is-disabled': isDisabled || disabled,\n\t});\n\n\tconst defaultType = !type && as === 'button' ? as : type;\n\n\t// Delete button props that would end up in DOM due to\n\t// styled-components' overly permissive attribute whitelist\n\tdelete otherProps.color;\n\n\treturn (\n\t\t<Clickable\n\t\t\t{...otherProps}\n\t\t\tref={ref}\n\t\t\tas={as}\n\t\t\ttype={defaultType}\n\t\t\tdisabled={isDisabled || disabled}\n\t\t\tclassName={classes}\n\t\t/>\n\t);\n});\n\nButtonCore.defaultProps = {\n\tas: 'button',\n};\n\nexport default ButtonCore;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport {Playground, Props} from 'docz';\nimport Icon from '../Icon';\nimport TextLink from '../TextLink';\nimport InlineList from './';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"inlinelist\"\n    }}>{`InlineList`}</h1>\n    <p>{`Lay out children horizontally with optional spacing or separators.`}</p>\n    <Playground __position={0} __code={'<InlineList>\\n  <Icon name=\\\"android\\\" />\\n  <Icon name=\\\"apple\\\" />\\n  <Icon name=\\\"asset-image\\\" />\\n</InlineList>\\n<InlineList splitBy=\\\"comma\\\">\\n  <span>Milk</span>\\n  <span>Flour</span>\\n  <span>Sugar</span>\\n  <span>Eggs</span>\\n</InlineList>\\n\\n<InlineList splitBy=\\\"dot\\\">\\n  <TextLink href=\\\"#\\\">Home</TextLink>\\n  <TextLink href=\\\"#\\\">Projects</TextLink>\\n  <TextLink href=\\\"#\\\">About us</TextLink>\\n</InlineList>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Icon,\n      TextLink,\n      InlineList\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<InlineList mdxType=\"InlineList\">\n\t\t<Icon name=\"android\" mdxType=\"Icon\" />\n\t\t<Icon name=\"apple\" mdxType=\"Icon\" />\n\t\t<Icon name=\"asset-image\" mdxType=\"Icon\" />\n\t</InlineList>\n      <InlineList splitBy=\"comma\" mdxType=\"InlineList\">\n\t<span>Milk</span>\n\t<span>Flour</span>\n\t<span>Sugar</span>\n\t<span>Eggs</span>\n      </InlineList>\n\n      <InlineList splitBy=\"dot\" mdxType=\"InlineList\">\n\t<TextLink href=\"#\" mdxType=\"TextLink\">Home</TextLink>\n\t<TextLink href=\"#\" mdxType=\"TextLink\">Projects</TextLink>\n\t<TextLink href=\"#\" mdxType=\"TextLink\">About us</TextLink>\n      </InlineList>\n    </Playground>\n    <Props of={InlineList} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nconst Item = styled.li`\n\tdisplay: inline-block;\n\tmax-width: 100%;\n`;\n\nconst Wrapper = styled.ul`\n\tlist-style: none;\n\tmargin: 0;\n    padding: 0;\n\n\t${p =>\n\t\tp.spacing &&\n\t\tcss`\n\t\t\t/* Compensate for Item's padding */\n\t\t\tmargin-left: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t\tmargin-bottom: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t`}\n\n\t& > ${Item} {\n\t\tvertical-align: ${p => p.align || 'top'};\n\n\t\t${p =>\n\t\t\tp.spacing &&\n\t\t\tcss`\n\t\t\t\tpadding-left: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t\tpadding-bottom: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'comma' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: ',';\n\t\t\t\t\tmargin-right: 0.3em;\n\t\t\t\t}\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'dot' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: '·';\n\t\t\t\t\tmargin: 0 0.35em;\n\t\t\t\t}\n\t\t\t`}\n\t}\n`;\n\nconst InlineList = ({children, ...otherProps}) => {\n\treturn (\n\t\t<Wrapper {...otherProps}>\n\t\t\t{React.Children.map(children, (child, i) => {\n\t\t\t\tif (child) {\n\t\t\t\t\treturn <Item key={i}>{child}</Item>;\n\t\t\t\t}\n\t\t\t})}\n\t\t</Wrapper>\n\t);\n};\nInlineList.propTypes = {\n\talign: PropTypes.string,\n\tspacing: PropTypes.string,\n\tsplitBy: PropTypes.oneOf(['comma', 'dot']),\n};\n\nInlineList.Wrapper = Wrapper;\nInlineList.Item = Item;\n\nexport default InlineList;\n","import React, {forwardRef} from 'react';\nimport styled, {css} from 'styled-components';\n\nimport {positionProps, marginProps} from '../styleProps';\n\nimport ButtonCore from '../ButtonCore';\n\nconst textLinkStyles = css`\n\t${p =>\n\t\tp.bold &&\n\t\t`\n\t\tfont-weight: bold;\n\t`}\n\n\ttext-align: inherit;\n\ttext-decoration: none;\n\ttransition: color 0.25s ease-in;\n\tcolor: ${p => (p.stealthy ? 'inherit' : p.theme.links)};\n\n\t&:hover,\n\t&:active,\n\t&:focus {\n\t\t${p =>\n\t\t\tp.stealthy &&\n\t\t\t`\n\t\t\tcolor: ${p.theme.links};\n\t\t`}\n\t\ttext-decoration: underline;\n\t\ttransition-timing-function: ease-out;\n\t}\n`;\n\nconst Wrapper = styled(({linkRef, bold, stealthy, ...otherProps}) => (\n\t<ButtonCore ref={linkRef} {...otherProps} />\n))`\n\t${positionProps}\n\tdisplay: inline;\n\tvertical-align: baseline;\n\t${marginProps}\n\n\t${textLinkStyles}\n`;\n\nfunction TextLink(props, ref) {\n\tconst {as, ...otherProps} = props;\n\n\treturn <Wrapper {...otherProps} linkRef={ref} forwardedAs={as || 'a'} />;\n}\n\n// Allow components to re-use simple text link styles\nexport {textLinkStyles};\nexport default forwardRef(TextLink);\n","import {alpha} from '../utils/colors';\n\nfunction borderValue(theme) {\n\treturn `1px solid ${alpha(theme.shade, theme.lineStrength)}`;\n}\n\nexport default borderValue;\n","const centerChildren = {\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n};\n\nexport default centerChildren;\n","const ellipsis = {\n\toverflow: 'hidden',\n\ttextOverflow: 'ellipsis',\n\twhiteSpace: 'nowrap',\n};\n\nexport default ellipsis;\n","const fillParent = {\n\tposition: 'absolute',\n\ttop: 0,\n\tright: 0,\n\tbottom: 0,\n\tleft: 0,\n};\n\nexport default fillParent;\n","/* Use this as a media query to apply styles only on IE 11 */\n\nconst ie11Hack =\n\t'screen and (-ms-high-contrast: active), (-ms-high-contrast: none)';\n\nexport default ie11Hack;\n","const overflowWrap = {\n\toverflowWrap: 'break-word',\n\twordWrap: 'break-word',\n\n\twordBreak: 'break-word',\n};\n\nexport default overflowWrap;\n","const visuallyHidden = {\n\tposition: 'absolute',\n\toverflow: 'hidden',\n\twidth: 1,\n\theight: 1,\n\tpadding: 0,\n\tclip: 'rect(0 0 0 0)',\n\tborder: 0,\n};\n\nexport default visuallyHidden;\n","import borderValue from './borderValue';\nimport centerChildren from './centerChildren';\nimport ellipsis from './ellipsis';\nimport fillParent from './fillParent';\nimport ie11Hack from './ie11Hack';\nimport overflowWrap from './overflowWrap';\nimport visuallyHidden from './visuallyHidden';\n\nexport {\n\tborderValue,\n\tcenterChildren,\n\tellipsis,\n\tfillParent,\n\tie11Hack,\n\toverflowWrap,\n\tvisuallyHidden,\n};\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {checkTheme} from '../utils/theme';\n\nimport {borderValue} from '../mixins';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: borderValue(theme),\n\t};\n}\n\nexport default borderProps;\n","const supportedDisplayValues = ['block', 'inline', 'inline-block'];\n\nfunction displayProps(props) {\n\tconst {display} = props;\n\n\tif (!display) return null;\n\n\tif (supportedDisplayValues.includes(display)) {\n\t\treturn {\n\t\t\tdisplay,\n\t\t};\n\t} else {\n\t\tconsole.warn(\n\t\t\t`Only 'block', 'inline', and 'inline-block' are supported for\n\t\t\tthe 'display' styling prop. Please use 'base5-ui/Flex' or custom CSS\n\t\t\tfor more complex styling.`\n\t\t);\n\t}\n}\n\nexport default displayProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap as wrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis,\n\twrap,\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\ttextAlign,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : bold === false ? 'normal' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps\n\t\t\t? textTransformMap[caps]\n\t\t\t: caps === false\n\t\t\t? 'none'\n\t\t\t: undefined,\n\t\tcolor: dimmed\n\t\t\t? alpha(theme.text, theme.textDimStrength)\n\t\t\t: dimmed === false\n\t\t\t? theme.text\n\t\t\t: undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import borderProps from './borderProps';\nimport displayProps from './displayProps';\nimport flexProps from './flexProps';\nimport paddingProps from './paddingProps';\nimport positionProps from './positionProps';\nimport marginProps from './marginProps';\nimport textProps from './textProps';\n\nexport {\n\tborderProps,\n\tdisplayProps,\n\tflexProps,\n\tpaddingProps,\n\tpositionProps,\n\tmarginProps,\n\ttextProps,\n};\n"],"sourceRoot":""}