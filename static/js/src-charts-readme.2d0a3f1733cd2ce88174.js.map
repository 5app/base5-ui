{"version":3,"sources":["/home/circleci/repo/src/Arrow/getArrowPosition.js","/home/circleci/repo/src/Arrow/index.js","/home/circleci/repo/src/CenterContent/index.js","/home/circleci/repo/src/Portal/index.js","/home/circleci/repo/src/PopOver/ResizeAware.js","/home/circleci/repo/src/PopOver/index.js","/home/circleci/repo/src/Text/index.js","/home/circleci/repo/src/charts/useChartist.js","/home/circleci/repo/src/VisuallyHidden/index.js","/home/circleci/repo/src/charts/SimpleChart/ChartTooltips.js","/home/circleci/repo/src/charts/SimpleChart/index.js","/home/circleci/repo/src/charts/SimpleGauge/StripesPattern.js","/home/circleci/repo/src/charts/SimpleGauge/index.js","/home/circleci/repo/src/charts/README.mdx","/home/circleci/repo/src/mixins/borderValue.js","/home/circleci/repo/src/mixins/centerChildren.js","/home/circleci/repo/src/mixins/ellipsis.js","/home/circleci/repo/src/mixins/fillParent.js","/home/circleci/repo/src/mixins/ie11Hack.js","/home/circleci/repo/src/mixins/overflowWrap.js","/home/circleci/repo/src/mixins/visuallyHidden.js","/home/circleci/repo/src/mixins/index.js","/home/circleci/repo/src/styleProps/flexProps.js","/home/circleci/repo/src/utils/theme.js","/home/circleci/repo/src/styleProps/borderProps.js","/home/circleci/repo/src/styleProps/paddingProps.js","/home/circleci/repo/src/styleProps/positionProps.js","/home/circleci/repo/src/styleProps/marginProps.js","/home/circleci/repo/src/styleProps/textProps.js","/home/circleci/repo/src/styleProps/index.js","/home/circleci/repo/src/utils/spacing.js"],"names":["getPlacements","placement","secondaryPlacement","primaryPlacement","indexOf","split","getArrowPosition","primary","secondary","defaultPrimaryValue","defaultSecondaryValue","centerOffset","secondaryDirection","transformMap","top","right","bottom","left","Arrow","forwardRef","props","ref","size","distanceFromEdge","style","baseArrowStyles","arrowSize","useMemo","position","display","width","height","backgroundColor","border","borderLeftColor","borderBottomColor","transform","transformOrigin","clipPath","useArrowStyles","defaultArrowPosition","arrowStyle","displayName","defaultProps","Wrapper","styled","div","p","css","pxToRem","spacing","otherProps","paddingProps","fillParent","Content","CenterContent","contentWidth","children","Portal","targetElement","Boolean","window","document","ReactDOM","createPortal","body","propTypes","PropTypes","object","Measurer","ResizeAware","onResize","useRef","useSize","useEffect","PopOver","content","distance","innerRef","isOpen","offset","positionFixed","PopOverRenderer","renderer","autoDistance","modifiers","computeStyle","gpuAcceleration","arrowProps","scheduleUpdate","arrow","resizeWatcher","popOverRef","background","color","borderRadius","padding","Text","span","textProps","textAlign","align","fontSize","marginProps","bold","bool","caps","oneOf","dimmed","string","lineHeight","number","overflow","useChartist","hostRef","data","options","type","preserveAspectRatio","chartRef","current","Chartist","detach","on","node","svg","_node","setAttribute","clientWidth","clientHeight","VisuallyHidden","visuallyHiddenMixin","ReadoutList","ul","ReadoutListItem","li","Cursor","yValue","alpha","theme","shade","lineStrength","getDefaultReadout","name","value","label","ChartTooltips","labels","getReadout","tooltipRenderer","useState","hoveredPoint","setHoveredPoint","length","maxValue","Math","max","apply","map","index","getLabel","readOut","key","onMouseEnter","onMouseLeave","popover","ChartWrapper","getColorBlock","isEmpty","defaultOptions","showArea","showPoint","lineSmooth","fullWidth","chartPadding","axisX","showLabel","showGrid","axisY","low","getRandomPoints","Array","fill","random","SimpleChart","getTooltipReadout","emptyContent","hasData","series","StripesPattern","id","viewBox","version","xmlns","xmlnsXlink","patternUnits","stroke","strokeWidth","fillRule","points","patternId","donut","donutWidth","donutSolid","startAngle","total","SimpleGauge","hasValue","fraction","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","this","Playground","Props","__codesandbox","isMDXComponent","borderValue","centerChildren","alignItems","justifyContent","ellipsis","textOverflow","whiteSpace","ie11Hack","overflowWrap","wordWrap","wordBreak","visuallyHidden","clip","alignMap","center","flexProps","flexAlign","basis","grow","shrink","flex","minWidth","flexBasis","undefined","flexGrow","flexShrink","alignSelf","checkTheme","globals","ThemeSectionError","borderKeys","borderProps","px","py","pt","pr","pb","pl","getSpacing","paddingTop","paddingRight","paddingBottom","paddingLeft","positionProps","pos","z","zIndex","m","mx","my","mt","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","wrap","alignStyles","typeScale","fontWeight","textTransform","text","textDimStrength","passThroughValues","shortCode","charAt","substring"],"mappings":"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","file":"static/js/src-charts-readme.f3aa7062.js","sourcesContent":["/* Given a popper.js placement string, this function\n * returns a CSS style object containing sensible default\n * styles for the placement string.\n *\n * The (customisable) defaults are:\n * - 100% for the primary direction\n * - 8 pixels for the secondary direction\n *\n * When no secondary direction is defined, styles for centering\n * are returned which can be customised with an offset:\n * `calc(50% + ${centerOffset})`\n *\n * Examples:\n * getArrowPosition('bottom-start') // returns {bottom: '100%', left: 8}\n * getArrowPosition('bottom-start', {defaultSecondaryValue: 4}) // returns {bottom: '100%', left: 4}\n * getArrowPosition('left-end') // returns {left: '100%', bottom: 8}\n * getArrowPosition('right') // returns {right: '100%', top: 50%}\n * getArrowPosition('right', {centerOffset: '-4px'}) // returns {right: '100%', top: calc(50% - 4px)}\n */\n\nfunction getSecondaryDirection(primary, secondary) {\n\tif (primary === 'left' || primary === 'right') {\n\t\treturn secondary === 'end' ? 'bottom' : 'top';\n\t} else {\n\t\treturn secondary === 'end' ? 'right' : 'left';\n\t}\n}\n\nexport function getPlacements(placement) {\n\tlet primaryPlacement = placement;\n\tlet secondaryPlacement;\n\tif (placement.indexOf('-') > -1) {\n\t\t[primaryPlacement, secondaryPlacement] = placement.split('-');\n\t}\n\treturn [primaryPlacement, secondaryPlacement];\n}\n\nfunction getArrowPosition(\n\tplacement,\n\t{defaultPrimaryValue = '100%', defaultSecondaryValue = 8, centerOffset}\n) {\n\tconst [primaryPlacement, secondaryPlacement] = getPlacements(placement);\n\tconst secondaryDirection = getSecondaryDirection(\n\t\tprimaryPlacement,\n\t\tsecondaryPlacement\n\t);\n\n\treturn {\n\t\t[primaryPlacement]: defaultPrimaryValue,\n\t\t[secondaryDirection]: secondaryPlacement\n\t\t\t? defaultSecondaryValue\n\t\t\t: centerOffset\n\t\t\t? `calc(50% + ${centerOffset})`\n\t\t\t: '50%',\n\t};\n}\n\nexport default getArrowPosition;\n","import React, {forwardRef, useMemo} from 'react';\nimport PropTypes from 'prop-types';\n\nimport getArrowPosition, {getPlacements} from './getArrowPosition';\n\nconst transformMap = {\n\ttop: 'translateY(-50%) rotate(135deg)',\n\tright: 'translateX(50%) rotate(225deg)',\n\tbottom: 'translateY(50%) rotate(-45deg)',\n\tleft: 'translateX(-50%) rotate(45deg)',\n};\n\nfunction useArrowStyles(primaryPlacement, arrowSize) {\n\tconst arrowStyles = useMemo(\n\t\t() => ({\n\t\t\tposition: 'absolute',\n\n\t\t\tdisplay: 'inline-block',\n\t\t\twidth: arrowSize + 'px',\n\t\t\theight: arrowSize + 'px',\n\n\t\t\tbackgroundColor: 'inherit',\n\t\t\tborder: 'inherit',\n\t\t\tborderLeftColor: 'transparent',\n\t\t\tborderBottomColor: 'transparent',\n\n\t\t\ttransform: transformMap[primaryPlacement],\n\t\t\ttransformOrigin: '50%',\n\t\t\tclipPath: 'polygon(0 0, 100% 0, 100% 100%)',\n\t\t}),\n\t\t[arrowSize, primaryPlacement]\n\t);\n\n\treturn arrowStyles;\n}\n\nconst Arrow = forwardRef((props, ref) => {\n\tconst {placement, size, distanceFromEdge, style} = props;\n\n\tconst [primaryPlacement] = getPlacements(placement);\n\tconst baseArrowStyles = useArrowStyles(primaryPlacement, size);\n\tconst defaultArrowPosition = useMemo(\n\t\t() =>\n\t\t\tgetArrowPosition(placement, {\n\t\t\t\tcenterOffset: `-${size / 2}px`,\n\t\t\t\tdefaultSecondaryValue: distanceFromEdge,\n\t\t\t}),\n\t\t[distanceFromEdge, placement, size]\n\t);\n\t// Don't let an empty primary position attribute reset the default\n\tif (style && style[primaryPlacement] === '') {\n\t\tdelete style[primaryPlacement];\n\t}\n\tconst arrowStyle = {\n\t\t...baseArrowStyles,\n\t\t...defaultArrowPosition,\n\t\t...style,\n\t};\n\n\treturn <span ref={ref} style={arrowStyle} />;\n});\n\nArrow.displayName = 'Arrow';\n\nArrow.defaultProps = {\n\tplacement: 'top',\n\tsize: 8,\n\tdistanceFromEdge: 8,\n};\n\nArrow.propTypes = {\n\t/** Controls how far the arrow is placed from the container's edge when the placement contains a '-start' or '-end' suffix. */\n\tdistanceFromEdge: PropTypes.number,\n\t/** The arrow will be placed on the opposing side of the defined direction: 'top', 'bottom', 'left', or 'right'. Add an optional suffix '-start' or '-end' to align the arrow to the start or end of the chosen direction. */\n\tplacement: PropTypes.string,\n\t/** Control the arrow size (length of side) */\n\tsize: PropTypes.number,\n};\n\nexport default Arrow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nimport {pxToRem} from '../utils/units';\n\nimport {paddingProps} from '../styleProps';\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\t${p =>\n\t\tp.height &&\n\t\tcss`\n\t\t\tmin-height: ${pxToRem(p.height)};\n\t\t`}\n\n\t${({spacing, p, ...otherProps}) =>\n\t\tpaddingProps({\n\t\t\tp: spacing || p,\n\t\t\t...otherProps,\n\t\t})}\n\n\t${p =>\n\t\tp.fillParent &&\n\t\tcss`\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\tmin-height: 100%;\n\t\t`}\n\t\n\tbox-sizing: border-box;\n`;\n\nconst Content = styled.div`\n\tmax-width: ${p => (p.width ? pxToRem(p.width) : '100%')};\n\n\t/* Needed for IE11 to contain large items: https://stackoverflow.com/a/42494339 */\n\tflex-shrink: 0;\n\n\t/* This does the centering magic: */\n\tmargin: auto;\n`;\n\nfunction CenterContent(props) {\n\tconst {\n\t\tcontentWidth,\n\t\tfillParent,\n\t\theight,\n\t\tspacing,\n\t\tchildren,\n\t\t...otherProps\n\t} = props;\n\n\treturn (\n\t\t<Wrapper\n\t\t\tfillParent={fillParent}\n\t\t\theight={height}\n\t\t\tspacing={spacing}\n\t\t\t{...otherProps}\n\t\t>\n\t\t\t<Content width={contentWidth}>{children}</Content>\n\t\t</Wrapper>\n\t);\n}\n\nCenterContent.defaultProps = {\n\tspacing: 'm',\n};\n\nCenterContent.propTypes = {\n\tcontentWidth: PropTypes.number,\n\tfillParent: PropTypes.bool,\n\theight: PropTypes.number,\n\tspacing: PropTypes.string,\n};\n\nexport default CenterContent;\n","import ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nfunction canUseDom() {\n\treturn Boolean(typeof window !== 'undefined' && window.document);\n}\n\nfunction Portal({targetElement, children}) {\n\tif (!canUseDom) return null;\n\tif (!targetElement) return children;\n\n\treturn ReactDOM.createPortal(children, targetElement);\n}\n\nPortal.defaultProps = {\n\ttargetElement: document.body,\n};\n\nPortal.propTypes = {\n\t/**\n\t * Element to render the Portal's children into.\n\t * Must be an object, e.g. the result of a getElementById() call\n\t */\n\ttargetElement: PropTypes.object,\n};\n\nexport default Portal;\n","import React, {useEffect, useRef} from 'react';\nimport {useSize} from 'react-hook-size';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport {fillParent} from '../mixins';\n\nconst Measurer = styled.div`\n\t${fillParent}\n\n\topacity: 0;\n\toverflow: hidden;\n\tpointer-events: none;\n\tz-index: -1;\n`;\n\nfunction ResizeAware({onResize}) {\n\tconst ref = useRef();\n\tconst {width, height} = useSize(ref);\n\n\tuseEffect(() => {\n\t\tonResize();\n\t}, [width, height, onResize]);\n\n\treturn <Measurer ref={ref} />;\n}\n\nResizeAware.propTypes = {\n\tonResize: PropTypes.func.isRequired,\n};\n\nexport default ResizeAware;\n","import React from 'react';\nimport {Manager, Reference, Popper, placements} from 'react-popper';\nimport PropTypes from 'prop-types';\n\nimport Arrow from '../Arrow';\nimport Portal from '../Portal';\n\nimport ResizeAware from './ResizeAware';\n\nfunction PopOver(props) {\n\tconst {\n\t\tarrowSize,\n\t\tchildren,\n\t\tcontent,\n\t\tdistance,\n\t\tinnerRef,\n\t\tisOpen,\n\t\toffset,\n\t\tplacement,\n\t\tpositionFixed,\n\t\trenderer: PopOverRenderer,\n\t} = props;\n\n\tconst autoDistance = +arrowSize / 2 + +distance;\n\n\treturn (\n\t\t<Manager>\n\t\t\t<Reference innerRef={innerRef}>{children}</Reference>\n\t\t\t<Popper\n\t\t\t\tpositionFixed={positionFixed}\n\t\t\t\tplacement={placement}\n\t\t\t\tmodifiers={{\n\t\t\t\t\toffset: {offset: `${offset}, ${autoDistance}`},\n\t\t\t\t\tcomputeStyle: {gpuAcceleration: false},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ref, style, placement, arrowProps, scheduleUpdate}) => {\n\t\t\t\t\tconst arrow = arrowSize > 0 && (\n\t\t\t\t\t\t<Arrow\n\t\t\t\t\t\t\tsize={arrowSize}\n\t\t\t\t\t\t\tplacement={placement}\n\t\t\t\t\t\t\tref={arrowProps.ref}\n\t\t\t\t\t\t\tstyle={arrowProps.style}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\n\t\t\t\t\tconst resizeWatcher = (\n\t\t\t\t\t\t<ResizeAware onResize={scheduleUpdate} />\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<PopOverRenderer\n\t\t\t\t\t\t\tpopOverRef={ref}\n\t\t\t\t\t\t\tstyle={style}\n\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\t\tarrow={arrow}\n\t\t\t\t\t\t\tresizeWatcher={resizeWatcher}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Popper>\n\t\t</Manager>\n\t);\n}\n\nfunction DefaultPopover({\n\tpopOverRef,\n\tisOpen,\n\tstyle,\n\tcontent,\n\tarrow,\n\tresizeWatcher,\n}) {\n\tif (!isOpen) return null;\n\n\treturn (\n\t\t<Portal targetElement={document.body}>\n\t\t\t<span\n\t\t\t\tref={popOverRef}\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: 'black',\n\t\t\t\t\tcolor: 'white',\n\t\t\t\t\tborderRadius: '3px',\n\t\t\t\t\tpadding: '5px 10px',\n\t\t\t\t\t...style,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t\t{arrow}\n\t\t\t\t{resizeWatcher}\n\t\t\t</span>\n\t\t</Portal>\n\t);\n}\n\nPopOver.defaultProps = {\n\tarrowSize: 12,\n\tdistance: 0,\n\toffset: 0,\n\tplacement: 'top',\n\tpositionFixed: true,\n\trenderer: DefaultPopover,\n};\n\nPopOver.propTypes = {\n\t/** Control the popover's arrow size */\n\tarrowSize: PropTypes.number,\n\t/** Child function, providing a ref that needs to be passed to the wrapped reference component */\n\tchildren: PropTypes.func.isRequired,\n\t/** Set the content of the popover */\n\tcontent: PropTypes.node,\n\t/** Control the popover's distance from its reference element */\n\tdistance: PropTypes.number,\n\t/** Access the reference component's ref */\n\tinnerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\t/** Control whether the popover is shown or not */\n\tisOpen: PropTypes.bool,\n\t/** Shift the popover along the corss-axix */\n\toffset: PropTypes.number,\n\t/** One of 'top', 'bottom', 'left', or 'right'. Add an optional suffix '-start' or '-end' to align the popover to the start or end of the chosen direction. */\n\tplacement: PropTypes.oneOf(placements),\n\t/** Control whether the popover should be positioned using \"position: absolute\" or \"position: fixed\" */\n\tpositionFixed: PropTypes.bool,\n\t/**\n\t * Customise popover rendering (e.g. for custom styling, transitions, etc).\n\t * Should be a React component that takes the props\n\t * `popOverRef`, `isOpen`, `style`, `content`, `arrow`, `resizeWatcher`\n\t */\n\trenderer: PropTypes.elementType,\n};\n\nexport {Arrow};\n\nexport default PopOver;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {textProps, marginProps, paddingProps} from '../styleProps';\n\nconst Text = styled.span`\n\t${props =>\n\t\ttextProps({\n\t\t\t...props,\n\t\t\ttextAlign: props.align,\n\t\t\tfontSize: props.size,\n\t\t})}\n\t${marginProps}\n\t${paddingProps}\n`;\n\nText.propTypes = {\n\tbold: PropTypes.bool,\n\tcaps: PropTypes.oneOf(['all', 'first']),\n\tdimmed: PropTypes.bool,\n\tfontSize: PropTypes.string,\n\tlineHeight: PropTypes.number,\n\toverflow: PropTypes.oneOf(['ellipsis', 'wrap']),\n\ttextAlign: PropTypes.oneOf(['left', 'center', 'right']),\n};\n\nexport default Text;\n","import {useRef, useEffect} from 'react';\nimport Chartist from 'chartist';\n\nfunction useChartist(\n\thostRef,\n\t{data, options, type = 'Line', preserveAspectRatio}\n) {\n\tconst chartRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tchartRef.current = new Chartist[type](hostRef.current, data, options);\n\t\treturn function cleanUp() {\n\t\t\tchartRef.current.detach();\n\t\t};\n\t}, [data, hostRef, options, type]);\n\n\t// This effect adds a viewBox attribute to the generated SVG element,\n\t// which allows it to grow/shwink along with the container when the size\n\t// of it changes - in case the change is not due to a window resize,\n\t// which Chartist already handles by redrawing the chart.\n\tuseEffect(() => {\n\t\tfunction updateViewBox(data) {\n\t\t\tconst node = data.svg && data.svg._node;\n\t\t\tif (node) {\n\t\t\t\tnode.setAttribute(\n\t\t\t\t\t'viewBox',\n\t\t\t\t\t`0 0 ${node.clientWidth} ${node.clientHeight}`\n\t\t\t\t);\n\t\t\t\tif (preserveAspectRatio) {\n\t\t\t\t\tnode.setAttribute(\n\t\t\t\t\t\t'preserveAspectRatio',\n\t\t\t\t\t\tpreserveAspectRatio\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchartRef.current.on('created', updateViewBox);\n\t}, [chartRef, preserveAspectRatio]);\n}\n\nexport default useChartist;\n","import styled from 'styled-components';\nimport {visuallyHidden as visuallyHiddenMixin} from '../mixins';\n\nconst VisuallyHidden = styled.span`\n\t${visuallyHiddenMixin}\n`;\n\nexport default VisuallyHidden;\n","import React, {Fragment, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {alpha} from '../../utils/colors';\n\nimport PopOver from '../../PopOver';\nimport Text from '../../Text';\nimport VisuallyHidden from '../../VisuallyHidden';\n\nconst ReadoutList = styled.ul`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0;\n\tdisplay: flex;\n\twidth: 100%;\n\tmargin: 0;\n\tpadding: 4px 0;\n\tlist-style-type: none;\n`;\n\nconst ReadoutListItem = styled.li`\n\tposition: relative;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: flex-end;\n\tflex: 1;\n\ttext-align: center;\n\topacity: 0;\n\n\t&:first-child,\n\t&:last-child {\n\t\tflex: 0.5;\n\t}\n\n\t&:first-child {\n\t\tjustify-content: flex-start;\n\t}\n\n\t&:last-child {\n\t\tjustify-content: flex-end;\n\t}\n\n\t&:hover {\n\t\topacity: 1;\n\t}\n`;\n\nconst Cursor = styled.span`\n\tdisplay: block;\n\theight: ${p => p.yValue * 100}%;\n\twidth: 1px;\n\tbackground-color: ${p => alpha(p.theme.shade, p.theme.lineStrength)};\n`;\nCursor.defaultProps = {\n\tyValue: 1,\n};\n\n// Return a label from the given array of labels\n// and an index. If the index is higher than the\n// number of labels (i.e. if there are more items\n// than labels), the labels are treated like they're\n// repeating.\nfunction getLabel(labels, index) {\n\tif (!labels || !labels.length) return null;\n\n\treturn labels[index] || labels[index % labels.length];\n}\n\nfunction getDefaultReadout(name, value, label) {\n\treturn (\n\t\t<Fragment>\n\t\t\t{label && (\n\t\t\t\t<Text bold size=\"m\" lineHeight={1}>\n\t\t\t\t\t{label}\n\t\t\t\t\t<br />\n\t\t\t\t</Text>\n\t\t\t)}\n\t\t\t{name}\n\t\t\t{name ? ':' : ''} {value}\n\t\t</Fragment>\n\t);\n}\n\nfunction ChartTooltips({\n\tdata,\n\tlabels,\n\tname,\n\tgetReadout = getDefaultReadout,\n\ttooltipRenderer,\n}) {\n\tconst [hoveredPoint, setHoveredPoint] = useState(null);\n\n\tif (!data || !data.length) return null;\n\n\tconst maxValue = Math.max.apply(null, data);\n\n\treturn (\n\t\t<ReadoutList>\n\t\t\t{data.map((value, index) => {\n\t\t\t\tconst label = getLabel(labels, index);\n\t\t\t\tconst readOut = getReadout(name, value, label);\n\t\t\t\treturn (\n\t\t\t\t\t<ReadoutListItem\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tonMouseEnter={() => setHoveredPoint(index)}\n\t\t\t\t\t\tonMouseLeave={() => setHoveredPoint(null)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<PopOver\n\t\t\t\t\t\t\tisOpen={hoveredPoint === index}\n\t\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\t\tdistance={8}\n\t\t\t\t\t\t\tcontent={readOut}\n\t\t\t\t\t\t\trenderer={tooltipRenderer}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{popover => (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<VisuallyHidden>{readOut}</VisuallyHidden>\n\t\t\t\t\t\t\t\t\t<Cursor\n\t\t\t\t\t\t\t\t\t\tref={popover.ref}\n\t\t\t\t\t\t\t\t\t\tyValue={value / maxValue}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</PopOver>\n\t\t\t\t\t</ReadoutListItem>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ReadoutList>\n\t);\n}\n\nChartTooltips.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\tlabels: PropTypes.array,\n\tname: PropTypes.string,\n\tgetReadout: PropTypes.func,\n\ttooltipRenderer: PropTypes.func,\n};\n\nexport default ChartTooltips;\n","import React, {useRef} from 'react';\nimport styled from 'styled-components';\n\nimport {getColorBlock} from '../../utils/colors';\n\nimport CenterContent from '../../CenterContent';\n\nimport useChartist from '../useChartist';\nimport ChartTooltips from './ChartTooltips';\n\nconst ChartWrapper = styled.div`\n\tposition: relative;\n\n\t> svg {\n\t\tvertical-align: middle;\n\t\tcolor: ${p => getColorBlock(p.color, p.theme)};\n\t}\n\t.ct-line {\n\t\tfill: none;\n\t\tstroke: currentColor;\n\t\tstroke-width: 4px;\n\t}\n\t.ct-area {\n\t\tfill: currentColor;\n\t\topacity: 0.1;\n\t}\n\t.ct-grid {\n\t\tstroke: black;\n\t\topacity: 0.1;\n\t}\n\n\t${p =>\n\t\tp.isEmpty &&\n\t\t`\n\t\t.ct-line {\n\t\t\topacity: 0.2;\n\t\t\tstroke-dasharray: 10;\n\t\t}\n\t\t.ct-area {\n\t\t\topacity: 0;\n\t\t}\n\t`}\n`;\n\nconst defaultOptions = {\n\tshowArea: true,\n\tshowPoint: false,\n\tlineSmooth: false,\n\tfullWidth: true,\n\tchartPadding: {\n\t\ttop: 4,\n\t\tbottom: 4,\n\t\tleft: 0,\n\t\tright: 0,\n\t},\n\taxisX: {\n\t\toffset: 0,\n\t\tshowLabel: false,\n\t\tshowGrid: false,\n\t},\n\taxisY: {\n\t\toffset: 0,\n\t\tshowLabel: false,\n\t\tshowGrid: false,\n\t\tlow: 0,\n\t},\n};\n\nfunction getRandomPoints(length = 7) {\n\treturn Array(length)\n\t\t.fill(1)\n\t\t.map(() => Math.random());\n}\n\nfunction SimpleChart({\n\tlabels,\n\tdata,\n\theight,\n\tname,\n\tcolor = 'links',\n\ttooltipRenderer,\n\tgetTooltipReadout,\n\tisEmpty,\n\temptyContent = 'No data to display',\n}) {\n\tconst hostRef = useRef(null);\n\n\tconst options = {\n\t\t...defaultOptions,\n\t\theight,\n\t};\n\n\tconst hasData = !isEmpty && data && data.length !== 0;\n\n\tuseChartist(hostRef, {\n\t\ttype: 'Line',\n\t\tdata: {\n\t\t\tlabels,\n\t\t\tseries: [hasData ? data : getRandomPoints()],\n\t\t},\n\t\toptions,\n\t\tpreserveAspectRatio: 'none',\n\t});\n\n\treturn (\n\t\t<ChartWrapper ref={hostRef} color={color} isEmpty={!hasData}>\n\t\t\t{hasData ? (\n\t\t\t\t<ChartTooltips\n\t\t\t\t\tdata={data}\n\t\t\t\t\tlabels={labels}\n\t\t\t\t\tname={name}\n\t\t\t\t\ttooltipRenderer={tooltipRenderer}\n\t\t\t\t\tgetReadout={getTooltipReadout}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<CenterContent fillParent>{emptyContent}</CenterContent>\n\t\t\t)}\n\t\t</ChartWrapper>\n\t);\n}\n\nexport default SimpleChart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {getColorBlock} from '../../utils/colors';\n\nconst Wrapper = styled.div`\n\theight: 0;\n\tcolor: ${p => getColorBlock(p.color, p.theme)};\n`;\n\nfunction StripesPattern({id, color}) {\n\treturn (\n\t\t<Wrapper color={color}>\n\t\t\t<svg\n\t\t\t\twidth=\"0\"\n\t\t\t\theight=\"0\"\n\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\tversion=\"1.1\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\txmlnsXlink=\"http://www.w3.org/1999/xlink\"\n\t\t\t>\n\t\t\t\t<defs>\n\t\t\t\t\t<pattern\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tpatternUnits=\"userSpaceOnUse\"\n\t\t\t\t\t\twidth=\"20\"\n\t\t\t\t\t\theight=\"20\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<g\n\t\t\t\t\t\t\tstroke=\"none\"\n\t\t\t\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<g fill=\"currentColor\">\n\t\t\t\t\t\t\t\t<polygon points=\"0 20 20 0 10 0 0 10\" />\n\t\t\t\t\t\t\t\t<polygon points=\"20 20 20 10 10 20\" />\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</pattern>\n\t\t\t\t</defs>\n\t\t\t</svg>\n\t\t</Wrapper>\n\t);\n}\n\nexport default StripesPattern;\n","import React, {useRef} from 'react';\nimport styled, {css} from 'styled-components';\n\nimport {pxToRem} from '../../utils/units';\nimport {getColorBlock} from '../../utils/colors';\n\nimport CenterContent from '../../CenterContent';\n\nimport useChartist from '../useChartist';\nimport StripesPattern from './StripesPattern';\n\nconst Wrapper = styled.div`\n\tposition: relative;\n\toverflow: hidden;\n\t${p =>\n\t\tp.height &&\n\t\tcss`\n\t\t\theight: ${pxToRem(p.height)};\n\t\t`}\n\n\t> svg {\n\t\tvertical-align: middle;\n\t\tcolor: ${p => getColorBlock(p.color, p.theme)};\n\t\t${p =>\n\t\t\tp.patternId &&\n\t\t\t`\n\t\t\topacity: 0.2;\n\t\t`}\n\t}\n\t.ct-slice-donut {\n\t\tstroke: none;\n\t\tfill: none;\n\t}\n\t.ct-series-a {\n\t\tfill: ${p =>\n\t\t\tp.patternId ? `url(#${p.patternId}) currentColor` : 'currentColor'};\n\t}\n\t.ct-series-b {\n\t\tfill: currentColor;\n\t\topacity: 0.2;\n\t}\n`;\n\nconst defaultOptions = {\n\tdonut: true,\n\tdonutWidth: '80%',\n\tdonutSolid: true,\n\tstartAngle: 270,\n\ttotal: 200,\n\tshowLabel: false,\n\tchartPadding: 0,\n};\n\nfunction SimpleGauge({\n\tvalue,\n\theight,\n\tcolor = 'links',\n\tisEmpty,\n\temptyContent = 'No data to display',\n}) {\n\tconst hostRef = useRef(null);\n\n\tconst hasValue = typeof value !== 'undefined' && value !== null && !isEmpty;\n\n\tconst fraction = (hasValue ? value : Math.random()) * 100;\n\n\tconst options = {\n\t\t...defaultOptions,\n\t\theight: height * 2,\n\t};\n\n\tuseChartist(hostRef, {\n\t\ttype: 'Pie',\n\t\tdata: {\n\t\t\tseries: [fraction, 100 - fraction],\n\t\t},\n\t\toptions,\n\t});\n\n\tconst patternId = `gauge-chart-${Math.random()}`;\n\n\treturn (\n\t\t<Wrapper\n\t\t\tref={hostRef}\n\t\t\theight={height}\n\t\t\tcolor={color}\n\t\t\tpatternId={hasValue ? null : patternId}\n\t\t>\n\t\t\t{!hasValue && (\n\t\t\t\t<CenterContent fillParent spacing=\"0\">\n\t\t\t\t\t{emptyContent}\n\t\t\t\t\t<StripesPattern color={color} id={patternId} />\n\t\t\t\t</CenterContent>\n\t\t\t)}\n\t\t</Wrapper>\n\t);\n}\n\nexport default SimpleGauge;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport {Playground, Props} from 'docz';\nimport SimpleChart from './SimpleChart';\nimport SimpleGauge from './SimpleGauge';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"charts\"\n    }}>{`Charts`}</h1>\n    <p>{`base5-UI provides a few very simple charts to illustrate trends and metrics in your UI.`}</p>\n    <p>{`The chart's colours can be customised by providing a `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` name from either the theme's `}<inlineCode parentName=\"p\">{`colorBlock`}</inlineCode>{` or current `}<inlineCode parentName=\"p\">{`section`}</inlineCode>{` palette, or any valid CSS color.`}</p>\n    <p>{`Both charts will take up the full width of their container and their height can be set using the `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` prop.`}</p>\n    <p>{`The charts are generated using `}<a parentName=\"p\" {...{\n        \"href\": \"http://gionkunz.github.io/chartist-js\"\n      }}>{`Chartist.js`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"simplechart\"\n    }}>{`SimpleChart`}</h2>\n    <p>{`Takes a `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` prop that must contain of a simple array of number values which will then be plotted out as a pretty graph.`}</p>\n    <p>{`You can also provide a `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` prop for the tooltip value and an array of `}<inlineCode parentName=\"p\">{`labels`}</inlineCode>{` for the x axis. When you specify more data points than labels, the labels will repeat to match the number of data values.`}</p>\n    <Playground __position={0} __code={'<SimpleChart data={[5, 3, 4, 0, 5, 2, 1]} height={125} color=\\\"links\\\" />\\n<br />\\n<SimpleChart\\n  name=\\\"Opens\\\"\\n  data={[2, 1, 9, 6, 6, 3, 7, 3, 6, 7, 8, 10]}\\n  labels={[\\'Mon\\', \\'Tue\\', \\'Wed\\']}\\n  height={125}\\n  color=\\\"highlight\\\"\\n/>\\n<br />\\n<SimpleChart isEmpty height={125} color=\\\"positive\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      SimpleChart,\n      SimpleGauge\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<SimpleChart data={[5, 3, 4, 0, 5, 2, 1]} height={125} color=\"links\" mdxType=\"SimpleChart\" />\n\t<br />\n\t<SimpleChart name=\"Opens\" data={[2, 1, 9, 6, 6, 3, 7, 3, 6, 7, 8, 10]} labels={['Mon', 'Tue', 'Wed']} height={125} color=\"highlight\" mdxType=\"SimpleChart\" />\n\t<br />\n\t<SimpleChart isEmpty height={125} color=\"positive\" mdxType=\"SimpleChart\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"simplegauge\"\n    }}>{`SimpleGauge`}</h2>\n    <p>{`Takes a single `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` prop that must be a Number value between `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{` which will then be plotted out as a pretty (half of a) pie chart.`}</p>\n    <Playground __position={1} __code={'<SimpleGauge value={0.3} height={125} />\\n<br />\\n<SimpleGauge value={0.8} height={80} color=\\\"positive\\\" />\\n<br />\\n<SimpleGauge isEmpty height={80} color=\\\"negative\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      SimpleChart,\n      SimpleGauge\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<SimpleGauge value={0.3} height={125} mdxType=\"SimpleGauge\" />\n\t<br />\n\t<SimpleGauge value={0.8} height={80} color=\"positive\" mdxType=\"SimpleGauge\" />\n\t<br />\n\t<SimpleGauge isEmpty height={80} color=\"negative\" mdxType=\"SimpleGauge\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","import {alpha} from '../utils/colors';\n\nfunction borderValue(theme) {\n\treturn `1px solid ${alpha(theme.shade, theme.lineStrength)}`;\n}\n\nexport default borderValue;\n","const centerChildren = {\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n};\n\nexport default centerChildren;\n","const ellipsis = {\n\toverflow: 'hidden',\n\ttextOverflow: 'ellipsis',\n\twhiteSpace: 'nowrap',\n};\n\nexport default ellipsis;\n","const fillParent = {\n\tposition: 'absolute',\n\ttop: 0,\n\tright: 0,\n\tbottom: 0,\n\tleft: 0,\n};\n\nexport default fillParent;\n","/* Use this as a media query to apply styles only on IE 11 */\n\nconst ie11Hack =\n\t'screen and (-ms-high-contrast: active), (-ms-high-contrast: none)';\n\nexport default ie11Hack;\n","const overflowWrap = {\n\toverflowWrap: 'break-word',\n\twordWrap: 'break-word',\n\n\twordBreak: 'break-word',\n};\n\nexport default overflowWrap;\n","const visuallyHidden = {\n\tposition: 'absolute',\n\toverflow: 'hidden',\n\twidth: 1,\n\theight: 1,\n\tpadding: 0,\n\tclip: 'rect(0 0 0 0)',\n\tborder: 0,\n};\n\nexport default visuallyHidden;\n","import borderValue from './borderValue';\nimport centerChildren from './centerChildren';\nimport ellipsis from './ellipsis';\nimport fillParent from './fillParent';\nimport ie11Hack from './ie11Hack';\nimport overflowWrap from './overflowWrap';\nimport visuallyHidden from './visuallyHidden';\n\nexport {\n\tborderValue,\n\tcenterChildren,\n\tellipsis,\n\tfillParent,\n\tie11Hack,\n\toverflowWrap,\n\tvisuallyHidden,\n};\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {checkTheme} from '../utils/theme';\n\nimport {borderValue} from '../mixins';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: borderValue(theme),\n\t};\n}\n\nexport default borderProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis: {\n\t\tdisplay: 'block',\n\t\t...ellipsis,\n\t},\n\twrap: {\n\t\tdisplay: 'block',\n\t\t...overflowWrap,\n\t},\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\tlet alignStyles;\n\tif (textAlign) {\n\t\talignStyles = {\n\t\t\tdisplay: 'block',\n\t\t\twidth: '100%',\n\t\t\ttextAlign,\n\t\t};\n\t}\n\n\treturn {\n\t\t...alignStyles,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps ? textTransformMap[caps] : undefined,\n\t\tcolor: dimmed ? alpha(theme.text, theme.textDimStrength) : undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import borderProps from './borderProps';\nimport flexProps from './flexProps';\nimport paddingProps from './paddingProps';\nimport positionProps from './positionProps';\nimport marginProps from './marginProps';\nimport textProps from './textProps';\n\nexport {\n\tborderProps,\n\tflexProps,\n\tpaddingProps,\n\tpositionProps,\n\tmarginProps,\n\ttextProps,\n};\n","import {pxToRem} from './units';\n\nconst passThroughValues = ['auto'];\n\nfunction getSpacing(shortCode, theme) {\n\tif (shortCode === undefined || shortCode === null || shortCode === false) {\n\t\treturn shortCode;\n\t}\n\n\tif (\n\t\t(typeof shortCode !== 'number' && typeof shortCode !== 'string') ||\n\t\tshortCode === '0'\n\t) {\n\t\treturn '0';\n\t}\n\n\tif (typeof shortCode === 'number') {\n\t\treturn pxToRem(shortCode);\n\t}\n\n\tif (passThroughValues.indexOf(shortCode) > -1) {\n\t\treturn shortCode;\n\t}\n\n\tif (shortCode.charAt(0) === '-') {\n\t\treturn '-' + theme.globals.spacing[shortCode.substring(1)];\n\t} else {\n\t\treturn theme.globals.spacing[shortCode];\n\t}\n}\n\nexport {getSpacing};\n"],"sourceRoot":""}