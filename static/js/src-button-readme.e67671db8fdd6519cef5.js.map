{"version":3,"sources":["/home/circleci/repo/src/Button/index.js","/home/circleci/repo/src/Button/README.mdx","/home/circleci/repo/src/ButtonCore/index.js","/home/circleci/repo/src/InlineList/index.js","/home/circleci/repo/src/mixins/border.js","/home/circleci/repo/src/mixins/centerChildren.js","/home/circleci/repo/src/mixins/ellipsis.js","/home/circleci/repo/src/mixins/fillParent.js","/home/circleci/repo/src/mixins/ie11Hack.js","/home/circleci/repo/src/mixins/overflowWrap.js","/home/circleci/repo/src/mixins/visuallyHidden.js","/home/circleci/repo/src/mixins/zIndex.js","/home/circleci/repo/src/mixins/index.js"],"names":["Wrapper","styled","_ref","buttonRef","otherProps","round","square","fullWidth","color","size","align","Object","objectWithoutProperties","react_default","a","createElement","ButtonCore","assign","ref","withConfig","displayName","componentId","p","css","pxToRem","theme","globals","typeScale","m","borderRadius","buttons","s","xs","text","background","links","alpha","shade","shadeStrength","fillParent","lineStrength","ThreePx","FocusRing","span","HoverShade","Math","min","Content","ButtonText","spacing","xxs","Subtitle","xxxs","ellipsis","textDimStrength","Button","forwardRef","props","as","children","_props$color","icon","iconRight","subline","title","iconEl","Icon","name","forwardedAs","aria-label","propTypes","PropTypes","string","bool","oneOf","layoutProps","MDXLayout","MDXContent","components","index_es","mdxType","id","index_esm","__position","__code","__scope","this","Playground","Props","InlineList","__codesandbox","src_Button","isActive","of","isMDXComponent","Clickable","button","type","isDisabled","disabled","className","_home_circleci_repo_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","classNames","is-active","is-disabled","defaultType","react__WEBPACK_IMPORTED_MODULE_1___default","defaultProps","Item","li","ul","splitBy","React","Children","map","child","i","key","border","dir","centerChildren","overflow","textOverflow","whiteSpace","ie11Hack","overflowWrap","visuallyHidden","zIndex","z","__webpack_require__","d","__webpack_exports__","mixins_ellipsis","mixins_fillParent","mixins_overflowWrap"],"mappings":"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","file":"static/js/src-button-readme.631490bf.js","sourcesContent":["import React, {forwardRef} from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nimport {alpha} from '../utils/colors';\nimport {pxToRem} from '../utils/units';\nimport {fillParent, ellipsis} from '../mixins';\n\nimport ButtonCore from '../ButtonCore';\nimport Icon from '../Icon';\n\nimport 'focus-visible';\n\nconst PropFilteringWrapper = ({\n\tbuttonRef,\n\tround,\n\tsquare,\n\tfullWidth,\n\tcolor,\n\tsize,\n\talign,\n\t...otherProps\n}) => <ButtonCore ref={buttonRef} {...otherProps} />;\n\nconst Wrapper = styled(PropFilteringWrapper)`\n\t/* Structure, size & spacing */\n\n\tposition: relative;\n\n\t${p =>\n\t\tp.fullWidth &&\n\t\tcss`\n\t\t\tdisplay: block;\n\t\t\twidth: 100%; /* needed for button element */\n\t\t`}\n\tpadding: ${pxToRem(12)};\n\n\tfont-size: ${p => p.theme.globals.typeScale.m};\n\tfont-weight: 600;\n\tline-height: 1;\n\ttext-align: ${p => p.align || 'center'};\n\ttext-decoration: none;\n\n\t${p =>\n\t\t!p.square &&\n\t\tcss`\n\t\t\tborder-radius: ${p.round\n\t\t\t\t? '2rem'\n\t\t\t\t: pxToRem(p.theme.globals.borderRadius.buttons)};\n\t\t`}\n\n\t${p =>\n\t\tp.size === 'large' &&\n\t\tcss`\n\t\t\tpadding: ${pxToRem(19)};\n\t\t`}\n\n\t${p =>\n\t\tp.size === 'medium' &&\n\t\tcss`\n\t\t\tpadding: ${pxToRem(8)};\n\t\t\tfont-size: ${p => p.theme.globals.typeScale.s};\n\t\t`}\n\n\t${p =>\n\t\tp.size === 'small' &&\n\t\tcss`\n\t\t\tpadding: ${pxToRem(5)};\n\t\t\tfont-size: ${p => p.theme.globals.typeScale.xs};\n\t\t`}\n\n\t/* Colours */\n\n\t${p =>\n\t\t(p.color === 'default' ||\n\t\t\tp.color === 'primary' ||\n\t\t\tp.color === 'important') &&\n\t\tcss`\n\t\t\tcolor: ${p => p.theme.globals.buttons[p.color].text};\n\t\t\tbackground-color: ${p =>\n\t\t\t\tp.theme.globals.buttons[p.color].background};\n\t\t`}\n\n\t${p =>\n\t\tp.color === 'transparent' &&\n\t\tcss`\n\t\t\tcolor: ${p => p.theme.links};\n\t\t\tbackground-color: transparent;\n\t\t`}\n\n\t${p =>\n\t\tp.color === 'shaded' &&\n\t\tcss`\n\t\t\tcolor: ${p => p.theme.links};\n\t\t\tbackground-color: ${p =>\n\t\t\t\talpha(p.theme.shade, p.theme.shadeStrength)};\n\t\t`}\n\n\t/* Add a border to default button */\n\t${p =>\n\t\tp.color === 'default' &&\n\t\tcss`\n\t\t\t&::before {\n\t\t\t\tcontent: '';\n\t\t\t\t${fillParent}\n\t\t\t\tborder-radius: inherit;\n\t\t\t\tborder: 1px solid\n\t\t\t\t\t${p => alpha(p.theme.shade, p.theme.lineStrength)};\n\t\t\t}\n\t\t`}\n\n\t&.focus-visible {\n\t\toutline: none;\n\t}\n\n\t&.is-disabled {\n\t\tcolor: white;\n\t\tbackground-color: ${alpha('black', 0.3)};\n\t\tborder-color: transparent;\n\t\topacity: 0.3;\n\t\ttext-shadow: 0 1px 3px black;\n\t\tcursor: not-allowed;\n\n\t\t${p =>\n\t\t\t(p.color === 'transparent' || p.color === 'shaded') &&\n\t\t\tcss`\n\t\t\t\tcolor: ${p => p.theme.text};\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder-color: transparent;\n\t\t\t\ttext-shadow: none;\n\t\t\t`}\n\t}\n`;\n\nconst ThreePx = pxToRem(3);\n\nconst FocusRing = styled.span`\n\t${fillParent}\n\tborder-radius: inherit;\n\n\tbox-shadow: 0 0 0 ${ThreePx}\n\t\t${p => alpha(p.theme.shade, p.theme.lineStrength + 0.05)};\n\n\topacity: 0;\n\ttransition: opacity 250ms linear;\n\twill-change: opacity;\n\n\t${Wrapper}.focus-visible > & {\n\t\ttop: -${ThreePx};\n\t\tleft: -${ThreePx};\n\t\tbottom: -${ThreePx};\n\t\tright: -${ThreePx};\n\n\t\tbox-shadow: 0 0 0 ${ThreePx}\n\t\t\t${p =>\n\t\t\t\tp.color === 'primary' || p.color === 'important'\n\t\t\t\t\t? p.theme.globals.buttons[p.color].background\n\t\t\t\t\t: p.theme.links};\n\n\t\topacity: 1;\n\t\ttransition-duration: 50ms;\n\t}\n\t/* prettier-ignore */\n\t${Wrapper}:not(.is-disabled):active > & {\n\t\topacity: 1;\n\t\ttransition-duration: 50ms;\n\t}\n`;\n\nconst HoverShade = styled.span`\n\t${fillParent}\n\tborder-radius: inherit;\n\n\tbackground-color: ${p =>\n\t\talpha(p.theme.shade, Math.min(p.theme.shadeStrength, 0.12))};\n\n\topacity: 0;\n\ttransition: opacity 250ms linear;\n\twill-change: opacity;\n\n\t${Wrapper}.is-active > & {\n\t\topacity: 0.666;\n\t\tbox-shadow: inset 0 0 0.25rem rgba(0, 0, 0, 0.5);\n\t}\n\t/* prettier-ignore */\n\t${Wrapper}:not(.is-disabled):hover > & {\n\t\topacity: 1;\n\t\ttransition-duration: 50ms;\n\t}\n\t/* prettier-ignore */\n\t${Wrapper}:not(.is-disabled):active > & {\n\t\topacity: 0;\n\t\ttransition-duration: 250ms;\n\t}\n`;\n\nconst Content = styled.span`\n\tdisplay: block;\n\ttransform: translateZ(0);\n`;\n\nconst ButtonText = styled.span`\n\tpadding: 0 ${p => p.theme.globals.spacing.xxs};\n\tvertical-align: middle;\n`;\n\nconst Subtitle = styled.span`\n\tdisplay: block;\n\tpadding: ${p => p.theme.globals.spacing.xxxs} ${p =>\n\tp.theme.globals.spacing.xxs};\n\t${ellipsis}\n\topacity: ${p => p.theme.textDimStrength};\n\n\tfont-size: ${p => p.theme.globals.typeScale.s};\n`;\n\nfunction ButtonWithRef(props, ref) {\n\tconst {\n\t\tas,\n\t\tchildren,\n\t\tcolor = 'default',\n\t\ticon,\n\t\ticonRight,\n\t\tsubline,\n\t\ttitle,\n\t\t...otherProps\n\t} = props;\n\n\tconst iconEl = icon && <Icon name={icon} />;\n\n\treturn (\n\t\t<Wrapper\n\t\t\tforwardedAs={as}\n\t\t\tbuttonRef={ref}\n\t\t\taria-label={props['aria-label'] || title}\n\t\t\tcolor={color}\n\t\t\t{...otherProps}\n\t\t>\n\t\t\t<HoverShade />\n\t\t\t<FocusRing color={color} />\n\t\t\t<Content>\n\t\t\t\t{!iconRight && iconEl}\n\t\t\t\t{children && <ButtonText>{children}</ButtonText>}\n\t\t\t\t{iconRight && iconEl}\n\t\t\t\t{subline && <Subtitle>{subline}</Subtitle>}\n\t\t\t</Content>\n\t\t</Wrapper>\n\t);\n}\n\nconst Button = forwardRef(ButtonWithRef);\n\nButton.propTypes = {\n\ticon: PropTypes.string,\n\ticonRight: PropTypes.bool,\n\tsubline: PropTypes.string,\n\n\tround: PropTypes.bool,\n\tsquare: PropTypes.bool,\n\tfullWidth: PropTypes.bool,\n\tcolor: PropTypes.oneOf([\n\t\t'default',\n\t\t'primary',\n\t\t'important',\n\t\t'transparent',\n\t\t'shaded',\n\t]),\n\tsize: PropTypes.oneOf(['small', 'medium', 'large']),\n\talign: PropTypes.string,\n};\n\nexport default Button;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz'\nimport InlineList from '../InlineList'\nimport Button from './'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Nice looking buttons, yo.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<InlineList spacing=\\\"s\\\">\\n  <Button color=\\\"primary\\\" icon=\\\"ok\\\">\\n    Save\\n  </Button>\\n  <Button>Cancel</Button>\\n  <Button size=\\\"medium\\\" color=\\\"important\\\">\\n    Delete\\n  </Button>\\n  <Button size=\\\"medium\\\" icon=\\\"send\\\">\\n    Share\\n  </Button>\\n  <Button size=\\\"small\\\" color=\\\"transparent\\\">\\n    Forgot password?\\n  </Button>\\n  <Button round icon=\\\"plus\\\" color=\\\"important\\\" />\\n  <Button isActive size=\\\"medium\\\">\\n    Done\\n  </Button>\\n</InlineList>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      InlineList,\n      Button\n    }} __codesandbox={``} mdxType=\"Playground\">\n\t<InlineList spacing=\"s\" mdxType=\"InlineList\">\n\t\t<Button color=\"primary\" icon=\"ok\" mdxType=\"Button\">Save</Button>\n\t\t<Button mdxType=\"Button\">Cancel</Button>\n\t\t<Button size=\"medium\" color=\"important\" mdxType=\"Button\">Delete</Button>\n\t\t<Button size=\"medium\" icon=\"send\" mdxType=\"Button\">Share</Button>\n\t\t<Button size=\"small\" color=\"transparent\" mdxType=\"Button\">Forgot password?</Button>\n\t\t<Button round icon=\"plus\" color=\"important\" mdxType=\"Button\" />\n\t\t<Button isActive size=\"medium\" mdxType=\"Button\">Done</Button>\n\t</InlineList>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React, {forwardRef} from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\n\nimport 'focus-visible';\n\nconst Clickable = styled.button`\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0;\n\tvertical-align: middle;\n\n\tfont: inherit;\n\ttext-decoration: none;\n\ttext-align: inherit;\n\n\tcolor: inherit;\n\tbackground-color: transparent;\n\tborder: none;\n\tborder-radius: 0;\n\tcursor: pointer;\n\n\tappearance: none;\n\n\t&:focus:not(.focus-visible) {\n\t\toutline: none;\n\t}\n\n\t&.focus-visible {\n\t\toutline: 3px solid currentColor;\n\t\toutline-offset: 3px;\n\t}\n\n\t/* Normalise inner button spacing in Gecko browsers */\n\t&::-moz-focus-inner {\n\t\tpadding: 0;\n\t\tborder: 0;\n\t}\n`;\n\nconst ButtonCore = forwardRef((props, ref) => {\n\tconst {\n\t\tas,\n\t\ttype,\n\t\tisActive,\n\t\tisDisabled,\n\t\tdisabled,\n\t\tclassName,\n\t\t...otherProps\n\t} = props;\n\n\tconst classes = classNames(className, {\n\t\t'is-active': isActive,\n\t\t'is-disabled': isDisabled || disabled,\n\t});\n\n\tconst defaultType = !type && as === 'button' ? as : type;\n\n\t// Delete button props that would end up in DOM due to\n\t// styled-components' overly permissive attribute whitelist\n\tdelete otherProps.color;\n\n\treturn (\n\t\t<Clickable\n\t\t\t{...otherProps}\n\t\t\tref={ref}\n\t\t\tas={as}\n\t\t\ttype={defaultType}\n\t\t\tdisabled={isDisabled || disabled}\n\t\t\tclassName={classes}\n\t\t/>\n\t);\n});\n\nButtonCore.defaultProps = {\n\tas: 'button',\n};\n\nexport default ButtonCore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nconst Item = styled.li`\n\tdisplay: inline-block;\n\tmax-width: 100%;\n`;\n\nconst Wrapper = styled.ul`\n\tlist-style: none;\n\tmargin: 0;\n    padding: 0;\n\tmargin-left: 0;\n\n\t${p =>\n\t\tp.spacing &&\n\t\tcss`\n\t\t\t/* Compensate for Item's padding */\n\t\t\tmargin-left: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t\tmargin-bottom: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t`}\n\n\t& > ${Item} {\n\t\tvertical-align: ${p => p.align || 'top'};\n\n\t\t${p =>\n\t\t\tp.spacing &&\n\t\t\tcss`\n\t\t\t\tpadding-left: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t\tpadding-bottom: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'comma' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: ',';\n\t\t\t\t\tmargin-right: 0.3em;\n\t\t\t\t}\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'dot' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: '·';\n\t\t\t\t\tmargin: 0 0.35em;\n\t\t\t\t}\n\t\t\t`}\n\t}\n`;\n\nconst InlineList = ({children, ...otherProps}) => {\n\treturn (\n\t\t<Wrapper {...otherProps}>\n\t\t\t{React.Children.map(children, (child, i) => {\n\t\t\t\tif (child) {\n\t\t\t\t\treturn <Item key={i}>{child}</Item>;\n\t\t\t\t}\n\t\t\t})}\n\t\t</Wrapper>\n\t);\n};\nInlineList.propTypes = {\n\talign: PropTypes.string,\n\tspacing: PropTypes.string,\n\tsplitBy: PropTypes.oneOf(['comma', 'dot']),\n};\n\nInlineList.Wrapper = Wrapper;\nInlineList.Item = Item;\n\nexport default InlineList;\n","import {css} from 'styled-components';\n\nimport {alpha} from '../utils/colors';\n\nconst border = dir => css`\n\tborder-${dir}: 1px solid ${p => alpha(p.theme.shade, p.theme.lineStrength)};\n`;\n\nexport default border;\n","import {css} from 'styled-components';\n\nconst centerChildren = css`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport default centerChildren;\n","const ellipsis = {\n\toverflow: 'hidden',\n\ttextOverflow: 'ellipsis',\n\twhiteSpace: 'nowrap',\n};\n\nexport default ellipsis;\n","import {css} from 'styled-components';\n\nconst fillParent = css`\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n`;\n\nexport default fillParent;\n","/* Use this as a media query to apply styles only on IE 11 */\n\nconst ie11Hack =\n\t'screen and (-ms-high-contrast: active), (-ms-high-contrast: none)';\n\nexport default ie11Hack;\n","import {css} from 'styled-components';\n\nconst overflowWrap = css`\n\toverflow-wrap: break-word;\n\tword-wrap: break-word;\n\n\tword-break: break-word;\n`;\n\nexport default overflowWrap;\n","import {css} from 'styled-components';\n\nconst visuallyHidden = css`\n\tposition: absolute;\n\toverflow: hidden;\n\twidth: 1px;\n\theight: 1px;\n\tpadding: 0;\n\tclip: rect(0 0 0 0);\n\tborder: 0;\n`;\n\nexport default visuallyHidden;\n","import {css} from 'styled-components';\n\nconst zIndex = css`\n\tz-index: ${p => p.theme.globals.z[p.z]};\n`;\n\nexport default zIndex;\n","import border from './border';\nimport centerChildren from './centerChildren';\nimport ellipsis from './ellipsis';\nimport fillParent from './fillParent';\nimport ie11Hack from './ie11Hack';\nimport overflowWrap from './overflowWrap';\nimport visuallyHidden from './visuallyHidden';\nimport zIndex from './zIndex';\n\nexport {\n\tborder,\n\tcenterChildren,\n\tellipsis,\n\tfillParent,\n\tie11Hack,\n\toverflowWrap,\n\tvisuallyHidden,\n\tzIndex,\n};\n"],"sourceRoot":""}