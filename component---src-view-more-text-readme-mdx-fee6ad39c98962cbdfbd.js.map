{"version":3,"sources":["webpack:///../src/ViewMoreText/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","content","maxLength","viewMoreLabel","viewLessLabel","of","ViewMoreText","isMDXComponent"],"mappings":"gRAQaA,G,UAAe,S,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,oXACE,yBAAgB,CACd,WAAc,KADhB,aADF,UAKA,gHACE,yBAAgB,CACd,WAAc,KADhB,iBADF,QAKE,yBAAgB,CACd,WAAc,KADhB,iBALF,KASA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYA,QAAQ,cAClB,YAAC,IAAD,CAAcC,QAAQ,4DAA4DC,UAAW,GAAIF,QAAQ,iBACzG,uBACA,uBACA,YAAC,IAAD,CAAcC,QAAQ,qHAAqHC,UAAW,GAAIF,QAAQ,iBAClK,uBACA,uBACA,YAAC,IAAD,CAAcC,QAAQ,yaAAyaC,UAAW,IAAKC,cAAc,YAAYC,cAAc,iCAAiCJ,QAAQ,kBAEliB,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOK,GAAIC,IAAcN,QAAQ,gB,2MAKrCH,EAAWU,gBAAiB","file":"component---src-view-more-text-readme-mdx-fee6ad39c98962cbdfbd.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport ViewMoreText from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"viewmoretext\"\n    }}>{`ViewMoreText`}</h1>\n    <p>{`Truncates a piece of text at a specified length, and displays a \"View more\" button which reveals the rest of the text when clicked. When the text is only slightly shorter than the specified length, so that revealing it would take up just as much space as the \"View more\" button did, the text is not truncated. You can tweak this behaviour with the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`tolerance`}</inlineCode>\n      {` prop.`}</p>\n    <p>{`The labels of the \"View more\" and \"View less\" buttons can be customised using the props `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`viewMoreLabel`}</inlineCode>\n      {` and `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`viewLessLabel`}</inlineCode>\n      {`.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground mdxType=\"Playground\">\n      <ViewMoreText content=\"This is a short example text with a disappointing reveal.\" maxLength={26} mdxType=\"ViewMoreText\" />\n      <br />\n      <br />\n      <ViewMoreText content=\"This text is longer than the specified limit, but only by a small amount, so it would be pointless to truncate it.\" maxLength={85} mdxType=\"ViewMoreText\" />\n      <br />\n      <br />\n      <ViewMoreText content=\"Here comes a longer, tastier example. Beetroot water spinach okra water chestnut ricebean pea catsear courgette summer purslane. Water spinach arugula pea tatsoi aubergine spring onion bush tomato kale radicchio turnip chicory salsify pea sprouts fava bean. Dandelion zucchini burdock yarrow chickpea dandelion sorrel courgette turnip greens tigernut soybean radish artichoke wattle seed endive groundnut broccoli arugula.\" maxLength={110} viewMoreLabel=\"Read more\" viewLessLabel=\"I don't care about any of that\" mdxType=\"ViewMoreText\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ViewMoreText} mdxType=\"Props\" />\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}