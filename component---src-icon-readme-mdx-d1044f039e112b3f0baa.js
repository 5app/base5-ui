(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{HciZ:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return b})),t.d(n,"default",(function(){return h}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk"),t("mXGw");var o=t("/FXl"),a=t("TjRS"),c=t("ZFoC"),i=t("2mC/"),l=t("VaD+"),s=t("tATL"),r=t("11l2"),d=t("9Eoj");t("aD51");function p(){return(p=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Icon/README.mdx"}});var u={_frontmatter:b},m=a.a;function h(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,o,a={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(o.b)(m,p({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"icon"},"Icon"),Object(o.b)("p",null,"An image says more than a thousand words. ;)"),Object(o.b)("p",null,Object(o.b)("a",p({parentName:"p"},{href:"/base5-ui/src-icons-readme"}),"View all available icons here")),Object(o.b)("h2",{id:"using-the-wrapper-component"},"Using the Wrapper component"),Object(o.b)("p",null,"Using the ",Object(o.b)("inlineCode",{parentName:"p"},"<Icon />")," wrapper component allows you to dynamically display icons by their (kebab-cased, not CamelCased) name. Using the Icon component will bundle the whole base5 icon set with your app. See the next section if you only need a few icons from the set."),Object(o.b)(c.c,{__position:0,__code:'<Icon name="disk" />\n<Icon name="plus" />\n<Text as="div" size="xxl">\n  <Icon name="search" />\n  <Icon name="search" scale={0} />\n</Text>',__scope:{props:t,DefaultLayout:a.a,Playground:c.c,Props:c.d,Icon:i.a,Text:l.a,DiskIcon:s.default,PlusIcon:r.default,SearchIcon:d.default},mdxType:"Playground"},Object(o.b)(i.a,{name:"disk",mdxType:"Icon"}),Object(o.b)(i.a,{name:"plus",mdxType:"Icon"}),Object(o.b)(l.a,{as:"div",size:"xxl",mdxType:"Text"},Object(o.b)(i.a,{name:"search",mdxType:"Icon"}),Object(o.b)(i.a,{name:"search",scale:0,mdxType:"Icon"}))),Object(o.b)("h2",{id:"using-individual-icons"},"Using individual icons"),Object(o.b)("p",null,"If you don't want to bundle the whole icon set with your app, import the icons individually:"),Object(o.b)("pre",null,Object(o.b)("code",p({parentName:"pre"},{className:"language-js"}),"import DiskIcon from 'base5-ui/icons/Disk';\nimport PlusIcon from 'base5-ui/icons/Plus';\nimport SearchIcon from 'base5-ui/icons/Search';\n")),Object(o.b)("p",null,"and use them directly:"),Object(o.b)(c.c,{__position:1,__code:"<DiskIcon />\n<PlusIcon />\n<SearchIcon />",__scope:{props:t,DefaultLayout:a.a,Playground:c.c,Props:c.d,Icon:i.a,Text:l.a,DiskIcon:s.default,PlusIcon:r.default,SearchIcon:d.default},mdxType:"Playground"},Object(o.b)(s.default,{mdxType:"DiskIcon"}),Object(o.b)(r.default,{mdxType:"PlusIcon"}),Object(o.b)(d.default,{mdxType:"SearchIcon"})),Object(o.b)("h2",{id:"props"},"Props"),Object(o.b)("p",null,"The following props are available on both the individual icon components as well as the ",Object(o.b)("inlineCode",{parentName:"p"},"<Icon />")," component:"),Object(o.b)(c.d,{of:i.a,mdxType:"Props"}),Object(o.b)("h2",{id:"aligning-icons-with-text"},"Aligning icons with text"),Object(o.b)("p",null,'When placed next to or inside of text, icons tend to sit a bit too low compared to the text\'s baseline. They also often look darker than text, even if they "technically" have the same colour. The props ',Object(o.b)("inlineCode",{parentName:"p"},"vAlign")," and ",Object(o.b)("inlineCode",{parentName:"p"},"dimmed")," exist to compensate for these issues. Use the Boolean ",Object(o.b)("inlineCode",{parentName:"p"},"vAlign")," prop to nudge the icon up by a few pixels to visually align it with its surrounding text. Use ",Object(o.b)("inlineCode",{parentName:"p"},"dimmed")," to make the icon slightly transparent to match the text's appearance."),Object(o.b)(c.c,{__position:3,__code:"<PlusIcon /> Without vAlign and undimmed\n<br />\n<br />\n<PlusIcon vAlign dimmed /> With vAlign and dimmed",__scope:{props:t,DefaultLayout:a.a,Playground:c.c,Props:c.d,Icon:i.a,Text:l.a,DiskIcon:s.default,PlusIcon:r.default,SearchIcon:d.default},mdxType:"Playground"},Object(o.b)(r.default,{mdxType:"PlusIcon"})," Without vAlign and undimmed",Object(o.b)("br",null),Object(o.b)("br",null),Object(o.b)(r.default,{vAlign:!0,dimmed:!0,mdxType:"PlusIcon"})," With vAlign and dimmed"))}h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Icon/README.mdx"}}),h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-icon-readme-mdx-d1044f039e112b3f0baa.js.map