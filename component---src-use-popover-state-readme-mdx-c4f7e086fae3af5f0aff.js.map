{"version":3,"sources":["webpack:///../src/usePopoverState/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Box","Popover","usePopoverState","openDelay","onOpen","console","log","onClose","isOpen","open","close","p","content","placement","popover","ref","onMouseEnter","onMouseLeave","isMDXComponent"],"mappings":"wSAUaA,G,UAAe,S,gNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,8EACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kkBAA0kBC,SAAO,GAClnBJ,QACAH,kBACAQ,eACAC,UACAC,QACAC,YACAC,qBAPknB,gBAQlnBZ,IARknB,EASlnBH,eATknB,GAUjnBO,QAAQ,eACb,WAAM,MAKIQ,YAAgB,CAClBC,UAAW,IACXC,OAAQ,kBAAMC,QAAQC,IAAI,aAC1BC,QAAS,kBAAMF,QAAQC,IAAI,eAN3BE,EAFF,EAEEA,OACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,MAMF,OAAO,YAAC,IAAD,CAAKC,EAAE,IAAIjB,QAAQ,OAC9B,YAAC,IAAD,CAASc,OAAQA,EAAQI,QAAQ,4DAA4DC,UAAU,YAAYnB,QAAQ,YACzH,SAAAoB,GAAO,OAAI,oBAAMC,IAAKD,EAAQC,IAAKC,aAAcP,EAAMQ,aAAcP,GAA1D,wC,8MAWjBnB,EAAW2B,gBAAiB","file":"component---src-use-popover-state-readme-mdx-c4f7e086fae3af5f0aff.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Box from '../Box';\nimport Popover from '../Popover';\nimport usePopoverState from '../usePopoverState';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"usepopoverstate\"\n    }}>{`usePopoverState`}</h1>\n    <p>{`Easily handle the state of popover menus or tooltips.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const { isOpen, open, close } = usePopoverState({\\n    openDelay: 200,\\n    onOpen: () => console.log(\\'Opening!\\'),\\n    onClose: () => console.log(\\'Closing!\\'),\\n  })\\n  return (\\n    <Box p=\\\"l\\\">\\n      <Popover\\n        isOpen={isOpen}\\n        content=\\\"I\\'m a popover. I\\'ll always stick to my reference element!\\\"\\n        placement=\\\"top-start\\\"\\n      >\\n        {popover => (\\n          <span ref={popover.ref} onMouseEnter={open} onMouseLeave={close}>\\n            I\\'m a reference element\\n          </span>\\n        )}\\n      </Popover>\\n    </Box>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Box,\n      Popover,\n      usePopoverState,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t{() => {\n        const {\n          isOpen,\n          open,\n          close\n        } = usePopoverState({\n          openDelay: 200,\n          onOpen: () => console.log('Opening!'),\n          onClose: () => console.log('Closing!')\n        });\n        return <Box p=\"l\" mdxType=\"Box\">\n\t\t\t\t<Popover isOpen={isOpen} content=\"I'm a popover. I'll always stick to my reference element!\" placement=\"top-start\" mdxType=\"Popover\">\n\t\t\t\t\t{popover => <span ref={popover.ref} onMouseEnter={open} onMouseLeave={close}>\n\t\t\t\t\t\t\tI'm a reference element\n\t\t\t\t\t\t</span>}\n\t\t\t\t</Popover>\n\t\t\t</Box>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}