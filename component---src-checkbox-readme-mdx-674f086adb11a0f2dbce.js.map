{"version":3,"sources":["webpack:///../src/Checkbox/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","React","checked","setChecked","triState","setTriState","spacing","onChange","dimmed","as","disabled","indeterminate","prevState","scale","size","of","Checkbox","isMDXComponent"],"mappings":"wSAUaA,G,UAAe,S,yMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,YADR,YAGA,yFACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYA,QAAQ,eACjB,WAAM,MACyBC,YAAe,GAAtCC,EADF,KACWC,EADX,OAK2BF,WAAe,iBAAxCG,EALF,KAKYC,EALZ,KAsBL,OAAO,YAAC,IAAD,CAAOC,QAAQ,IAAIN,QAAQ,SACnC,yBACC,YAAC,IAAD,CAAUE,QAASA,EAASK,SArBb,kBAAMJ,GAAW,SAAAD,GAAO,OAAKA,MAqBEF,QAAQ,aADvD,mBAIA,YAAC,IAAD,CAAMQ,QAAM,EAACC,GAAG,QAAQT,QAAQ,QAC/B,YAAC,IAAD,CAAUE,SAAO,EAACQ,UAAQ,EAACV,QAAQ,aADpC,4BAGA,YAAC,IAAD,CAAMQ,QAAM,EAACC,GAAG,QAAQT,QAAQ,QAC/B,YAAC,IAAD,CAAUU,UAAQ,EAACV,QAAQ,aAD5B,8BAGA,yBACC,YAAC,IAAD,CAAUW,cAA4B,kBAAbP,EAA8BF,QAAsB,YAAbE,EAAwBG,SA3BxF,WACEF,GAAY,SAAAO,GACV,OAAQA,GACN,IAAK,gBACH,MAAO,UAET,IAAK,UACH,MAAO,YAET,IAAK,YACH,MAAO,qBAiBkGZ,QAAQ,aAAc,IADxI,wBAIA,YAAC,IAAD,CAAMQ,QAAM,EAACC,GAAG,QAAQT,QAAQ,QAC/B,YAAC,IAAD,CAAUU,UAAQ,EAACC,eAAa,EAACX,QAAQ,aAD1C,kCAIA,yBACC,YAAC,IAAD,CAAUa,MAAO,IAAMb,QAAQ,aADhC,yBAGA,YAAC,IAAD,CAAMS,GAAG,QAAQK,KAAK,KAAKd,QAAQ,QAClC,YAAC,IAAD,CAAUa,MAAM,OAAOb,QAAQ,aADhC,6CAMH,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOe,GAAIC,IAAUhB,QAAQ,gB,uMAKjCH,EAAWoB,gBAAiB","file":"component---src-checkbox-readme-mdx-674f086adb11a0f2dbce.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Stack from '../Stack';\nimport Text from '../Text';\nimport Checkbox from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`Pretty and accessible checkbox that'll match your theme colours.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground mdxType=\"Playground\">\n      {() => {\n        const [checked, setChecked] = React.useState(true);\n\n        const toggle = () => setChecked(checked => !checked);\n\n        const [triState, setTriState] = React.useState('indeterminate');\n\n        function cycleTriState() {\n          setTriState(prevState => {\n            switch (prevState) {\n              case 'indeterminate':\n                return 'checked';\n\n              case 'checked':\n                return 'unchecked';\n\n              case 'unchecked':\n                return 'indeterminate';\n            }\n          });\n        }\n\n        return <Stack spacing=\"s\" mdxType=\"Stack\">\n    \t\t\t<label>\n    \t\t\t\t<Checkbox checked={checked} onChange={toggle} mdxType=\"Checkbox\" /> Regular\n    \t\t\t\toption\n    \t\t\t</label>\n    \t\t\t<Text dimmed as=\"label\" mdxType=\"Text\">\n    \t\t\t\t<Checkbox checked disabled mdxType=\"Checkbox\" /> Disabled checked option\n    \t\t\t</Text>\n    \t\t\t<Text dimmed as=\"label\" mdxType=\"Text\">\n    \t\t\t\t<Checkbox disabled mdxType=\"Checkbox\" /> Disabled unchecked option\n    \t\t\t</Text>\n    \t\t\t<label>\n    \t\t\t\t<Checkbox indeterminate={triState === 'indeterminate'} checked={triState === 'checked'} onChange={cycleTriState} mdxType=\"Checkbox\" />{' '}\n    \t\t\t\tIndeterminate option\n    \t\t\t</label>\n    \t\t\t<Text dimmed as=\"label\" mdxType=\"Text\">\n    \t\t\t\t<Checkbox disabled indeterminate mdxType=\"Checkbox\" /> Disabled indeterminate\n    \t\t\t\toption\n    \t\t\t</Text>\n    \t\t\t<label>\n    \t\t\t\t<Checkbox scale={0.75} mdxType=\"Checkbox\" /> Scaled-down checkbox\n    \t\t\t</label>\n    \t\t\t<Text as=\"label\" size=\"xl\" mdxType=\"Text\">\n    \t\t\t\t<Checkbox scale=\"auto\" mdxType=\"Checkbox\" /> Checkbox that scales along with text\n    \t\t\t</Text>\n    \t\t</Stack>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}