(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{"2RRn":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return u}));var a=n("Fcif"),o=n("+I+c"),r=(n("mXGw"),n("/FXl")),c=n("TjRS"),i=(n("ZFoC"),n("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/useInterval/README.mdx"}});var s={_frontmatter:i},l=c.a;function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)(l,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"useinterval"},"useInterval"),Object(r.b)("p",null,"A hook for safely & declaratively setting up intervals in functional React components."),Object(r.b)("p",null,"Based on Dan Abramov's blog post ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://overreacted.io/making-setinterval-declarative-with-react-hooks/"}),'"Making setInterval Declarative with React Hooks"')),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import useInterval from 'base5-ui/useInterval';\n\nfunction Counter() {\n    const [count, setCount] = useState(0);\n\n    useInterval(() => {\n        // Your custom logic here\n        setCount(count + 1);\n    }, 1000);\n\n    return <h1>{count}</h1>;\n}\n")))}void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/useInterval/README.mdx"}}),u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-use-interval-readme-mdx-47fe93390aab131a77a0.js.map