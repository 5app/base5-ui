{"version":3,"sources":["webpack:///../src/Meter/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","value","max","min","high","color","of","Meter","isMDXComponent"],"mappings":"gRAQaA,G,UAAe,S,sMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,SADR,SAGA,kDACE,yBAAgB,CACd,WAAc,KADhB,WADF,qEAKA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYA,QAAQ,cAClB,YAAC,IAAD,CAAOC,MAAO,GAAKC,IAAK,EAAGF,QAAQ,UACnC,uBACA,YAAC,IAAD,CAAOC,MAAO,GAAIE,KAAM,IAAKD,IAAK,IAAKE,KAAM,GAAIJ,QAAQ,UACzD,uBACA,YAAC,IAAD,CAAOC,MAAO,GAAIE,IAAK,EAAGD,IAAK,IAAKG,MAAM,QAAQL,QAAQ,WAE5D,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOM,GAAIC,IAAOP,QAAQ,gB,oMAK9BH,EAAWW,gBAAiB","file":"component---src-meter-readme-mdx-2986f1d9325b827ef025.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Meter from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"meter\"\n    }}>{`Meter`}</h1>\n    <p>{`A stand-in for the native `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`<meter>`}</inlineCode>\n      {` HTML element built to ensure consistent visuals across browsers.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground mdxType=\"Playground\">\n      <Meter value={0.3} max={1} mdxType=\"Meter\" />\n      <br />\n      <Meter value={39} min={-100} max={100} high={33} mdxType=\"Meter\" />\n      <br />\n      <Meter value={80} min={0} max={100} color=\"links\" mdxType=\"Meter\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Meter} mdxType=\"Props\" />\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}