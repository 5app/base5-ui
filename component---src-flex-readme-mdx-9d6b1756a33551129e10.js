(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{Pz05:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return i})),t.d(n,"default",(function(){return s}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk"),t("mXGw");var o=t("/FXl"),a=t("TjRS"),r=t("ZFoC"),l=t("A9bP");t("aD51");function p(){return(p=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Flex/README.mdx"}});var b={_frontmatter:i},c=a.a;function s(e){var n,t=e.components,s=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(o.b)(c,p({},b,s,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"flex"},"Flex"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Flex")," is a container component for building layouts using CSS flexbox. It's especially useful when used with the ",Object(o.b)("inlineCode",{parentName:"p"},"Box")," component which provides control for laying out the children."),Object(o.b)("p",null,"The component is built on top of ",Object(o.b)("inlineCode",{parentName:"p"},"Box")," and its props ",Object(o.b)("inlineCode",{parentName:"p"},"align"),", ",Object(o.b)("inlineCode",{parentName:"p"},"column"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"wrap")," are aliases for the ",Object(o.b)("inlineCode",{parentName:"p"},"Box")," props ",Object(o.b)("inlineCode",{parentName:"p"},"alignItems"),", ",Object(o.b)("inlineCode",{parentName:"p"},"stackItems"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"wrapItems"),"."),Object(o.b)("h2",{id:"examples"},"Examples"),Object(o.b)(r.c,{__position:0,__code:'<Flex align="top">\n  <Box grow shrink>\n    I take up all the free space and push other Boxes away! ðŸ‘‰\n  </Box>\n  <Box>ðŸ‘€ I\'m smol.</Box>\n</Flex>\n<Flex wrap align="top" mt="m">\n  <Box grow shrink>\n    Still taking up all free space.\n  </Box>\n  <Box>If there\'s no room for me I\'ll wrap onto a new line ðŸ‘‡</Box>\n</Flex>',__scope:(n={props:s,DefaultLayout:a.a,Playground:r.c,Props:r.d,Flex:l.b,Box:l.a},n.DefaultLayout=a.a,n._frontmatter=i,n),mdxType:"Playground"},Object(o.b)(l.b,{align:"top",mdxType:"Flex"},Object(o.b)(l.a,{grow:!0,shrink:!0,mdxType:"Box"},"I take up all the free space and push other Boxes away! ðŸ‘‰"),Object(o.b)(l.a,{mdxType:"Box"},"ðŸ‘€ I'm smol.")),Object(o.b)(l.b,{wrap:!0,align:"top",mt:"m",mdxType:"Flex"},Object(o.b)(l.a,{grow:!0,shrink:!0,mdxType:"Box"},"Still taking up all free space."),Object(o.b)(l.a,{mdxType:"Box"},"If there's no room for me I'll wrap onto a new line ðŸ‘‡"))),Object(o.b)("h2",{id:"props"},"Props"),Object(o.b)(r.d,{of:l.b,mdxType:"Props"}))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Flex/README.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-flex-readme-mdx-9d6b1756a33551129e10.js.map