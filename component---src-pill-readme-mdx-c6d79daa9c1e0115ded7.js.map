{"version":3,"sources":["webpack:///../src/Pill/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Card","Stack","Pill","spacing","dimmed","background","icon","iconColor","onDelete","console","log","deleteLabel","onClick","maxWidth","variant","p","isToggle","of","isMDXComponent"],"mappings":"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","file":"component---src-pill-readme-mdx-c6d79daa9c1e0115ded7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Card from '../Card';\nimport Stack from '../Stack';\nimport Pill from './';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"pill\"\n    }}>{`Pill`}</h1>\n    <p>{`The Pill component is great for representing simple items in the UI: assets, tags, categories, teams, or users.`}</p>\n    <p>{`Pills can have an icon and an optional \"Delete\" button which should remove the associated item from the list it's in.`}</p>\n    <p>{`Pills can be made clickable, but should never be used as action buttons (think \"Confirm\" or \"Cancel\" buttons). Use the `}<a parentName=\"p\" {...{\n        \"href\": \"/base5-ui/src-button-readme\"\n      }}>{`Button`}</a>{` component for this use case.`}</p>\n    <h2 {...{\n      \"id\": \"non-interactive-examples\"\n    }}>{`Non-interactive examples`}</h2>\n    <Playground __position={0} __code={'<Stack spacing=\\\"xs\\\">\\n  <Pill>Regular pill</Pill>\\n  <Pill dimmed>Dimmed pill</Pill>\\n  <Pill background=\\\"highlight\\\">Pill with custom background colour</Pill>\\n  <Pill icon=\\\"tag\\\" iconColor=\\\"neutral\\\">\\n    Pill with icon\\n  </Pill>\\n  <Pill dimmed icon=\\\"user\\\" iconColor=\\\"negative\\\">\\n    Dimmed pill with icon\\n  </Pill>\\n</Stack>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Card,\n      Stack,\n      Pill,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Stack spacing=\"xs\" mdxType=\"Stack\">\n\t\t<Pill mdxType=\"Pill\">Regular pill</Pill>\n\t\t<Pill dimmed mdxType=\"Pill\">Dimmed pill</Pill>\n\t\t<Pill background=\"highlight\" mdxType=\"Pill\">Pill with custom background colour</Pill>\n\t\t<Pill icon=\"tag\" iconColor=\"neutral\" mdxType=\"Pill\">\n\t\t\tPill with icon\n\t\t</Pill>\n\t\t<Pill dimmed icon=\"user\" iconColor=\"negative\" mdxType=\"Pill\">\n\t\t\tDimmed pill with icon\n\t\t</Pill>\n\t</Stack>\n    </Playground>\n    <h2 {...{\n      \"id\": \"interactive-examples\"\n    }}>{`Interactive examples`}</h2>\n    <p>{`To make a Pill's body clickable, simply attach an `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{` handler. You can also make the Pill a link: Use the `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` prop to choose which element to render, e.g. `}<inlineCode parentName=\"p\">{`\"a\"`}</inlineCode>{` or react-router's `}<inlineCode parentName=\"p\">{`{Link}`}</inlineCode>{`. You can then use the `}<inlineCode parentName=\"p\">{`href`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`to`}</inlineCode>{` prop to define the link's destination. All other link props will also be passed through to the clickable element.`}</p>\n    <Playground __position={1} __code={'<Stack spacing=\\\"xs\\\">\\n  <Pill onDelete={() => console.log(\\'Delete\\')} deleteLabel=\\\"Delete\\\">\\n    Regular, delete-able pill\\n  </Pill>\\n  <Pill dimmed onDelete={() => console.log(\\'Delete\\')} deleteLabel=\\\"Delete\\\">\\n    Dimmed, delete-able pill\\n  </Pill>\\n  <Pill\\n    icon=\\\"tag\\\"\\n    iconColor=\\\"neutral\\\"\\n    onDelete={() => console.log(\\'Delete\\')}\\n    deleteLabel=\\\"Delete\\\"\\n  >\\n    Delete-able Pill with icon\\n  </Pill>\\n  <Pill onClick={() => console.log(\\'Hello!\\')}>Clickable pill</Pill>\\n  <Pill\\n    onClick={() => console.log(\\'Hello!\\')}\\n    icon=\\\"external\\\"\\n    iconColor=\\\"pink\\\"\\n  >\\n    Clickable pill with icon\\n  </Pill>\\n  <Pill\\n    onClick={() => console.log(\\'Hello!\\')}\\n    icon=\\\"user\\\"\\n    iconColor=\\\"positive\\\"\\n    onDelete={() => console.log(\\'Delete\\')}\\n    deleteLabel=\\\"Delete\\\"\\n  >\\n    Clickable, delete-able pill\\n  </Pill>\\n  <Card maxWidth={250} variant=\\\"inverted\\\" p=\\\"s\\\">\\n    <Stack spacing=\\\"xs\\\">\\n      <Pill\\n        onClick={() => console.log(\\'Hello!\\')}\\n        icon=\\\"user\\\"\\n        iconColor=\\\"positive\\\"\\n      >\\n        Pill on a dark background\\n      </Pill>\\n      <Pill\\n        onClick={() => console.log(\\'Hello!\\')}\\n        icon=\\\"user\\\"\\n        iconColor=\\\"positive\\\"\\n        onDelete={() => console.log(\\'Delete\\')}\\n        deleteLabel=\\\"Delete\\\"\\n      >\\n        Pill with a long label that doesn\\'t fit the parent container\\n      </Pill>\\n    </Stack>\\n  </Card>\\n</Stack>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Card,\n      Stack,\n      Pill,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Stack spacing=\"xs\" mdxType=\"Stack\">\n\t\t<Pill onDelete={() => console.log('Delete')} deleteLabel=\"Delete\" mdxType=\"Pill\">\n\t\t\tRegular, delete-able pill\n\t\t</Pill>\n\t\t<Pill dimmed onDelete={() => console.log('Delete')} deleteLabel=\"Delete\" mdxType=\"Pill\">\n\t\t\tDimmed, delete-able pill\n\t\t</Pill>\n\t\t<Pill icon=\"tag\" iconColor=\"neutral\" onDelete={() => console.log('Delete')} deleteLabel=\"Delete\" mdxType=\"Pill\">\n\t\t\tDelete-able Pill with icon\n\t\t</Pill>\n\t\t<Pill onClick={() => console.log('Hello!')} mdxType=\"Pill\">Clickable pill</Pill>\n\t\t<Pill onClick={() => console.log('Hello!')} icon=\"external\" iconColor=\"pink\" mdxType=\"Pill\">\n\t\t\tClickable pill with icon\n\t\t</Pill>\n\t\t<Pill onClick={() => console.log('Hello!')} icon=\"user\" iconColor=\"positive\" onDelete={() => console.log('Delete')} deleteLabel=\"Delete\" mdxType=\"Pill\">\n\t\t\tClickable, delete-able pill\n\t\t</Pill>\n\t\t<Card maxWidth={250} variant=\"inverted\" p=\"s\" mdxType=\"Card\">\n\t\t\t<Stack spacing=\"xs\" mdxType=\"Stack\">\n\t\t\t\t<Pill onClick={() => console.log('Hello!')} icon=\"user\" iconColor=\"positive\" mdxType=\"Pill\">\n\t\t\t\t\tPill on a dark background\n\t\t\t\t</Pill>\n\t\t\t\t<Pill onClick={() => console.log('Hello!')} icon=\"user\" iconColor=\"positive\" onDelete={() => console.log('Delete')} deleteLabel=\"Delete\" mdxType=\"Pill\">\n\t\t\t\t\tPill with a long label that doesn't fit the parent container\n\t\t\t\t</Pill>\n\t\t\t</Stack>\n\t\t</Card>\n\t</Stack>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props isToggle of={Pill} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}