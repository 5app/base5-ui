{"version":3,"sources":["webpack:///../src/ThemedBox/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","name","p","borderRadius","boxShadow","isToggle","of","ThemedBox","isMDXComponent"],"mappings":"gRAQaA,G,UAAe,S,0MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,aADR,aAGA,qBAAG,yBAAgB,CACf,WAAc,KADf,aAAH,uCAIE,yBAAgB,CACd,WAAc,KADhB,gBAJF,QAQE,yBAAgB,CACd,WAAc,KADhB,OARF,eAYE,yBAAgB,CACd,WAAc,KADhB,gBAZF,kFAgBE,yBAAgB,CACd,WAAc,KADhB,OAhBF,iGAoBE,yBAAgB,CACd,WAAc,KADhB,SApBF,QAwBE,yBAAgB,CACd,WAAc,KADhB,oBAxBF,kBA4BA,6CACE,yBAAgB,CACd,WAAc,KADhB,QADF,yBAKE,yBAAgB,CACd,WAAc,KADhB,OALF,yFASA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYA,QAAQ,cAClB,YAAC,IAAD,CAAWC,KAAK,OAAOC,EAAE,IAAIF,QAAQ,aACnC,YAAC,IAAD,CAAWC,KAAK,OAAOE,aAAa,QAAQC,UAAU,OAAOF,EAAE,IAAIF,QAAQ,aACzE,iCAIN,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOK,UAAQ,EAACC,GAAIC,IAAWP,QAAQ,gB,wMAK3CH,EAAWW,gBAAiB","file":"component---src-themed-box-readme-mdx-1726f548e7463059be5d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport ThemedBox from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"themedbox\"\n    }}>{`ThemedBox`}</h1>\n    <p><inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`ThemedBox`}</inlineCode>\n      {` is a combination of the primitives `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`ThemeSection`}</inlineCode>\n      {` and `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`Box`}</inlineCode>\n      {`. While the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`ThemeSection`}</inlineCode>\n      {` is responsible for defining which theme colours can be used inside of it, the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`Box`}</inlineCode>\n      {` component actually picks up these theme colours and renders an element that uses them in its `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`color`}</inlineCode>\n      {` and `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`background-color`}</inlineCode>\n      {` declarations.`}</p>\n    <p>{`All props other than `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`name`}</inlineCode>\n      {` are passed on to the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`Box`}</inlineCode>\n      {` component, so this component is a great starting point for creating Card components.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground mdxType=\"Playground\">\n      <ThemedBox name=\"page\" p=\"l\" mdxType=\"ThemedBox\">\n        <ThemedBox name=\"card\" borderRadius=\"small\" boxShadow=\"soft\" p=\"s\" mdxType=\"ThemedBox\">\n          <p>{`Hello`}</p>\n        </ThemedBox>\n      </ThemedBox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props isToggle of={ThemedBox} mdxType=\"Props\" />\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}