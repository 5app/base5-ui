(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{cBK8:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return m})),n.d(t,"default",(function(){return f}));var i=n("Fcif"),c=n("+I+c"),a=n("mXGw"),l=n("/FXl"),o=n("TjRS"),r=n("ZFoC"),b=n("yrBt"),u=n("7xDH"),s=n("/+8G"),d=n("KhRu"),m=(n("aD51"),{});void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/useOnClickOutside/README.mdx"}});var O={_frontmatter:m},p=o.a;function f(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(l.b)(p,Object(i.a)({},O,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"useonclickoutside"},"useOnClickOutside"),Object(l.b)("p",null,"This hook lets you run a callback whenever the body of the page (or any other element) is clicked, and allows you to ignore clicks on a certain element within it by specifying the ",Object(l.b)("inlineCode",{parentName:"p"},"excludedElementRef")," prop."),Object(l.b)("h2",{id:"parameters"},"Parameters"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"excludedElementRef")," - A React ref (as obtained from ",Object(l.b)("inlineCode",{parentName:"li"},"useRef")," or ",Object(l.b)("inlineCode",{parentName:"li"},"createRef"),") to an element that should be excluded from triggering the ",Object(l.b)("inlineCode",{parentName:"li"},"onClick")," callback"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"onClick")," - Function that's called when a click occurs outside of the excluded element"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"isEnabled"),"=true] - Set to false to disable the hook")),Object(l.b)("h2",{id:"examples"},"Examples"),Object(l.b)(r.c,{mdxType:"Playground"},(function(){var e=a.useState(0),t=e[0],n=e[1],i=a.useState(!0),c=i[0],o=i[1],r=a.useRef(null);return Object(b.a)(r,(function(){return n(t+1)}),c),Object(l.b)(s.a,{spacing:"m",mdxType:"Stack"},Object(l.b)("h1",null,"Document clicks: ",t),Object(l.b)(u.a,{ref:r,p:"m",border:"dashed",mdxType:"Box"},"Clicks inside this box will be ignored."),Object(l.b)(a.Fragment,null,Object(l.b)(d.a,{checked:c,onChange:function(){return o((function(e){return!e}))},id:"switch",mdxType:"Switch"})," ",Object(l.b)("label",{htmlFor:"switch"},"Count clicks")))})))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/useOnClickOutside/README.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-use-on-click-outside-readme-mdx-63ef7cec8360a96bd178.js.map