{"version":3,"sources":["webpack:///../src/MenuList/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Icon","PopoverCard","TextLink","MenuList","React","highlightedItem","setHighlightedItem","selectedItem","isOpen","renderInPlace","id","label","icon","isDisabled","map","item","index","key","isActive","isHighlighted","onMouseEnter","name","isMDXComponent"],"mappings":"oTAWaA,G,UAAe,S,yMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAM5E,iBAAQ,CACN,GAAM,YADR,YAGA,0FACA,sBACE,kBAAIC,WAAW,MAAf,oBACA,kBAAIA,WAAW,MAAf,iBACA,kBAAIA,WAAW,MAAf,qBACA,kBAAIA,WAAW,MAAf,kBAEF,6EAA4D,6BAAGA,WAAW,KAAQ,CAC9E,KAAQ,oBADgD,QAA5D,QAE0B,6BAAGA,WAAW,KAAQ,CAC5C,KAAQ,wBADc,WAF1B,qDAKA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,0/BAA2gCC,SAAO,GACnjCL,QACAH,kBACAS,eACAC,UACAC,SACAC,gBACAC,aACAC,YARmjC,gBASnjCd,IATmjC,EAUnjCH,eAVmjC,GAWljCO,QAAQ,eACb,WAAM,MAC8CW,WAAe,GAAtDC,EADP,KACwBC,EADxB,OAEwCF,WAAe,GAAhDG,EAFP,UAqBA,OAAO,YAAC,IAAD,CAAaC,QAAM,EAACC,eAAa,EAAChB,QAAQ,eACrD,YAAC,UAAD,KAnBsB,CAAC,CACjBiB,GAAI,EACJC,MAAO,SACPC,KAAM,QACL,CACDF,GAAI,EACJC,MAAO,YACPC,KAAM,QACL,CACDF,GAAI,EACJC,MAAO,WACPC,KAAM,WACNC,YAAY,GACX,CACDH,GAAI,EACJC,MAAO,WACPC,KAAM,aAIAE,KAAI,SAACC,EAAMC,GAAP,OAAiB,YAAC,OAAD,CAAeC,IAAKF,EAAKL,IACvD,YAAC,OAAD,CAAeQ,SAAUH,EAAKL,KAAOH,EAAcY,cAAeJ,EAAKL,KAAOL,EAAiBQ,WAAYE,EAAKF,WAAYO,aAAc,kBAAMd,EAAmBS,EAAKL,MACvK,YAAC,WAAD,CAAmBW,KAAMN,EAAKH,OAC7BG,EAAKJ,sB,uMAWdrB,EAAWgC,gBAAiB","file":"component---src-menu-list-readme-mdx-94e2b682dc6b98675bae.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Icon from '../Icon';\nimport PopoverCard from '../PopoverCard';\nimport TextLink from '../TextLink';\nimport * as MenuList from './';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"menulist\"\n    }}>{`MenuList`}</h1>\n    <p>{`MenuList is a set of components used for building dropdown menus:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`MenuList.Wrapper`}</li>\n      <li parentName=\"ul\">{`MenuList.Item`}</li>\n      <li parentName=\"ul\">{`MenuList.ItemIcon`}</li>\n      <li parentName=\"ul\">{`MenuList.Link`}</li>\n    </ul>\n    <p>{`They don't come with any built-in behaviour. See the `}<a parentName=\"p\" {...{\n        \"href\": \"src-menu-readme\"\n      }}>{`Menu`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"src-nav-menu-readme\"\n      }}>{`NavMenu`}</a>{` components to see the MenuList component in use.`}</p>\n    <Playground __position={0} __code={'() => {\\n  const [highlightedItem, setHighlightedItem] = React.useState(0)\\n  const [selectedItem, setSelectedItem] = React.useState(0)\\n  const menuItems = [\\n    { id: 0, label: \\'Insert\\', icon: \\'plus\\' },\\n    { id: 1, label: \\'Favourite\\', icon: \\'star\\' },\\n    { id: 2, label: \\'Insights\\', icon: \\'trending\\', isDisabled: true },\\n    { id: 3, label: \\'Download\\', icon: \\'download\\' },\\n  ]\\n  return (\\n    <PopoverCard isOpen renderInPlace>\\n      <MenuList.Wrapper>\\n        {menuItems.map((item, index) => (\\n          <MenuList.Item key={item.id}>\\n            <MenuList.Link\\n              isActive={item.id === selectedItem}\\n              isHighlighted={item.id === highlightedItem}\\n              isDisabled={item.isDisabled}\\n              onMouseEnter={() => setHighlightedItem(item.id)}\\n            >\\n              <MenuList.ItemIcon name={item.icon} />\\n              {item.label}\\n            </MenuList.Link>\\n          </MenuList.Item>\\n        ))}\\n      </MenuList.Wrapper>\\n    </PopoverCard>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Icon,\n      PopoverCard,\n      TextLink,\n      MenuList,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t{() => {\n        const [highlightedItem, setHighlightedItem] = React.useState(0);\n        const [selectedItem, setSelectedItem] = React.useState(0);\n        const menuItems = [{\n          id: 0,\n          label: 'Insert',\n          icon: 'plus'\n        }, {\n          id: 1,\n          label: 'Favourite',\n          icon: 'star'\n        }, {\n          id: 2,\n          label: 'Insights',\n          icon: 'trending',\n          isDisabled: true\n        }, {\n          id: 3,\n          label: 'Download',\n          icon: 'download'\n        }];\n        return <PopoverCard isOpen renderInPlace mdxType=\"PopoverCard\">\n\t\t\t\t<MenuList.Wrapper>\n\t\t\t\t\t{menuItems.map((item, index) => <MenuList.Item key={item.id}>\n\t\t\t\t\t\t\t<MenuList.Link isActive={item.id === selectedItem} isHighlighted={item.id === highlightedItem} isDisabled={item.isDisabled} onMouseEnter={() => setHighlightedItem(item.id)}>\n\t\t\t\t\t\t\t\t<MenuList.ItemIcon name={item.icon} />\n\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t</MenuList.Link>\n\t\t\t\t\t\t</MenuList.Item>)}\n\t\t\t\t</MenuList.Wrapper>\n\t\t\t</PopoverCard>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}