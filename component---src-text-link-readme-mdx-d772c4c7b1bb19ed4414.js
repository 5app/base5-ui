(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"9qu6":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return p})),n.d(t,"default",(function(){return m}));var b=n("Fcif"),a=n("+I+c"),o=(n("mXGw"),n("/FXl")),r=n("TjRS"),i=n("ZFoC"),c=n("inYB"),l=n("BbnS"),p=(n("aD51"),{});void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/TextLink/README.mdx"}});var d={_frontmatter:p},s=r.a;function m(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)(s,Object(b.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"textlink"},"TextLink"),Object(o.b)("p",null,"Simple styled text link. Renders as an ",Object(o.b)("inlineCode",{parentName:"p"},"<a>")," tag by default, but you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"as")," prop to render as a button or a router link, too."),Object(o.b)(i.c,{mdxType:"Playground"},Object(o.b)(c.a,{spacing:"s",mdxType:"InlineList"},Object(o.b)(l.a,{href:"#",mdxType:"TextLink"},Object(o.b)("p",null,"Hello, world!")),Object(o.b)(l.a,{as:"button",href:"#",mdxType:"TextLink"},Object(o.b)("p",null,"I'm secretly a button")),Object(o.b)(l.a,{bold:!0,href:"#",mdxType:"TextLink"},Object(o.b)("p",null,"I'm bold")),Object(o.b)(l.a,{stealthy:!0,href:"#",mdxType:"TextLink"},Object(o.b)("p",null,"I blend in with my surroundings!")))),Object(o.b)("h2",{id:"props"},"Props"),Object(o.b)(i.d,{of:l.a,mdxType:"Props"}))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/TextLink/README.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-text-link-readme-mdx-d772c4c7b1bb19ed4414.js.map