(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{Pz05:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return b})),t.d(n,"default",(function(){return m}));var o=t("Fcif"),a=t("+I+c"),p=(t("mXGw"),t("/FXl")),l=t("TjRS"),r=t("ZFoC"),i=t("A9bP"),b=(t("aD51"),{});void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Flex/README.mdx"}});var c={_frontmatter:b},s=l.a;function m(e){var n,t=e.components,m=Object(a.a)(e,["components"]);return Object(p.b)(s,Object(o.a)({},c,m,{components:t,mdxType:"MDXLayout"}),Object(p.b)("h1",{id:"flex"},"Flex"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"Flex")," is a container component for building layouts using CSS flexbox. It's especially useful when used with the ",Object(p.b)("inlineCode",{parentName:"p"},"Box")," component which provides control for laying out the children."),Object(p.b)("p",null,"The component is built on top of ",Object(p.b)("inlineCode",{parentName:"p"},"Box")," and its props ",Object(p.b)("inlineCode",{parentName:"p"},"align"),", ",Object(p.b)("inlineCode",{parentName:"p"},"column"),", and ",Object(p.b)("inlineCode",{parentName:"p"},"wrap")," are aliases for the ",Object(p.b)("inlineCode",{parentName:"p"},"Box")," props ",Object(p.b)("inlineCode",{parentName:"p"},"alignItems"),", ",Object(p.b)("inlineCode",{parentName:"p"},"stackItems"),", and ",Object(p.b)("inlineCode",{parentName:"p"},"wrapItems"),"."),Object(p.b)("h2",{id:"examples"},"Examples"),Object(p.b)(r.c,{__position:0,__code:'<Flex align="top">\n  <Box grow shrink>\n    I take up all the free space and push other Boxes away! ðŸ‘‰\n  </Box>\n  <Box>ðŸ‘€ I\'m smol.</Box>\n</Flex>\n<Flex wrap align="top" mt="m">\n  <Box grow shrink>\n    Still taking up all free space.\n  </Box>\n  <Box>If there\'s no room for me I\'ll wrap onto a new line ðŸ‘‡</Box>\n</Flex>',__scope:(n={props:m,DefaultLayout:l.a,Playground:r.c,Props:r.d,Flex:i.b,Box:i.a},n.DefaultLayout=l.a,n._frontmatter=b,n),mdxType:"Playground"},Object(p.b)(i.b,{align:"top",mdxType:"Flex"},Object(p.b)(i.a,{grow:!0,shrink:!0,mdxType:"Box"},"I take up all the free space and push other Boxes away! ðŸ‘‰"),Object(p.b)(i.a,{mdxType:"Box"},"ðŸ‘€ I'm smol.")),Object(p.b)(i.b,{wrap:!0,align:"top",mt:"m",mdxType:"Flex"},Object(p.b)(i.a,{grow:!0,shrink:!0,mdxType:"Box"},"Still taking up all free space."),Object(p.b)(i.a,{mdxType:"Box"},"If there's no room for me I'll wrap onto a new line ðŸ‘‡"))),Object(p.b)("h2",{id:"props"},"Props"),Object(p.b)(r.d,{of:i.b,mdxType:"Props"}))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Flex/README.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-flex-readme-mdx-201ac1652a5de721f0fc.js.map