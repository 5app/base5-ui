{"version":3,"sources":["webpack:///../src/Meter/index.js","webpack:///../src/Meter/README.mdx","webpack:///../src/VisuallyHidden/index.js"],"names":["Wrapper","role","MockMeter","value","min","max","visualMin","difference","Math","p","getColorBlock","low","high","theme","Meter","props","as","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","Playground","Props","color","of","isMDXComponent","VisuallyHidden","styled"],"mappings":"syBA+BA,IAAMA,EAAU,cAAiB,CAChCC,KAAM,gBADS,CAAH,KAQPC,EAAY,cAAiB,CAClCD,KADkC,eAElC,cAAe,QAFE,CAAH,KAlBf,SAAuB,GAA2C,IAA1CE,EAAyC,EAAzCA,MAAyC,IAAlCC,WAAkC,MAA5B,EAA4B,MAAzBC,WAAyB,MAAnB,EAAmB,MAAhBC,iBAAgB,MAAJ,EAAI,EAChE,GAAIH,QAAuC,MAAM,KAEjD,IAAMI,EAAaF,EAAnB,EAIA,aAHqBG,WAArB,GACiB,GAAjB,GAEA,OAkBc,SAAAC,GAAC,OACdA,QAAUC,YAAcD,EAAD,MAAUA,EAAjCA,QAvCsBN,GAAD,EAsCP,GAtCQA,MAAOQ,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,KAAMR,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,IAAKQ,EAAQ,EAARA,MACnD,OAAIV,EACI,KAEJA,MAAgBA,IAApB,EACQO,YAAc,WAArB,GACUP,MAAiBA,IAArB,EACCO,YAAc,WAArB,GAEOA,YAAc,UAArB,IATF,IAAuB,EAACP,EAAOQ,EAAKC,EAAMR,EAAKC,EAAKQ,KA2C9CC,EAAQ,SAAC,GAAgB,IAAZC,EAAW,oBAC7B,OACC,mBACC,cADD,GAEC,mBAAgBC,GAAG,SAHrB,MAmBD,I,gpBC/DO,IAAMC,EAAe,Q,sMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,E,oIACF,mBACD,OAAO,YAACI,EAAD,KAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAK5E,iBAAQ,CACN,GAAM,SADR,SAGA,kDAAiC,0BAAYC,WAAW,KAAvB,WAAjC,qEACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2JAA8JC,QAAS,CACxMZ,QACAK,kBACAQ,eACAC,UACAf,SACCS,QAAQ,cACd,YAAC,EAAD,CAAOpB,MAAO,GAAKE,IAAK,EAAGkB,QAAQ,UACnC,uBACA,YAAC,EAAD,CAAOpB,MAAO,GAAIC,KAAM,IAAKC,IAAK,IAAKO,KAAM,GAAIW,QAAQ,UACzD,uBACA,YAAC,EAAD,CAAOpB,MAAO,GAAIC,IAAK,EAAGC,IAAK,IAAKyB,MAAM,QAAQP,QAAQ,WAEvD,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOQ,GAAIjB,EAAOS,QAAQ,W,6LAK9BF,EAAWW,gBAAiB,G,4LCrD5B,IAAMC,EAAiBC,IAAH,SAApB,KAIA,W","file":"component---src-meter-readme-mdx-380f592f8b7bfa05a846.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport {getColorBlock} from '../utils/colors';\n\nimport VisuallyHidden from '../VisuallyHidden';\n\nfunction getMeterColor({value, low, high, min, max, theme}) {\n\tif (value === null) {\n\t\treturn null;\n\t}\n\tif (value <= low || value === min) {\n\t\treturn getColorBlock('negative', theme);\n\t} else if (value >= high || value === max) {\n\t\treturn getColorBlock('positive', theme);\n\t} else {\n\t\treturn getColorBlock('neutral', theme);\n\t}\n}\n\nfunction getMeterWidth({value, min = 0, max = 1, visualMin = 0}) {\n\tif (value === null || value === undefined) return '0%';\n\n\tconst difference = max - min;\n\tconst clampedValue = Math.max(value, visualMin);\n\tconst fraction = (clampedValue - min) / difference;\n\n\treturn `${fraction * 100}%`;\n}\n\nconst Wrapper = styled.div.attrs({\n\trole: 'presentation',\n})`\n\twidth: 100%;\n\theight: 0.3rem;\n\tbackground-color: rgba(0, 0, 0, 0.1);\n`;\n\nconst MockMeter = styled.div.attrs({\n\trole: 'presentation',\n\t'aria-hidden': 'true',\n})`\n\twidth: ${getMeterWidth};\n\theight: 0.3rem;\n\n\tbackground: ${p =>\n\t\tp.color ? getColorBlock(p.color, p.theme) : getMeterColor(p)};\n\ttransition: width 300ms ease-out;\n`;\n\nconst Meter = ({...props}) => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<MockMeter {...props} />\n\t\t\t<VisuallyHidden as=\"meter\" {...props} />\n\t\t</Wrapper>\n\t);\n};\n\nMeter.propTypes = {\n\tcolor: PropTypes.string,\n\thigh: PropTypes.number,\n\tlow: PropTypes.number,\n\tmax: PropTypes.number,\n\tmin: PropTypes.number,\n\toptimum: PropTypes.number,\n\tvalue: PropTypes.number,\n\tvisualMin: PropTypes.number,\n};\n\nexport default Meter;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Meter from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"meter\"\n    }}>{`Meter`}</h1>\n    <p>{`A stand-in for the native `}<inlineCode parentName=\"p\">{`<meter>`}</inlineCode>{` HTML element built to ensure consistent visuals across browsers.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<Meter value={0.3} max={1} />\\n<br />\\n<Meter value={39} min={-100} max={100} high={33} />\\n<br />\\n<Meter value={80} min={0} max={100} color=\\\"links\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Meter\n    }} mdxType=\"Playground\">\n\t<Meter value={0.3} max={1} mdxType=\"Meter\" />\n\t<br />\n\t<Meter value={39} min={-100} max={100} high={33} mdxType=\"Meter\" />\n\t<br />\n\t<Meter value={80} min={0} max={100} color=\"links\" mdxType=\"Meter\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Meter} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import styled from 'styled-components';\nimport {visuallyHidden as visuallyHiddenMixin} from '../mixins';\n\nconst VisuallyHidden = styled.span`\n\t${visuallyHiddenMixin}\n`;\n\nexport default VisuallyHidden;\n"],"sourceRoot":""}