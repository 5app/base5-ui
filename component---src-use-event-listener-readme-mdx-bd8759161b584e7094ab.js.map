{"version":3,"sources":["webpack:///../src/useEventListener/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,iNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,0HACA,oGACA,sBAEE,iBAAQ,CACN,WAAc,MACb,yBAAgB,CACf,WAAc,MADf,aAFH,gEAME,yBAAgB,CACd,WAAc,MADhB,QANF,KAYA,iBAAQ,CACN,WAAc,MACb,yBAAgB,CACf,WAAc,MADf,iBAFH,oEAME,yBAAgB,CACd,WAAc,MADhB,YANF,KAYA,iBAAQ,CACN,WAAc,MACb,yBAAgB,CACf,WAAc,MADf,WAFH,4GAME,gBAAO,CACL,KAAQ,gFACR,WAAc,MAFhB,gCANF,MAaF,iBAAQ,CACN,GAAM,YADR,YAGA,uBAAK,mBAAU,CACX,UAAa,cACb,WAAc,OAFb,8CAKL,uBAAK,mBAAU,CACX,UAAa,cACb,WAAc,OAFb,6FAOL,uBAAK,mBAAU,CACX,UAAa,cACb,WAAc,OAFb,kGAOL,uBAAK,mBAAU,CACX,UAAa,cACb,WAAc,OAFb,0E,+MAWTH,EAAWI,gBAAiB","file":"component---src-use-event-listener-readme-mdx-bd8759161b584e7094ab.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"useeventlistener\"\n    }}>{`useEventListener`}</h1>\n    <p>{`A simple hook that adds a global event listener & cleans up after it when the component unmounts.`}</p>\n    <p>{`An options object can be added as a third parameter. Available options are:`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`isEnabled`}</inlineCode>\n        {`: Can be used to conditionally disable the hook. Defaults to `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`true`}</inlineCode>\n        {`.`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`targetElement`}</inlineCode>\n        {`: Add the event listener to a custom target element. Defaults to `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`document`}</inlineCode>\n        {`.`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`capture`}</inlineCode>\n        {`: Use this for capturing events that don't bubble, e.g. to react to focus events within an element. (See `}\n        <a {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\",\n          \"parentName\": \"li\"\n        }}>{`addEventListener docs on MDN`}</a>\n        {`)`}</li>\n\n    </ul>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <pre><code {...{\n        \"className\": \"language-js\",\n        \"parentName\": \"pre\"\n      }}>{`useEventListener('click', onBodyClick);\n`}</code></pre>\n    <pre><code {...{\n        \"className\": \"language-js\",\n        \"parentName\": \"pre\"\n      }}>{`useEventListener('click', closeTooltip, {\n    isEnabled: shouldCloseOnBodyClick,\n});\n`}</code></pre>\n    <pre><code {...{\n        \"className\": \"language-js\",\n        \"parentName\": \"pre\"\n      }}>{`useEventListener('scroll', onScroll, {\n    targetElement: scrollContainerRef.current,\n});\n`}</code></pre>\n    <pre><code {...{\n        \"className\": \"language-js\",\n        \"parentName\": \"pre\"\n      }}>{`useEventListener('focus', onFocus, {\n    capture: true,\n});\n`}</code></pre>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}