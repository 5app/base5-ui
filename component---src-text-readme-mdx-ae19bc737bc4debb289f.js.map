{"version":3,"sources":["webpack:///../src/Text/README.mdx","webpack:///../src/utils/theme.js","webpack:///../src/styleProps/borderProps.js","webpack:///../src/styleProps/displayProps.js","webpack:///../src/styleProps/paddingProps.js","webpack:///../src/styleProps/positionProps.js","webpack:///../src/styleProps/marginProps.js","webpack:///../src/styleProps/textProps.js","webpack:///../src/styleProps/flexProps.js","webpack:///../src/Text/index.js","webpack:///../node_modules/core-js/modules/es6.string.bold.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Text","as","size","lineHeight","dimmed","bold","mt","caps","overflow","display","of","isMDXComponent","checkTheme","theme","borderKeys","top","left","bottom","right","borderProps","border","borderValue","supportedDisplayValues","displayProps","console","paddingProps","p","px","py","pt","pr","pb","pl","padding","getSpacing","paddingTop","paddingRight","paddingBottom","paddingLeft","undefined","positionProps","pos","position","z","zIndex","marginProps","m","mx","my","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","ellipsis","wrap","textProps","fontSize","textAlign","fontWeight","textTransform","color","alpha","alignMap","center","flexProps","flexAlign","basis","grow","shrink","flex","minWidth","flexBasis","pxToRem","flexGrow","flexShrink","alignSelf","styled","PropTypes","createHTML","this"],"mappings":"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","file":"component---src-text-readme-mdx-ae19bc737bc4debb289f.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Text from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"text\"\n    }}>{`Text`}</h1>\n    <p><inlineCode parentName=\"p\">{`Text`}</inlineCode>{` is a helper component for formatting text. It supports styling props for the following styles:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Text styles (bold, dimmed, fontSize, lineHeight, textAlign, overflow, caps)`}</li>\n      <li parentName=\"ul\">{`Display (block, inline, inline-block)`}</li>\n      <li parentName=\"ul\">{`Margin and padding`}</li>\n    </ul>\n    <p>{`In addition to the `}<inlineCode parentName=\"p\">{`fontSize`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`textAlign`}</inlineCode>{` props, this component also supports the shorthands `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`align`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<Text as=\\\"h1\\\" size=\\\"xl\\\" lineHeight={1.3}>\\n  Extra-large text with a smaller line height\\n</Text>\\n<Text dimmed as=\\\"p\\\">\\n  A dimmed subtitle with a{\\' \\'}\\n  <Text bold dimmed={false}>\\n    non-dimmed segment\\n  </Text>\\n</Text>\\n<Text bold as=\\\"p\\\" mt=\\\"m\\\">\\n  Bold text with some nested <Text bold={false}>non-bold</Text> text\\n</Text>\\n<Text as=\\\"p\\\" caps=\\\"all\\\" mt=\\\"m\\\">\\n  this text is all-lowercase, but displays in uppercase\\n</Text>\\n<Text as=\\\"p\\\" caps=\\\"first\\\">\\n  this text is all-lowercase, but is displayed in title-case{\\' \\'}\\n  <Text caps={false}>(unless overwritten)</Text>\\n</Text>\\n<Text as=\\\"p\\\" overflow=\\\"wrap\\\" mt=\\\"m\\\">\\n  OverflowWrapWillMakeLongWordsWithNoSpacesForExampleUrlsBreakIntoANewLineInsteadOfGoingOnAndBreakingOutOfTheirContainerWhichUsuallyDoesntLookVeryGood.\\n</Text>\\n<Text display=\\\"block\\\" overflow=\\\"ellipsis\\\" mt=\\\"m\\\">\\n  An overflow value of \\'ellipsis\\' will prevent line-breaks and cut off\\n  overflowing text with an ellipsis (â€¦). This only works with \\\"block-level\\\"\\n  elements (e.g. div, p). If you want to use it with a non-block element like\\n  `span`, set the `display` prop to \\'block\\'.\\n</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Text\n    }} mdxType=\"Playground\">\n\t<Text as=\"h1\" size=\"xl\" lineHeight={1.3} mdxType=\"Text\">\n\t\tExtra-large text with a smaller line height\n\t</Text>\n\t<Text dimmed as=\"p\" mdxType=\"Text\">\n\t\tA dimmed subtitle with a{' '}\n\t\t<Text bold dimmed={false} mdxType=\"Text\">\n\t\t\tnon-dimmed segment\n\t\t</Text>\n\t</Text>\n\t<Text bold as=\"p\" mt=\"m\" mdxType=\"Text\">\n\t\tBold text with some nested <Text bold={false} mdxType=\"Text\">non-bold</Text> text\n\t</Text>\n\t<Text as=\"p\" caps=\"all\" mt=\"m\" mdxType=\"Text\">\n\t\tthis text is all-lowercase, but displays in uppercase\n\t</Text>\n\t<Text as=\"p\" caps=\"first\" mdxType=\"Text\">\n\t\tthis text is all-lowercase, but is displayed in title-case{' '}\n\t\t<Text caps={false} mdxType=\"Text\">(unless overwritten)</Text>\n\t</Text>\n\t<Text as=\"p\" overflow=\"wrap\" mt=\"m\" mdxType=\"Text\">\n\t\tOverflowWrapWillMakeLongWordsWithNoSpacesForExampleUrlsBreakIntoANewLineInsteadOfGoingOnAndBreakingOutOfTheirContainerWhichUsuallyDoesntLookVeryGood.\n\t</Text>\n\t<Text display=\"block\" overflow=\"ellipsis\" mt=\"m\" mdxType=\"Text\">\n\t\tAn overflow value of 'ellipsis' will prevent line-breaks and cut off\n\t\toverflowing text with an ellipsis (â€¦). This only works with\n\t\t\"block-level\" elements (e.g. div, p). If you want to use it with a\n\t\tnon-block element like `span`, set the `display` prop to 'block'.\n\t</Text>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Text} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {checkTheme} from '../utils/theme';\n\nimport {borderValue} from '../mixins';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: borderValue(theme),\n\t};\n}\n\nexport default borderProps;\n","const supportedDisplayValues = ['block', 'inline', 'inline-block'];\n\nfunction displayProps(props) {\n\tconst {display} = props;\n\n\tif (!display) return null;\n\n\tif (supportedDisplayValues.includes(display)) {\n\t\treturn {\n\t\t\tdisplay,\n\t\t};\n\t} else {\n\t\tconsole.warn(\n\t\t\t`Only 'block', 'inline', and 'inline-block' are supported for\n\t\t\tthe 'display' styling prop. Please use 'base5-ui/Flex' or custom CSS\n\t\t\tfor more complex styling.`\n\t\t);\n\t}\n}\n\nexport default displayProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap as wrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis,\n\twrap,\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\ttextAlign,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : bold === false ? 'normal' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps\n\t\t\t? textTransformMap[caps]\n\t\t\t: caps === false\n\t\t\t? 'none'\n\t\t\t: undefined,\n\t\tcolor: dimmed\n\t\t\t? alpha(theme.text, theme.textDimStrength)\n\t\t\t: dimmed === false\n\t\t\t? theme.text\n\t\t\t: undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n\tdisplayProps,\n\ttextProps,\n\tmarginProps,\n\tpaddingProps,\n} from '../styleProps';\n\nconst Text = styled.span`\n\t${displayProps}\n\t${props =>\n\t\ttextProps({\n\t\t\t...props,\n\t\t\ttextAlign: props.align || props.textAlign,\n\t\t\tfontSize: props.size || props.fontSize,\n\t\t})}\n\t${marginProps}\n\t${paddingProps}\n`;\n\nText.propTypes = {\n\tbold: PropTypes.bool,\n\tcaps: PropTypes.oneOfType([\n\t\tPropTypes.oneOf(['all', 'first']),\n\t\tPropTypes.bool,\n\t]),\n\tdimmed: PropTypes.bool,\n\tdisplay: PropTypes.oneOf(['block', 'inline', 'inline-block']),\n\tfontSize: PropTypes.string,\n\tlineHeight: PropTypes.number,\n\toverflow: PropTypes.oneOf(['ellipsis', 'wrap']),\n\ttextAlign: PropTypes.oneOf(['left', 'center', 'right']),\n};\n\nexport default Text;\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n"],"sourceRoot":""}