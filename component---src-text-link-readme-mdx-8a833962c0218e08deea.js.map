{"version":3,"sources":["webpack:///../src/utils/spacing.js","webpack:///../src/ButtonCore/index.js","webpack:///../node_modules/classnames/index.js","webpack:///../src/TextLink/README.mdx","webpack:///../src/TextLink/index.js","webpack:///../src/utils/theme.js","webpack:///../src/styleProps/borderProps.js","webpack:///../src/styleProps/displayProps.js","webpack:///../src/styleProps/paddingProps.js","webpack:///../src/styleProps/positionProps.js","webpack:///../src/styleProps/marginProps.js","webpack:///../src/styleProps/textProps.js","webpack:///../src/styleProps/flexProps.js","webpack:///../node_modules/core-js/modules/es6.string.bold.js","webpack:///../src/InlineList/index.js","webpack:///../src/mixins/borderValue.js","webpack:///../src/mixins/centerChildren.js","webpack:///../src/mixins/ellipsis.js","webpack:///../src/mixins/fillParent.js","webpack:///../src/mixins/ie11Hack.js","webpack:///../src/mixins/overflowWrap.js","webpack:///../src/mixins/visuallyHidden.js"],"names":["passThroughValues","getSpacing","shortCode","pxToRem","theme","Clickable","styled","ButtonCore","forwardRef","as","props","type","isActive","isDisabled","disabled","className","otherProps","classes","classNames","defaultType","ref","hasOwn","hasOwnProperty","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","__position","__code","__scope","Playground","InlineList","TextLink","spacing","href","bold","stealthy","isMDXComponent","textLinkStyles","css","p","Wrapper","linkRef","forwardedAs","checkTheme","borderKeys","top","left","bottom","right","borderProps","border","borderValue","supportedDisplayValues","displayProps","display","console","paddingProps","px","py","pt","pr","pb","pl","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","undefined","positionProps","pos","position","z","zIndex","marginProps","m","mx","my","mt","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","ellipsis","wrap","textProps","caps","dimmed","fontSize","lineHeight","overflow","textAlign","fontWeight","textTransform","color","alpha","alignMap","center","flexProps","flexAlign","basis","grow","shrink","flex","minWidth","flexBasis","flexGrow","flexShrink","alignSelf","createHTML","this","Item","children","centerChildren","alignItems","justifyContent","textOverflow","whiteSpace","fillParent","ie11Hack","overflowWrap","wordWrap","wordBreak","visuallyHidden","width","height","clip"],"mappings":"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","file":"component---src-text-link-readme-mdx-8a833962c0218e08deea.js","sourcesContent":["import {pxToRem} from './units';\n\nconst passThroughValues = ['auto'];\n\nfunction getSpacing(shortCode, theme) {\n\tif (shortCode === undefined || shortCode === null || shortCode === false) {\n\t\treturn shortCode;\n\t}\n\n\tif (\n\t\t(typeof shortCode !== 'number' && typeof shortCode !== 'string') ||\n\t\tshortCode === '0'\n\t) {\n\t\treturn '0';\n\t}\n\n\tif (typeof shortCode === 'number') {\n\t\treturn pxToRem(shortCode);\n\t}\n\n\tif (passThroughValues.indexOf(shortCode) > -1) {\n\t\treturn shortCode;\n\t}\n\n\tif (shortCode.charAt(0) === '-') {\n\t\treturn '-' + theme.globals.spacing[shortCode.substring(1)];\n\t} else {\n\t\treturn theme.globals.spacing[shortCode];\n\t}\n}\n\nexport {getSpacing};\n","import React, {forwardRef} from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\n\nimport 'focus-visible';\n\nconst Clickable = styled.button`\n\tdisplay: inline-block;\n\tmargin: 0;\n\tpadding: 0;\n\tvertical-align: middle;\n\n\tfont: inherit;\n\ttext-decoration: none;\n\ttext-align: inherit;\n\n\tcolor: inherit;\n\tbackground-color: transparent;\n\tborder: none;\n\tborder-radius: 0;\n\tcursor: pointer;\n\n\tappearance: none;\n\n\t&:focus:not(.focus-visible) {\n\t\toutline: none;\n\t}\n\n\t&.focus-visible {\n\t\toutline: 3px solid currentColor;\n\t\toutline-offset: 3px;\n\t}\n\n\t/* Normalise inner button spacing in Gecko browsers */\n\t&::-moz-focus-inner {\n\t\tpadding: 0;\n\t\tborder: 0;\n\t}\n`;\n\nconst ButtonCore = forwardRef((props, ref) => {\n\tconst {\n\t\tas,\n\t\ttype,\n\t\tisActive,\n\t\tisDisabled,\n\t\tdisabled,\n\t\tclassName,\n\t\t...otherProps\n\t} = props;\n\n\tconst classes = classNames(className, {\n\t\t'is-active': isActive,\n\t\t'is-disabled': isDisabled || disabled,\n\t});\n\n\tconst defaultType = !type && as === 'button' ? as : type;\n\n\t// Delete button props that would end up in DOM due to\n\t// styled-components' overly permissive attribute whitelist\n\tdelete otherProps.color;\n\n\treturn (\n\t\t<Clickable\n\t\t\t{...otherProps}\n\t\t\tref={ref}\n\t\t\tas={as}\n\t\t\ttype={defaultType}\n\t\t\tdisabled={isDisabled || disabled}\n\t\t\tclassName={classes}\n\t\t/>\n\t);\n});\n\nButtonCore.defaultProps = {\n\tas: 'button',\n};\n\nexport default ButtonCore;\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport InlineList from '../InlineList';\nimport TextLink from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"textlink\"\n    }}>{`TextLink`}</h1>\n    <p>{`Simple styled text link. Renders as an `}<inlineCode parentName=\"p\">{`<a>`}</inlineCode>{` tag by default, but you can use the `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` prop to render as a button or a router link, too.`}</p>\n    <Playground __position={0} __code={'<InlineList spacing=\\\"s\\\">\\n  <TextLink href=\\\"#\\\">Hello, world!</TextLink>\\n  <TextLink as=\\\"button\\\" href=\\\"#\\\">\\n    I\\'m secretly a button\\n  </TextLink>\\n  <TextLink bold href=\\\"#\\\">\\n    I\\'m bold\\n  </TextLink>\\n  <TextLink stealthy href=\\\"#\\\">\\n    I blend in with my surroundings!\\n  </TextLink>\\n</InlineList>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      InlineList,\n      TextLink\n    }} mdxType=\"Playground\">\n\t<InlineList spacing=\"s\" mdxType=\"InlineList\">\n\t\t<TextLink href=\"#\" mdxType=\"TextLink\">Hello, world!</TextLink>\n\t\t<TextLink as=\"button\" href=\"#\" mdxType=\"TextLink\">\n\t\t\tI'm secretly a button\n\t\t</TextLink>\n\t\t<TextLink bold href=\"#\" mdxType=\"TextLink\">\n\t\t\tI'm bold\n\t\t</TextLink>\n\t\t<TextLink stealthy href=\"#\" mdxType=\"TextLink\">\n\t\t\tI blend in with my surroundings!\n\t\t</TextLink>\n\t</InlineList>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, {forwardRef} from 'react';\nimport styled, {css} from 'styled-components';\n\nimport {positionProps, marginProps} from '../styleProps';\n\nimport ButtonCore from '../ButtonCore';\n\nconst textLinkStyles = css`\n\t${p =>\n\t\tp.bold &&\n\t\t`\n\t\tfont-weight: bold;\n\t`}\n\n\ttext-align: inherit;\n\ttext-decoration: none;\n\ttransition: color 0.25s ease-in;\n\tcolor: ${p => (p.stealthy ? 'inherit' : p.theme.links)};\n\n\t&:hover,\n\t&:active,\n\t&:focus {\n\t\t${p =>\n\t\t\tp.stealthy &&\n\t\t\t`\n\t\t\tcolor: ${p.theme.links};\n\t\t`}\n\t\ttext-decoration: underline;\n\t\ttransition-timing-function: ease-out;\n\t}\n`;\n\nconst Wrapper = styled(({linkRef, bold, stealthy, ...otherProps}) => (\n\t<ButtonCore ref={linkRef} {...otherProps} />\n))`\n\t${positionProps}\n\tdisplay: inline;\n\tvertical-align: baseline;\n\t${marginProps}\n\n\t${textLinkStyles}\n`;\n\nfunction TextLink(props, ref) {\n\tconst {as, ...otherProps} = props;\n\n\treturn <Wrapper {...otherProps} linkRef={ref} forwardedAs={as || 'a'} />;\n}\n\n// Allow components to re-use simple text link styles\nexport {textLinkStyles};\nexport default forwardRef(TextLink);\n","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {checkTheme} from '../utils/theme';\n\nimport {borderValue} from '../mixins';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: borderValue(theme),\n\t};\n}\n\nexport default borderProps;\n","const supportedDisplayValues = ['block', 'inline', 'inline-block'];\n\nfunction displayProps(props) {\n\tconst {display} = props;\n\n\tif (!display) return null;\n\n\tif (supportedDisplayValues.includes(display)) {\n\t\treturn {\n\t\t\tdisplay,\n\t\t};\n\t} else {\n\t\tconsole.warn(\n\t\t\t`Only 'block', 'inline', and 'inline-block' are supported for\n\t\t\tthe 'display' styling prop. Please use 'base5-ui/Flex' or custom CSS\n\t\t\tfor more complex styling.`\n\t\t);\n\t}\n}\n\nexport default displayProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap as wrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis,\n\twrap,\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\ttextAlign,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : bold === false ? 'normal' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps\n\t\t\t? textTransformMap[caps]\n\t\t\t: caps === false\n\t\t\t? 'none'\n\t\t\t: undefined,\n\t\tcolor: dimmed\n\t\t\t? alpha(theme.text, theme.textDimStrength)\n\t\t\t: dimmed === false\n\t\t\t? theme.text\n\t\t\t: undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nconst Item = styled.li`\n\tdisplay: inline-block;\n\tmax-width: 100%;\n`;\n\nconst Wrapper = styled.ul`\n\tlist-style: none;\n\tmargin: 0;\n    padding: 0;\n\n\t${p =>\n\t\tp.spacing &&\n\t\tcss`\n\t\t\t/* Compensate for Item's padding */\n\t\t\tmargin-left: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t\tmargin-bottom: -${p => p.theme.globals.spacing[p.spacing]};\n\t\t`}\n\n\t& > ${Item} {\n\t\tvertical-align: ${p => p.align || 'top'};\n\n\t\t${p =>\n\t\t\tp.spacing &&\n\t\t\tcss`\n\t\t\t\tpadding-left: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t\tpadding-bottom: ${p => p.theme.globals.spacing[p.spacing]};\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'comma' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: ',';\n\t\t\t\t\tmargin-right: 0.3em;\n\t\t\t\t}\n\t\t\t`}\n\n\t\t${p =>\n\t\t\tp.splitBy === 'dot' &&\n\t\t\tcss`\n\t\t\t\t&:not(:last-of-type)::after {\n\t\t\t\t\tcontent: '·';\n\t\t\t\t\tmargin: 0 0.35em;\n\t\t\t\t}\n\t\t\t`}\n\t}\n`;\n\nconst InlineList = ({children, ...otherProps}) => {\n\treturn (\n\t\t<Wrapper {...otherProps}>\n\t\t\t{React.Children.map(children, (child, i) => {\n\t\t\t\tif (child) {\n\t\t\t\t\treturn <Item key={i}>{child}</Item>;\n\t\t\t\t}\n\t\t\t})}\n\t\t</Wrapper>\n\t);\n};\nInlineList.propTypes = {\n\talign: PropTypes.string,\n\tspacing: PropTypes.string,\n\tsplitBy: PropTypes.oneOf(['comma', 'dot']),\n};\n\nInlineList.Wrapper = Wrapper;\nInlineList.Item = Item;\n\nexport default InlineList;\n","import {alpha} from '../utils/colors';\n\nfunction borderValue(theme) {\n\treturn `1px solid ${alpha(theme.shade, theme.lineStrength)}`;\n}\n\nexport default borderValue;\n","const centerChildren = {\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n};\n\nexport default centerChildren;\n","const ellipsis = {\n\toverflow: 'hidden',\n\ttextOverflow: 'ellipsis',\n\twhiteSpace: 'nowrap',\n};\n\nexport default ellipsis;\n","const fillParent = {\n\tposition: 'absolute',\n\ttop: 0,\n\tright: 0,\n\tbottom: 0,\n\tleft: 0,\n};\n\nexport default fillParent;\n","/* Use this as a media query to apply styles only on IE 11 */\n\nconst ie11Hack =\n\t'screen and (-ms-high-contrast: active), (-ms-high-contrast: none)';\n\nexport default ie11Hack;\n","const overflowWrap = {\n\toverflowWrap: 'break-word',\n\twordWrap: 'break-word',\n\n\twordBreak: 'break-word',\n};\n\nexport default overflowWrap;\n","const visuallyHidden = {\n\tposition: 'absolute',\n\toverflow: 'hidden',\n\twidth: 1,\n\theight: 1,\n\tpadding: 0,\n\tclip: 'rect(0 0 0 0)',\n\tborder: 0,\n};\n\nexport default visuallyHidden;\n"],"sourceRoot":""}