{"version":3,"sources":["webpack:///../src/ThemedBox/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","ThemedBox","name","p","borderRadius","boxShadow","isToggle","of","isMDXComponent"],"mappings":"gRAQaA,G,UAAe,S,0MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,aADR,aAGA,qBAAG,0BAAYC,WAAW,KAAvB,aAAH,uCAAgG,0BAAYA,WAAW,KAAvB,gBAAhG,QAAiK,0BAAYA,WAAW,KAAvB,OAAjK,eAAgO,0BAAYA,WAAW,KAAvB,gBAAhO,kFAA2W,0BAAYA,WAAW,KAAvB,OAA3W,iGAA4f,0BAAYA,WAAW,KAAvB,SAA5f,QAAsjB,0BAAYA,WAAW,KAAvB,oBAAtjB,kBACA,6CAA4B,0BAAYA,WAAW,KAAvB,QAA5B,yBAAsG,0BAAYA,WAAW,KAAvB,OAAtG,yFACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gJAA6JC,SAAO,GACrML,QACAH,kBACAS,eACAC,UACAC,eALqM,gBAMrMX,IANqM,EAOrMH,eAPqM,GAQpMO,QAAQ,cACd,YAAC,IAAD,CAAWQ,KAAK,OAAOC,EAAE,IAAIT,QAAQ,aACpC,YAAC,IAAD,CAAWQ,KAAK,OAAOE,aAAa,QAAQC,UAAU,OAAOF,EAAE,IAAIT,QAAQ,aAA3E,WAKE,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOY,UAAQ,EAACC,GAAIN,IAAWP,QAAQ,gB,wMAK3CH,EAAWiB,gBAAiB","file":"component---src-themed-box-readme-mdx-1542b86c865c7a76264f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport ThemedBox from './';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"themedbox\"\n    }}>{`ThemedBox`}</h1>\n    <p><inlineCode parentName=\"p\">{`ThemedBox`}</inlineCode>{` is a combination of the primitives `}<inlineCode parentName=\"p\">{`ThemeSection`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{`. While the `}<inlineCode parentName=\"p\">{`ThemeSection`}</inlineCode>{` is responsible for defining which theme colours can be used inside of it, the `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` component actually picks up these theme colours and renders an element that uses them in its `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`background-color`}</inlineCode>{` declarations.`}</p>\n    <p>{`All props other than `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` are passed on to the `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` component, so this component is a great starting point for creating Card components.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<ThemedBox name=\\\"page\\\" p=\\\"l\\\">\\n  <ThemedBox name=\\\"card\\\" borderRadius=\\\"small\\\" boxShadow=\\\"soft\\\" p=\\\"s\\\">\\n    Hello\\n  </ThemedBox>\\n</ThemedBox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ThemedBox,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<ThemedBox name=\"page\" p=\"l\" mdxType=\"ThemedBox\">\n\t\t<ThemedBox name=\"card\" borderRadius=\"small\" boxShadow=\"soft\" p=\"s\" mdxType=\"ThemedBox\">\n\t\t\tHello\n\t\t</ThemedBox>\n\t</ThemedBox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props isToggle of={ThemedBox} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}