(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{HciZ:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return I})),t.d(n,"default",(function(){return j}));var o=t("Fcif"),a=t("+I+c"),c=(t("mXGw"),t("/FXl")),i=t("TjRS"),l=t("ZFoC"),r=t("2mC/"),d=t("VaD+"),s=t("l/Og"),b=t("tATL"),u=t("11l2"),p=t("9Eoj"),m=t("Cyfj"),f=t("11Sx"),I=(t("aD51"),{});void 0!==I&&I&&I===Object(I)&&Object.isExtensible(I)&&!I.hasOwnProperty("__filemeta")&&Object.defineProperty(I,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Icon/README.mdx"}});var h={_frontmatter:I},y=i.a;function j(e){var n,t,j,O,x=e.components,w=Object(a.a)(e,["components"]);return Object(c.b)(y,Object(o.a)({},h,w,{components:x,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"icon"},"Icon"),Object(c.b)("p",null,"An image says more than a thousand words. ;)"),Object(c.b)("p",null,Object(c.b)("a",Object(o.a)({parentName:"p"},{href:"/base5-ui/src-icons-readme"}),"View all available icons here")),Object(c.b)("h2",{id:"using-the-wrapper-component"},"Using the Wrapper component"),Object(c.b)("p",null,"Using the ",Object(c.b)("inlineCode",{parentName:"p"},"<Icon />")," wrapper component allows you to dynamically display icons by their (kebab-cased, not CamelCased) name. Using the Icon component will bundle the whole base5 icon set with your app. See the next section if you only need a few icons from the set."),Object(c.b)(l.c,{__position:0,__code:'<Icon name="disk" />\n<Icon name="plus" />\n<Text as="div" size="xxl">\n  <Icon name="search" />\n  <Icon name="search" scale={0} />\n</Text>',__scope:(n={props:w,DefaultLayout:i.a,Playground:l.c,Props:l.d,Icon:r.a,Text:d.a,ArrowIcon:s.default,DiskIcon:b.default,PlusIcon:u.default,SearchIcon:p.default,InfoIcon:m.default,XIcon:f.default},n.DefaultLayout=i.a,n._frontmatter=I,n),mdxType:"Playground"},Object(c.b)(r.a,{name:"disk",mdxType:"Icon"}),Object(c.b)(r.a,{name:"plus",mdxType:"Icon"}),Object(c.b)(d.a,{as:"div",size:"xxl",mdxType:"Text"},Object(c.b)(r.a,{name:"search",mdxType:"Icon"}),Object(c.b)(r.a,{name:"search",scale:0,mdxType:"Icon"}))),Object(c.b)("h2",{id:"using-individual-icons"},"Using individual icons"),Object(c.b)("p",null,"If you don't want to bundle the whole icon set with your app, import the icons individually:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import DiskIcon from 'base5-ui/icons/Disk';\nimport PlusIcon from 'base5-ui/icons/Plus';\nimport SearchIcon from 'base5-ui/icons/Search';\n")),Object(c.b)("p",null,"and use them directly:"),Object(c.b)(l.c,{__position:1,__code:"<DiskIcon />\n<PlusIcon />\n<SearchIcon />",__scope:(t={props:w,DefaultLayout:i.a,Playground:l.c,Props:l.d,Icon:r.a,Text:d.a,ArrowIcon:s.default,DiskIcon:b.default,PlusIcon:u.default,SearchIcon:p.default,InfoIcon:m.default,XIcon:f.default},t.DefaultLayout=i.a,t._frontmatter=I,t),mdxType:"Playground"},Object(c.b)(b.default,{mdxType:"DiskIcon"}),Object(c.b)(u.default,{mdxType:"PlusIcon"}),Object(c.b)(p.default,{mdxType:"SearchIcon"})),Object(c.b)("h2",{id:"aligning-icons-with-text"},"Aligning icons with text"),Object(c.b)("p",null,'When placed next to or inside of text, icons tend to sit a bit too low compared to the text\'s baseline. They also often look darker than text, even if they "technically" have the same colour. The props ',Object(c.b)("inlineCode",{parentName:"p"},"vAlign")," and ",Object(c.b)("inlineCode",{parentName:"p"},"dimmed")," exist to compensate for these issues. Use the Boolean ",Object(c.b)("inlineCode",{parentName:"p"},"vAlign")," prop to nudge the icon up by a few pixels to visually align it with its surrounding text. Use ",Object(c.b)("inlineCode",{parentName:"p"},"dimmed")," to make the icon slightly transparent to match the text's appearance."),Object(c.b)(l.c,{__position:2,__code:"<PlusIcon /> Without vAlign and undimmed\n<br />\n<br />\n<PlusIcon vAlign dimmed /> With vAlign and dimmed",__scope:(j={props:w,DefaultLayout:i.a,Playground:l.c,Props:l.d,Icon:r.a,Text:d.a,ArrowIcon:s.default,DiskIcon:b.default,PlusIcon:u.default,SearchIcon:p.default,InfoIcon:m.default,XIcon:f.default},j.DefaultLayout=i.a,j._frontmatter=I,j),mdxType:"Playground"},Object(c.b)(u.default,{mdxType:"PlusIcon"})," Without vAlign and undimmed",Object(c.b)("br",null),Object(c.b)("br",null),Object(c.b)(u.default,{vAlign:!0,dimmed:!0,mdxType:"PlusIcon"})," With vAlign and dimmed"),Object(c.b)("h2",{id:"transforming-icons"},"Transforming icons"),Object(c.b)("p",null,"You can both rotate and flip icons."),Object(c.b)(l.c,{__position:3,__code:'<ArrowIcon rotate={90} />\n<ArrowIcon rotate={90} />\n<ArrowIcon rotate={-90} />\n<ArrowIcon rotate={-90} />\n<ArrowIcon />\n<ArrowIcon flip="x" />\n<ArrowIcon />\n<ArrowIcon flip="x" />\n<InfoIcon />\n<XIcon />',__scope:(O={props:w,DefaultLayout:i.a,Playground:l.c,Props:l.d,Icon:r.a,Text:d.a,ArrowIcon:s.default,DiskIcon:b.default,PlusIcon:u.default,SearchIcon:p.default,InfoIcon:m.default,XIcon:f.default},O.DefaultLayout=i.a,O._frontmatter=I,O),mdxType:"Playground"},Object(c.b)(s.default,{rotate:90,mdxType:"ArrowIcon"}),Object(c.b)(s.default,{rotate:90,mdxType:"ArrowIcon"}),Object(c.b)(s.default,{rotate:-90,mdxType:"ArrowIcon"}),Object(c.b)(s.default,{rotate:-90,mdxType:"ArrowIcon"}),Object(c.b)(s.default,{mdxType:"ArrowIcon"}),Object(c.b)(s.default,{flip:"x",mdxType:"ArrowIcon"}),Object(c.b)(s.default,{mdxType:"ArrowIcon"}),Object(c.b)(s.default,{flip:"x",mdxType:"ArrowIcon"}),Object(c.b)(m.default,{mdxType:"InfoIcon"}),Object(c.b)(f.default,{mdxType:"XIcon"})),Object(c.b)("h2",{id:"props"},"Props"),Object(c.b)("p",null,"The following props are available on both the individual icon components as well as the ",Object(c.b)("inlineCode",{parentName:"p"},"<Icon />")," component:"),Object(c.b)(l.d,{of:r.a,mdxType:"Props"}))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Icon/README.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-icon-readme-mdx-29319dba7027af50803d.js.map