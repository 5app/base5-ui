{"version":3,"sources":["webpack:///../src/Text/README.mdx","webpack:///../src/utils/spacing.js","webpack:///../src/utils/theme.js","webpack:///../src/styleProps/borderProps.js","webpack:///../src/styleProps/displayProps.js","webpack:///../src/styleProps/paddingProps.js","webpack:///../src/styleProps/positionProps.js","webpack:///../src/styleProps/marginProps.js","webpack:///../src/styleProps/textProps.js","webpack:///../src/styleProps/flexProps.js","webpack:///../src/Text/index.js","webpack:///../node_modules/core-js/modules/es6.string.bold.js","webpack:///../src/mixins/borderValue.js","webpack:///../src/mixins/centerChildren.js","webpack:///../src/mixins/ellipsis.js","webpack:///../src/mixins/fillParent.js","webpack:///../src/mixins/ie11Hack.js","webpack:///../src/mixins/overflowWrap.js","webpack:///../src/mixins/visuallyHidden.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Text","as","size","lineHeight","dimmed","bold","mt","caps","overflow","display","of","isMDXComponent","passThroughValues","getSpacing","shortCode","pxToRem","theme","checkTheme","borderKeys","top","left","bottom","right","borderProps","border","borderValue","supportedDisplayValues","displayProps","console","paddingProps","p","px","py","pt","pr","pb","pl","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","undefined","positionProps","pos","position","z","zIndex","marginProps","m","mx","my","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","ellipsis","wrap","textProps","fontSize","textAlign","fontWeight","textTransform","color","alpha","alignMap","center","flexProps","flexAlign","basis","grow","shrink","flex","minWidth","flexBasis","flexGrow","flexShrink","alignSelf","styled","PropTypes","createHTML","this","centerChildren","alignItems","justifyContent","textOverflow","whiteSpace","fillParent","ie11Hack","overflowWrap","wordWrap","wordBreak","visuallyHidden","width","height","clip"],"mappings":"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","file":"component---src-text-readme-mdx-3a5af3b159b5bd054d4b.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Text from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"text\"\n    }}>{`Text`}</h1>\n    <p><inlineCode parentName=\"p\">{`Text`}</inlineCode>{` is a helper component for formatting text. It supports styling props for the following styles:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Text styles (bold, dimmed, fontSize, lineHeight, textAlign, overflow, caps)`}</li>\n      <li parentName=\"ul\">{`Display (block, inline, inline-block)`}</li>\n      <li parentName=\"ul\">{`Margin and padding`}</li>\n    </ul>\n    <p>{`In addition to the `}<inlineCode parentName=\"p\">{`fontSize`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`textAlign`}</inlineCode>{` props, this component also supports the shorthands `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`align`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<Text as=\\\"h1\\\" size=\\\"xl\\\" lineHeight={1.3}>\\n  Extra-large text with a smaller line height\\n</Text>\\n<Text dimmed as=\\\"p\\\">\\n  A dimmed subtitle with a{\\' \\'}\\n  <Text bold dimmed={false}>\\n    non-dimmed segment\\n  </Text>\\n</Text>\\n<Text bold as=\\\"p\\\" mt=\\\"m\\\">\\n  Bold text with some nested <Text bold={false}>non-bold</Text> text\\n</Text>\\n<Text as=\\\"p\\\" caps=\\\"all\\\" mt=\\\"m\\\">\\n  this text is all-lowercase, but displays in uppercase\\n</Text>\\n<Text as=\\\"p\\\" caps=\\\"first\\\">\\n  this text is all-lowercase, but is displayed in title-case{\\' \\'}\\n  <Text caps={false}>(unless overwritten)</Text>\\n</Text>\\n<Text as=\\\"p\\\" overflow=\\\"wrap\\\" mt=\\\"m\\\">\\n  OverflowWrapWillMakeLongWordsWithNoSpacesForExampleUrlsBreakIntoANewLineInsteadOfGoingOnAndBreakingOutOfTheirContainerWhichUsuallyDoesntLookVeryGood.\\n</Text>\\n<Text display=\\\"block\\\" overflow=\\\"ellipsis\\\" mt=\\\"m\\\">\\n  An overflow value of \\'ellipsis\\' will prevent line-breaks and cut off\\n  overflowing text with an ellipsis (…). This only works with \\\"block-level\\\"\\n  elements (e.g. div, p). If you want to use it with a non-block element like\\n  `span`, set the `display` prop to \\'block\\'.\\n</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Text\n    }} mdxType=\"Playground\">\n\t<Text as=\"h1\" size=\"xl\" lineHeight={1.3} mdxType=\"Text\">\n\t\tExtra-large text with a smaller line height\n\t</Text>\n\t<Text dimmed as=\"p\" mdxType=\"Text\">\n\t\tA dimmed subtitle with a{' '}\n\t\t<Text bold dimmed={false} mdxType=\"Text\">\n\t\t\tnon-dimmed segment\n\t\t</Text>\n\t</Text>\n\t<Text bold as=\"p\" mt=\"m\" mdxType=\"Text\">\n\t\tBold text with some nested <Text bold={false} mdxType=\"Text\">non-bold</Text> text\n\t</Text>\n\t<Text as=\"p\" caps=\"all\" mt=\"m\" mdxType=\"Text\">\n\t\tthis text is all-lowercase, but displays in uppercase\n\t</Text>\n\t<Text as=\"p\" caps=\"first\" mdxType=\"Text\">\n\t\tthis text is all-lowercase, but is displayed in title-case{' '}\n\t\t<Text caps={false} mdxType=\"Text\">(unless overwritten)</Text>\n\t</Text>\n\t<Text as=\"p\" overflow=\"wrap\" mt=\"m\" mdxType=\"Text\">\n\t\tOverflowWrapWillMakeLongWordsWithNoSpacesForExampleUrlsBreakIntoANewLineInsteadOfGoingOnAndBreakingOutOfTheirContainerWhichUsuallyDoesntLookVeryGood.\n\t</Text>\n\t<Text display=\"block\" overflow=\"ellipsis\" mt=\"m\" mdxType=\"Text\">\n\t\tAn overflow value of 'ellipsis' will prevent line-breaks and cut off\n\t\toverflowing text with an ellipsis (…). This only works with\n\t\t\"block-level\" elements (e.g. div, p). If you want to use it with a\n\t\tnon-block element like `span`, set the `display` prop to 'block'.\n\t</Text>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Text} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import {pxToRem} from './units';\n\nconst passThroughValues = ['auto'];\n\nfunction getSpacing(shortCode, theme) {\n\tif (shortCode === undefined || shortCode === null || shortCode === false) {\n\t\treturn shortCode;\n\t}\n\n\tif (\n\t\t(typeof shortCode !== 'number' && typeof shortCode !== 'string') ||\n\t\tshortCode === '0'\n\t) {\n\t\treturn '0';\n\t}\n\n\tif (typeof shortCode === 'number') {\n\t\treturn pxToRem(shortCode);\n\t}\n\n\tif (passThroughValues.indexOf(shortCode) > -1) {\n\t\treturn shortCode;\n\t}\n\n\tif (shortCode.charAt(0) === '-') {\n\t\treturn '-' + theme.globals.spacing[shortCode.substring(1)];\n\t} else {\n\t\treturn theme.globals.spacing[shortCode];\n\t}\n}\n\nexport {getSpacing};\n","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {checkTheme} from '../utils/theme';\n\nimport {borderValue} from '../mixins';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: borderValue(theme),\n\t};\n}\n\nexport default borderProps;\n","const supportedDisplayValues = ['block', 'inline', 'inline-block'];\n\nfunction displayProps(props) {\n\tconst {display} = props;\n\n\tif (!display) return null;\n\n\tif (supportedDisplayValues.includes(display)) {\n\t\treturn {\n\t\t\tdisplay,\n\t\t};\n\t} else {\n\t\tconsole.warn(\n\t\t\t`Only 'block', 'inline', and 'inline-block' are supported for\n\t\t\tthe 'display' styling prop. Please use 'base5-ui/Flex' or custom CSS\n\t\t\tfor more complex styling.`\n\t\t);\n\t}\n}\n\nexport default displayProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap as wrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis,\n\twrap,\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\ttextAlign,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : bold === false ? 'normal' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps\n\t\t\t? textTransformMap[caps]\n\t\t\t: caps === false\n\t\t\t? 'none'\n\t\t\t: undefined,\n\t\tcolor: dimmed\n\t\t\t? alpha(theme.text, theme.textDimStrength)\n\t\t\t: dimmed === false\n\t\t\t? theme.text\n\t\t\t: undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n\tdisplayProps,\n\ttextProps,\n\tmarginProps,\n\tpaddingProps,\n} from '../styleProps';\n\nconst Text = styled.span`\n\t${displayProps}\n\t${props =>\n\t\ttextProps({\n\t\t\t...props,\n\t\t\ttextAlign: props.align || props.textAlign,\n\t\t\tfontSize: props.size || props.fontSize,\n\t\t})}\n\t${marginProps}\n\t${paddingProps}\n`;\n\nText.propTypes = {\n\tbold: PropTypes.bool,\n\tcaps: PropTypes.oneOfType([\n\t\tPropTypes.oneOf(['all', 'first']),\n\t\tPropTypes.bool,\n\t]),\n\tdimmed: PropTypes.bool,\n\tdisplay: PropTypes.oneOf(['block', 'inline', 'inline-block']),\n\tfontSize: PropTypes.string,\n\tlineHeight: PropTypes.number,\n\toverflow: PropTypes.oneOf(['ellipsis', 'wrap']),\n\ttextAlign: PropTypes.oneOf(['left', 'center', 'right']),\n};\n\nexport default Text;\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n","import {alpha} from '../utils/colors';\n\nfunction borderValue(theme) {\n\treturn `1px solid ${alpha(theme.shade, theme.lineStrength)}`;\n}\n\nexport default borderValue;\n","const centerChildren = {\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n};\n\nexport default centerChildren;\n","const ellipsis = {\n\toverflow: 'hidden',\n\ttextOverflow: 'ellipsis',\n\twhiteSpace: 'nowrap',\n};\n\nexport default ellipsis;\n","const fillParent = {\n\tposition: 'absolute',\n\ttop: 0,\n\tright: 0,\n\tbottom: 0,\n\tleft: 0,\n};\n\nexport default fillParent;\n","/* Use this as a media query to apply styles only on IE 11 */\n\nconst ie11Hack =\n\t'screen and (-ms-high-contrast: active), (-ms-high-contrast: none)';\n\nexport default ie11Hack;\n","const overflowWrap = {\n\toverflowWrap: 'break-word',\n\twordWrap: 'break-word',\n\n\twordBreak: 'break-word',\n};\n\nexport default overflowWrap;\n","const visuallyHidden = {\n\tposition: 'absolute',\n\toverflow: 'hidden',\n\twidth: 1,\n\theight: 1,\n\tpadding: 0,\n\tclip: 'rect(0 0 0 0)',\n\tborder: 0,\n};\n\nexport default visuallyHidden;\n"],"sourceRoot":""}