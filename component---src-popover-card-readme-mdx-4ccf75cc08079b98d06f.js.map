{"version":3,"sources":["webpack:///../src/PopoverCard/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Box","PopoverCard","isOpen","renderInPlace","p","variant","isToggle","of","isMDXComponent"],"mappings":"4RASaA,G,UAAe,S,4MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,eADR,eAGA,sIACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iGAAsGC,SAAO,GAC9IJ,QACAH,kBACAQ,eACAC,UACAC,QACAC,iBAN8I,gBAO9IX,IAP8I,EAQ9IH,eAR8I,GAS7IO,QAAQ,cACd,YAAC,IAAD,CAAaQ,QAAM,EAACC,eAAa,EAACC,EAAE,IAAIC,QAAQ,WAAWX,QAAQ,eAAnE,oBAIG,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOY,UAAQ,EAACC,GAAIN,IAAaP,QAAQ,gB,0MAK7CH,EAAWiB,gBAAiB","file":"component---src-popover-card-readme-mdx-4ccf75cc08079b98d06f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Box from '../Box';\nimport PopoverCard from './';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"popovercard\"\n    }}>{`PopoverCard`}</h1>\n    <p>{`PopoverCard is a building block for creating tooltips and dropdown menus, built on top of the Card component.`}</p>\n    <Playground __position={0} __code={'<PopoverCard isOpen renderInPlace p=\\\"s\\\" variant=\\\"inverted\\\">\\n  Popover content\\n</PopoverCard>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Box,\n      PopoverCard,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<PopoverCard isOpen renderInPlace p=\"s\" variant=\"inverted\" mdxType=\"PopoverCard\">\n\t\tPopover content\n\t</PopoverCard>\n    </Playground>\n    <h1 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h1>\n    <Props isToggle of={PopoverCard} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}