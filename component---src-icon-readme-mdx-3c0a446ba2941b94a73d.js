(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{HciZ:function(e,n,o){"use strict";o.r(n),o.d(n,"_frontmatter",(function(){return f})),o.d(n,"default",(function(){return y}));o("5hJT"),o("W1QL"),o("K/PF"),o("t91x"),o("75LO"),o("PJhk"),o("mXGw");var t=o("/FXl"),a=o("TjRS"),c=o("ZFoC"),r=o("2mC/"),i=o("VaD+"),l=o("l/Og"),d=o("tATL"),s=o("11l2"),b=o("9Eoj"),p=o("Cyfj"),u=o("11Sx");o("aD51");function m(){return(m=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var o=arguments[n];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t])}return e}).apply(this,arguments)}var f={};void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/Icon/README.mdx"}});var I={_frontmatter:f},h=a.a;function y(e){var n=e.components,o=function(e,n){if(null==e)return{};var o,t,a={},c=Object.keys(e);for(t=0;t<c.length;t++)o=c[t],n.indexOf(o)>=0||(a[o]=e[o]);return a}(e,["components"]);return Object(t.b)(h,m({},I,o,{components:n,mdxType:"MDXLayout"}),Object(t.b)("h1",{id:"icon"},"Icon"),Object(t.b)("p",null,"An image says more than a thousand words. ;)"),Object(t.b)("p",null,Object(t.b)("a",m({parentName:"p"},{href:"/base5-ui/src-icons-readme"}),"View all available icons here")),Object(t.b)("h2",{id:"using-the-wrapper-component"},"Using the Wrapper component"),Object(t.b)("p",null,"Using the ",Object(t.b)("inlineCode",{parentName:"p"},"<Icon />")," wrapper component allows you to dynamically display icons by their (kebab-cased, not CamelCased) name. Using the Icon component will bundle the whole base5 icon set with your app. See the next section if you only need a few icons from the set."),Object(t.b)(c.c,{__position:0,__code:'<Icon name="disk" />\n<Icon name="plus" />\n<Text as="div" size="xxl">\n  <Icon name="search" />\n  <Icon name="search" scale={0} />\n</Text>',__scope:{props:o,DefaultLayout:a.a,Playground:c.c,Props:c.d,Icon:r.a,Text:i.a,ArrowIcon:l.default,DiskIcon:d.default,PlusIcon:s.default,SearchIcon:b.default,InfoIcon:p.default,XIcon:u.default},mdxType:"Playground"},Object(t.b)(r.a,{name:"disk",mdxType:"Icon"}),Object(t.b)(r.a,{name:"plus",mdxType:"Icon"}),Object(t.b)(i.a,{as:"div",size:"xxl",mdxType:"Text"},Object(t.b)(r.a,{name:"search",mdxType:"Icon"}),Object(t.b)(r.a,{name:"search",scale:0,mdxType:"Icon"}))),Object(t.b)("h2",{id:"using-individual-icons"},"Using individual icons"),Object(t.b)("p",null,"If you don't want to bundle the whole icon set with your app, import the icons individually:"),Object(t.b)("pre",null,Object(t.b)("code",m({parentName:"pre"},{className:"language-js"}),"import DiskIcon from 'base5-ui/icons/Disk';\nimport PlusIcon from 'base5-ui/icons/Plus';\nimport SearchIcon from 'base5-ui/icons/Search';\n")),Object(t.b)("p",null,"and use them directly:"),Object(t.b)(c.c,{__position:1,__code:"<DiskIcon />\n<PlusIcon />\n<SearchIcon />",__scope:{props:o,DefaultLayout:a.a,Playground:c.c,Props:c.d,Icon:r.a,Text:i.a,ArrowIcon:l.default,DiskIcon:d.default,PlusIcon:s.default,SearchIcon:b.default,InfoIcon:p.default,XIcon:u.default},mdxType:"Playground"},Object(t.b)(d.default,{mdxType:"DiskIcon"}),Object(t.b)(s.default,{mdxType:"PlusIcon"}),Object(t.b)(b.default,{mdxType:"SearchIcon"})),Object(t.b)("h2",{id:"aligning-icons-with-text"},"Aligning icons with text"),Object(t.b)("p",null,'When placed next to or inside of text, icons tend to sit a bit too low compared to the text\'s baseline. They also often look darker than text, even if they "technically" have the same colour. The props ',Object(t.b)("inlineCode",{parentName:"p"},"vAlign")," and ",Object(t.b)("inlineCode",{parentName:"p"},"dimmed")," exist to compensate for these issues. Use the Boolean ",Object(t.b)("inlineCode",{parentName:"p"},"vAlign")," prop to nudge the icon up by a few pixels to visually align it with its surrounding text. Use ",Object(t.b)("inlineCode",{parentName:"p"},"dimmed")," to make the icon slightly transparent to match the text's appearance."),Object(t.b)(c.c,{__position:2,__code:"<PlusIcon /> Without vAlign and undimmed\n<br />\n<br />\n<PlusIcon vAlign dimmed /> With vAlign and dimmed",__scope:{props:o,DefaultLayout:a.a,Playground:c.c,Props:c.d,Icon:r.a,Text:i.a,ArrowIcon:l.default,DiskIcon:d.default,PlusIcon:s.default,SearchIcon:b.default,InfoIcon:p.default,XIcon:u.default},mdxType:"Playground"},Object(t.b)(s.default,{mdxType:"PlusIcon"})," Without vAlign and undimmed",Object(t.b)("br",null),Object(t.b)("br",null),Object(t.b)(s.default,{vAlign:!0,dimmed:!0,mdxType:"PlusIcon"})," With vAlign and dimmed"),Object(t.b)("h2",{id:"transforming-icons"},"Transforming icons"),Object(t.b)("p",null,"You can both rotate and flip icons."),Object(t.b)(c.c,{__position:3,__code:'<ArrowIcon rotate={90} />\n<ArrowIcon rotate={90} />\n<ArrowIcon rotate={-90} />\n<ArrowIcon rotate={-90} />\n<ArrowIcon />\n<ArrowIcon flip="x" />\n<ArrowIcon />\n<ArrowIcon flip="x" />\n<InfoIcon />\n<XIcon />',__scope:{props:o,DefaultLayout:a.a,Playground:c.c,Props:c.d,Icon:r.a,Text:i.a,ArrowIcon:l.default,DiskIcon:d.default,PlusIcon:s.default,SearchIcon:b.default,InfoIcon:p.default,XIcon:u.default},mdxType:"Playground"},Object(t.b)(l.default,{rotate:90,mdxType:"ArrowIcon"}),Object(t.b)(l.default,{rotate:90,mdxType:"ArrowIcon"}),Object(t.b)(l.default,{rotate:-90,mdxType:"ArrowIcon"}),Object(t.b)(l.default,{rotate:-90,mdxType:"ArrowIcon"}),Object(t.b)(l.default,{mdxType:"ArrowIcon"}),Object(t.b)(l.default,{flip:"x",mdxType:"ArrowIcon"}),Object(t.b)(l.default,{mdxType:"ArrowIcon"}),Object(t.b)(l.default,{flip:"x",mdxType:"ArrowIcon"}),Object(t.b)(p.default,{mdxType:"InfoIcon"}),Object(t.b)(u.default,{mdxType:"XIcon"})),Object(t.b)("h2",{id:"props"},"Props"),Object(t.b)("p",null,"The following props are available on both the individual icon components as well as the ",Object(t.b)("inlineCode",{parentName:"p"},"<Icon />")," component:"),Object(t.b)(c.d,{of:r.a,mdxType:"Props"}))}y&&y===Object(y)&&Object.isExtensible(y)&&!y.hasOwnProperty("__filemeta")&&Object.defineProperty(y,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/Icon/README.mdx"}}),y.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-icon-readme-mdx-3c0a446ba2941b94a73d.js.map