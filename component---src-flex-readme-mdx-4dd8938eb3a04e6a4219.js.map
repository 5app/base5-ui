{"version":3,"sources":["webpack:///../src/Flex/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","align","grow","shrink","wrap","mt","of","Flex","isMDXComponent"],"mappings":"gRAQaA,G,UAAe,S,qMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,QADR,QAGA,qBAAG,yBAAgB,CACf,WAAc,KADf,QAAH,+GAIE,yBAAgB,CACd,WAAc,KADhB,OAJF,kEAQA,yDACE,yBAAgB,CACd,WAAc,KADhB,OADF,kBAKE,yBAAgB,CACd,WAAc,KADhB,SALF,KASE,yBAAgB,CACd,WAAc,KADhB,UATF,SAaE,yBAAgB,CACd,WAAc,KADhB,QAbF,wBAiBE,yBAAgB,CACd,WAAc,KADhB,OAjBF,UAqBE,yBAAgB,CACd,WAAc,KADhB,cArBF,KAyBE,yBAAgB,CACd,WAAc,KADhB,cAzBF,SA6BE,yBAAgB,CACd,WAAc,KADhB,aA7BF,KAiCA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYA,QAAQ,cAClB,YAAC,IAAD,CAAMC,MAAM,MAAMD,QAAQ,QACxB,YAAC,IAAD,CAAKE,MAAI,EAACC,QAAM,EAACH,QAAQ,OACvB,oFAEF,YAAC,IAAD,CAAKA,QAAQ,OACX,uCAGJ,YAAC,IAAD,CAAMI,MAAI,EAACH,MAAM,MAAMI,GAAG,IAAIL,QAAQ,QACpC,YAAC,IAAD,CAAKE,MAAI,EAACC,QAAM,EAACH,QAAQ,OACvB,yDAEF,YAAC,IAAD,CAAKA,QAAQ,OACX,kFAIN,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOM,GAAIC,IAAMP,QAAQ,gB,mMAK7BH,EAAWW,gBAAiB","file":"component---src-flex-readme-mdx-4dd8938eb3a04e6a4219.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Flex, { Box } from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"flex\"\n    }}>{`Flex`}</h1>\n    <p><inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`Flex`}</inlineCode>\n      {` is a container component for building layouts using CSS flexbox. It's especially useful when used with the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`Box`}</inlineCode>\n      {` component which provides control for laying out the children.`}</p>\n    <p>{`The component is built on top of `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`Box`}</inlineCode>\n      {` and its props `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`align`}</inlineCode>\n      {`, `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`column`}</inlineCode>\n      {`, and `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`wrap`}</inlineCode>\n      {` are aliases for the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`Box`}</inlineCode>\n      {` props `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`alignItems`}</inlineCode>\n      {`, `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`stackItems`}</inlineCode>\n      {`, and `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`wrapItems`}</inlineCode>\n      {`.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground mdxType=\"Playground\">\n      <Flex align=\"top\" mdxType=\"Flex\">\n        <Box grow shrink mdxType=\"Box\">\n          <p>{`I take up all the free space and push other Boxes away! ðŸ‘‰`}</p>\n        </Box>\n        <Box mdxType=\"Box\">\n          <p>{`ðŸ‘€ I'm smol.`}</p>\n        </Box>\n      </Flex>\n      <Flex wrap align=\"top\" mt=\"m\" mdxType=\"Flex\">\n        <Box grow shrink mdxType=\"Box\">\n          <p>{`Still taking up all free space.`}</p>\n        </Box>\n        <Box mdxType=\"Box\">\n          <p>{`If there's no room for me I'll wrap onto a new line ðŸ‘‡`}</p>\n        </Box>\n      </Flex>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Flex} mdxType=\"Props\" />\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}