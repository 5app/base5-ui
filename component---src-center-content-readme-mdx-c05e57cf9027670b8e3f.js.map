{"version":3,"sources":["webpack:///../src/CenterContent/README.mdx","webpack:///../src/icons/BaseSvg.js","webpack:///../src/icons/AssetPodcast.js","webpack:///../src/CenterContent/index.js","webpack:///../src/utils/theme.js","webpack:///../src/styleProps/borderProps.js","webpack:///../src/styleProps/displayProps.js","webpack:///../src/styleProps/paddingProps.js","webpack:///../src/styleProps/positionProps.js","webpack:///../src/styleProps/marginProps.js","webpack:///../src/styleProps/textProps.js","webpack:///../src/styleProps/flexProps.js","webpack:///../node_modules/core-js/modules/es6.string.bold.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","CenterContent","PodcastIcon","height","vAlign","style","position","width","backgroundColor","border","overflow","fillParent","spacing","of","isMDXComponent","Svg","role","p","css","pxToEm","pxToRem","scale","PropTypes","spacingLeft","spacingRight","AssetPodcastIcon","forwardRef","size","color","otherProps","ref","viewBox","fill","fillRule","clipRule","d","Wrapper","styled","paddingProps","Content","contentWidth","children","checkTheme","theme","borderKeys","top","left","bottom","right","borderProps","borderValue","supportedDisplayValues","displayProps","display","console","px","py","pt","pr","pb","pl","padding","getSpacing","paddingTop","paddingRight","paddingBottom","paddingLeft","undefined","positionProps","pos","z","zIndex","marginProps","m","mx","my","mt","mr","mb","ml","margin","marginTop","marginRight","marginBottom","marginLeft","textTransformMap","all","first","overflowStylesMap","ellipsis","wrap","textProps","bold","caps","dimmed","fontSize","lineHeight","textAlign","fontWeight","textTransform","alpha","alignMap","center","flexProps","flexAlign","basis","grow","shrink","flex","minWidth","flexBasis","flexGrow","flexShrink","alignSelf","createHTML","this"],"mappings":"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","file":"component---src-center-content-readme-mdx-c05e57cf9027670b8e3f.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport CenterContent from './';\nimport PodcastIcon from '../icons/AssetPodcast';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"centercontent\"\n    }}>{`CenterContent`}</h1>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`CenterContent`}</inlineCode>{` component to center arbitrarily sized content horizontally and vertically inside of its container.`}</p>\n    <h2 {...{\n      \"id\": \"usage-notes\"\n    }}>{`Usage notes`}</h2>\n    <p>{`The component renders two wrapper `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{`s and is meant to be used for large components with an unpredictable height (e.g. modal popups or headlines in a banner). Don't use it for centering an icon within a circle or text within a button.`}</p>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` prop to define a minimum height for the component. If the content is taller than the height specified, the component will grow accordingly.`}</p>\n    <p>{`Instead of defining a height, you can also use the `}<inlineCode parentName=\"p\">{`fillParent`}</inlineCode>{` prop which will make the component grow to match the width and height of its container. When using this, make sure the container has a position other than `}<inlineCode parentName=\"p\">{`static`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`relative`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`absolute`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`fixed`}</inlineCode>{` all work), and is not set to `}<inlineCode parentName=\"p\">{`overflow: hidden`}</inlineCode>{` as that could lead to longer content being cut off.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<CenterContent height={350}>\\n  <PodcastIcon vAlign /> Hello\\n</CenterContent>\\n<div\\n  style={{\\n    position: \\'relative\\',\\n    width: 200,\\n    height: 200,\\n    backgroundColor: \\'aliceblue\\',\\n    border: \\'1px solid grey\\',\\n    overflow: \\'auto\\',\\n  }}\\n>\\n  <CenterContent fillParent spacing=\\\"s\\\">\\n    I\\'m centred in my little square container, but if I get\\n    <br />\\n    too looooo\\n    <br />\\n    ooooooooooooo\\n    <br />\\n    ooooooooooooo\\n    <br />\\n    oooooooooong,\\n    <br />I just make it grow.\\n  </CenterContent>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CenterContent,\n      PodcastIcon\n    }} mdxType=\"Playground\">\n\t<CenterContent height={350} mdxType=\"CenterContent\">\n\t\t<PodcastIcon vAlign mdxType=\"PodcastIcon\" /> Hello\n\t</CenterContent>\n      <div style={{\n        position: 'relative',\n        width: 200,\n        height: 200,\n        backgroundColor: 'aliceblue',\n        border: '1px solid grey',\n        overflow: 'auto'\n      }}>\n\t<CenterContent fillParent spacing=\"s\" mdxType=\"CenterContent\">\n\t\tI'm centred in my little square container, but if I get<br />\n\t\ttoo looooo<br />\n\t\tooooooooooooo<br />\n\t\tooooooooooooo<br />\n\t\toooooooooong,<br />\n\t\tI just make it grow.\n\t</CenterContent>\n      </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={CenterContent} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nimport {pxToRem, pxToEm} from '../utils/units';\n\nconst iconSize = 18;\n\nconst Svg = styled.svg.attrs({\n\trole: 'presentation',\n})`\n\tdisplay: inline-block;\n\tvertical-align: middle;\n\n\tflex: 0 0 auto;\n\t/* Using ems makes the icon scale along with the surrounding font size */\n\twidth: 1em;\n\theight: 1em;\n\n\t${p =>\n\t\tp.spacingLeft &&\n\t\tcss`\n\t\t\tmargin-left: ${p.spacingLeft};\n\t\t`}\n\t${p =>\n\t\tp.spacingRight &&\n\t\tcss`\n\t\t\tmargin-right: ${p.spacingRight};\n\t\t`}\n\n\tfont-size: ${p =>\n\t\tp.scale !== 0 ? pxToEm(iconSize * p.scale) : pxToRem(iconSize)};\n\n\t${p =>\n\t\tp.vAlign &&\n\t\tcss`\n\t\t\t/* Use to align icons with surrounding body text */\n\t\t\tposition: relative;\n\t\t\ttop: -0.12em;\n\t\t`}\n`;\n\nSvg.defaultProps = {\n\tscale: 1,\n};\n\nSvg.propTypes = {\n\tscale: PropTypes.number,\n\tvAlign: PropTypes.bool,\n\tspacingLeft: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\tspacingRight: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n};\n\nexport default Svg;\n","import React, {forwardRef} from 'react';\n\nimport Svg from './BaseSvg';\n\nconst AssetPodcastIcon = forwardRef((props, ref) => {\n\tconst {size, color, ...otherProps} = props;\n\n\treturn (\n\t\t<Svg\n\t\t\t{...otherProps}\n\t\t\tref={ref}\n\t\t\tviewBox=\"0 0 18 18\"\n\t\t\twidth={size}\n\t\t\theight={size}\n\t\t\tfill={color}\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t>\n\t\t\t<path d=\"M7,15l1.143,0l0.716,-5.01c-0.486,-0.069 -0.859,-0.486 -0.859,-0.99c0,-0.552 0.448,-1 1,-1c0.552,0 1,0.448 1,1c0,0.504 -0.373,0.921 -0.859,0.99l0.716,5.01l1.143,0l0,1l-4,0l0,-1Zm-1.17,-0.906c-1.699,-1.06 -2.83,-2.946 -2.83,-5.094c0,-3.311 2.689,-6 6,-6c3.311,0 6,2.689 6,6c0,2.148 -1.131,4.034 -2.83,5.094l-0.288,-1.009c1.281,-0.905 2.118,-2.398 2.118,-4.085c0,-2.76 -2.24,-5 -5,-5c-2.76,0 -5,2.24 -5,5c0,1.687 0.837,3.18 2.118,4.085l-0.288,1.009Zm0.584,-2.043c-0.865,-0.734 -1.414,-1.829 -1.414,-3.051c0,-2.208 1.792,-4 4,-4c2.208,0 4,1.792 4,4c0,1.222 -0.549,2.317 -1.414,3.051l-0.313,-1.094c0.453,-0.526 0.727,-1.21 0.727,-1.957c0,-1.656 -1.344,-3 -3,-3c-1.656,0 -3,1.344 -3,3c0,0.747 0.274,1.431 0.727,1.957l-0.313,1.094Z\" />\n\t\t</Svg>\n\t);\n});\n\nAssetPodcastIcon.displayName = 'AssetPodcastIcon';\n\nAssetPodcastIcon.defaultProps = {\n\tsize: 18,\n\tcolor: 'currentcolor',\n};\n\nexport default AssetPodcastIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, {css} from 'styled-components';\n\nimport {pxToRem} from '../utils/units';\n\nimport {paddingProps} from '../styleProps';\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex: 1 1 auto;\n\n\t${p =>\n\t\tp.height &&\n\t\tcss`\n\t\t\tmin-height: ${pxToRem(p.height)};\n\t\t`}\n\n\t${({spacing, p, ...otherProps}) =>\n\t\tpaddingProps({\n\t\t\tp: spacing || p,\n\t\t\t...otherProps,\n\t\t})}\n\n\t${p =>\n\t\tp.fillParent &&\n\t\tcss`\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100%;\n\t\t\tmin-height: 100%;\n\t\t`}\n\t\n\tbox-sizing: border-box;\n`;\n\nconst Content = styled.div`\n\twidth: ${p => (p.width ? pxToRem(p.width) : 'auto')};\n\tmax-width: 100%;\n\n\t/* Needed for IE11 to contain large items: https://stackoverflow.com/a/42494339 */\n\tflex-shrink: 0;\n\n\t/* This does the centering magic: */\n\tmargin: auto;\n`;\n\nfunction CenterContent(props) {\n\tconst {\n\t\tcontentWidth,\n\t\tfillParent,\n\t\theight,\n\t\tspacing,\n\t\tchildren,\n\t\t...otherProps\n\t} = props;\n\n\treturn (\n\t\t<Wrapper\n\t\t\tfillParent={fillParent}\n\t\t\theight={height}\n\t\t\tspacing={spacing}\n\t\t\t{...otherProps}\n\t\t>\n\t\t\t<Content width={contentWidth}>{children}</Content>\n\t\t</Wrapper>\n\t);\n}\n\nCenterContent.defaultProps = {\n\tspacing: 'm',\n};\n\nCenterContent.propTypes = {\n\t/**\n\t * Define the maximum width for the centred content.\n\t */\n\tcontentWidth: PropTypes.number,\n\t/**\n\t * Make the component grow to match the width and height of its direct parent.\n\t * When using this, make sure the container has a position other than static\n\t * (e.g. relative, absolute, or fixed), and is not set to overflow: hidden as\n\t * that could lead to longer content being cut off.\n\t */\n\tfillParent: PropTypes.bool,\n\t/**\n\t * Define a minimum height for the component to take up.\n\t */\n\theight: PropTypes.number,\n\t/**\n\t * Define the inner spacing between the centred content and its container.\n\t * Alternatively you can also use the common style props `p`, `pl`, `pb`, etc.\n\t */\n\tspacing: PropTypes.string,\n};\n\n// @component\nexport default CenterContent;\n","import {ThemeSectionError} from '../ThemeSection';\n\nfunction checkTheme(theme) {\n\tif (!theme || !theme.globals) {\n\t\tthrow new ThemeSectionError();\n\t}\n}\n\nexport {checkTheme};\n","import {checkTheme} from '../utils/theme';\n\nimport {borderValue} from '../mixins';\n\nconst borderKeys = {\n\ttop: 'borderTop',\n\tleft: 'borderLeft',\n\tbottom: 'borderBottom',\n\tright: 'borderRight',\n};\n\nfunction borderProps(props) {\n\tconst {border, theme} = props;\n\n\tcheckTheme(theme);\n\n\tif (!borderKeys[border]) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t[borderKeys[border]]: borderValue(theme),\n\t};\n}\n\nexport default borderProps;\n","const supportedDisplayValues = ['block', 'inline', 'inline-block'];\n\nfunction displayProps(props) {\n\tconst {display} = props;\n\n\tif (!display) return null;\n\n\tif (supportedDisplayValues.includes(display)) {\n\t\treturn {\n\t\t\tdisplay,\n\t\t};\n\t} else {\n\t\tconsole.warn(\n\t\t\t`Only 'block', 'inline', and 'inline-block' are supported for\n\t\t\tthe 'display' styling prop. Please use 'base5-ui/Flex' or custom CSS\n\t\t\tfor more complex styling.`\n\t\t);\n\t}\n}\n\nexport default displayProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction paddingProps(props) {\n\tconst {p, px, py, pt, pr, pb, pl, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tpadding: p ? getSpacing(p, theme) : undefined,\n\t\tpaddingTop: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pt\n\t\t\t? getSpacing(pt, theme)\n\t\t\t: undefined,\n\t\tpaddingRight: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pr\n\t\t\t? getSpacing(pr, theme)\n\t\t\t: undefined,\n\t\tpaddingBottom: py\n\t\t\t? getSpacing(py, theme)\n\t\t\t: pb\n\t\t\t? getSpacing(pb, theme)\n\t\t\t: undefined,\n\t\tpaddingLeft: px\n\t\t\t? getSpacing(px, theme)\n\t\t\t: pl\n\t\t\t? getSpacing(pl, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default paddingProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction positionProps(props) {\n\tconst {pos, position, top, left, bottom, right, z, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tposition: pos || position || undefined,\n\n\t\ttop: top ? getSpacing(top, theme) : undefined,\n\t\tleft: left ? getSpacing(left, theme) : undefined,\n\t\tbottom: bottom ? getSpacing(bottom, theme) : undefined,\n\t\tright: right ? getSpacing(right, theme) : undefined,\n\n\t\tzIndex: (theme.globals.z && theme.globals.z[z]) || z || undefined,\n\t};\n}\n\nexport default positionProps;\n","import {getSpacing} from '../utils/spacing';\nimport {checkTheme} from '../utils/theme';\n\nfunction marginProps(props) {\n\tconst {m, mx, my, mt, mr, mb, ml, theme} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\tmargin: m ? getSpacing(m, theme) : undefined,\n\t\tmarginTop: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mt\n\t\t\t? getSpacing(mt, theme)\n\t\t\t: undefined,\n\t\tmarginRight: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: mr\n\t\t\t? getSpacing(mr, theme)\n\t\t\t: undefined,\n\t\tmarginBottom: my\n\t\t\t? getSpacing(my, theme)\n\t\t\t: mb\n\t\t\t? getSpacing(mb, theme)\n\t\t\t: undefined,\n\t\tmarginLeft: mx\n\t\t\t? getSpacing(mx, theme)\n\t\t\t: ml\n\t\t\t? getSpacing(ml, theme)\n\t\t\t: undefined,\n\t};\n}\n\nexport default marginProps;\n","import {alpha} from '../utils/colors';\nimport {checkTheme} from '../utils/theme';\nimport {ellipsis, overflowWrap as wrap} from '../mixins';\n\nconst textTransformMap = {\n\tall: 'uppercase',\n\tfirst: 'capitalize',\n};\n\nconst overflowStylesMap = {\n\tellipsis,\n\twrap,\n};\n\nfunction textProps(props) {\n\tconst {\n\t\tbold,\n\t\tcaps,\n\t\tdimmed,\n\t\tfontSize,\n\t\tlineHeight,\n\t\toverflow,\n\t\ttextAlign,\n\n\t\ttheme,\n\t} = props;\n\n\tcheckTheme(theme);\n\n\treturn {\n\t\ttextAlign,\n\t\tfontSize: fontSize ? theme.globals.typeScale[fontSize] : undefined,\n\t\tfontWeight: bold ? 'bold' : bold === false ? 'normal' : undefined,\n\t\tlineHeight,\n\t\ttextTransform: caps\n\t\t\t? textTransformMap[caps]\n\t\t\t: caps === false\n\t\t\t? 'none'\n\t\t\t: undefined,\n\t\tcolor: dimmed\n\t\t\t? alpha(theme.text, theme.textDimStrength)\n\t\t\t: dimmed === false\n\t\t\t? theme.text\n\t\t\t: undefined,\n\t\t...(overflow ? overflowStylesMap[overflow] : undefined),\n\t};\n}\n\nexport default textProps;\n","import {pxToRem} from '../utils/units';\n\nexport const alignMap = {\n\ttop: 'flex-start',\n\tleft: 'flex-start',\n\tcenter: 'center',\n\tbottom: 'flex-end',\n\tright: 'flex-end',\n};\n\nfunction flexProps(props) {\n\tconst {flexAlign, basis, grow, shrink} = props;\n\n\treturn {\n\t\t/* Reset flex to */\n\t\tflex: 'none',\n\t\t/* Prevent overflowing content from expanding flex items */\n\t\tminWidth: 0,\n\t\tflexBasis: basis ? pxToRem(basis) : undefined,\n\t\tflexGrow: grow ? 1 : undefined,\n\t\tflexShrink: shrink ? 1 : undefined,\n\t\talignSelf: alignMap[flexAlign] || flexAlign,\n\t};\n}\n\nexport default flexProps;\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n"],"sourceRoot":""}