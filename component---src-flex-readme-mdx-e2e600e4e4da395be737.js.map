{"version":3,"sources":["webpack:///../src/Flex/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Flex","Box","align","grow","shrink","of","isMDXComponent"],"mappings":"2gBAQO,IAAMA,EAAe,Q,qMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,qBAAG,0BAAYC,WAAW,KAAvB,QAAH,sHAA0K,0BAAYA,WAAW,KAAvB,OAA1K,mEACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,oJAAuJC,QAAS,CACjML,QACAH,kBACAS,eACAC,UACAC,SACAC,SACCR,QAAQ,cACd,YAAC,IAAD,CAAMS,MAAM,MAAMT,QAAQ,QACzB,YAAC,IAAD,CAAKU,MAAI,EAACC,QAAM,EAACX,QAAQ,OAAzB,yDAGA,YAAC,IAAD,CAAKA,QAAQ,OAAb,kBAGE,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOY,GAAIL,IAAMP,QAAQ,W,4LAK7BH,EAAWgB,gBAAiB","file":"component---src-flex-readme-mdx-e2e600e4e4da395be737.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Flex, { Box } from './';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"flex\"\n    }}>{`Flex`}</h1>\n    <p><inlineCode parentName=\"p\">{`Flex`}</inlineCode>{` is a container component for building simple layouts using CSS flexbox. It's especially useful when used with the `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` component which provides controls for laying out the children.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<Flex align=\\\"top\\\">\\n  <Box grow shrink>\\n    I take up all the space and push other Boxes away! ðŸ‘‰\\n  </Box>\\n  <Box>ðŸ‘€ I\\'m smol.</Box>\\n</Flex>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Flex,\n      Box\n    }} mdxType=\"Playground\">\n\t<Flex align=\"top\" mdxType=\"Flex\">\n\t\t<Box grow shrink mdxType=\"Box\">\n\t\t\tI take up all the space and push other Boxes away! ðŸ‘‰\n\t\t</Box>\n\t\t<Box mdxType=\"Box\">ðŸ‘€ I'm smol.</Box>\n\t</Flex>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Flex} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}