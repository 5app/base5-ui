{"version":3,"sources":["webpack:///../src/CenterContent/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","CenterContent","Box","PodcastIcon","background","mb","height","vAlign","position","width","border","overflow","fillParent","spacing","isToggle","of","isMDXComponent"],"mappings":"0SAUaA,G,UAAe,S,8MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,gCAAe,0BAAYC,WAAW,KAAvB,iBAAf,uGACA,iBAAQ,CACN,GAAM,eADR,eAGA,0DAAyC,0BAAYA,WAAW,KAAvB,OAAzC,yMACA,gCAAe,0BAAYA,WAAW,KAAvB,UAAf,gJACA,2EAA0D,0BAAYA,WAAW,KAAvB,cAA1D,+JAAgR,0BAAYA,WAAW,KAAvB,UAAhR,KAAwU,0BAAYA,WAAW,KAAvB,YAAxU,KAAkY,0BAAYA,WAAW,KAAvB,YAAlY,QAA+b,0BAAYA,WAAW,KAAvB,SAA/b,iCAAkhB,0BAAYA,WAAW,KAAvB,oBAAlhB,wDACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8hBAA2iBC,SAAO,GACnlBL,QACAH,kBACAS,eACAC,UACAC,kBACAC,QACAC,uBAPmlB,gBAQnlBb,IARmlB,EASnlBH,eATmlB,GAUllBO,QAAQ,cACd,YAAC,IAAD,CAAKU,WAAW,SAASC,GAAG,IAAIX,QAAQ,OACvC,YAAC,IAAD,CAAeY,OAAQ,IAAKZ,QAAQ,iBACnC,YAAC,UAAD,CAAaa,QAAM,EAACb,QAAQ,gBAD7B,WAII,YAAC,IAAD,CAAKc,SAAS,WAAWC,MAAO,IAAKH,OAAQ,IAAKI,OAAO,OAAOC,SAAS,OAAOjB,QAAQ,OAC7F,YAAC,IAAD,CAAekB,YAAU,EAACC,QAAQ,IAAInB,QAAQ,iBAA9C,iFAC+E,uBAD/E,gBAEc,uBAFd,gBAGc,uBAHd,gBAIc,uBAJd,kDASG,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOoB,UAAQ,EAACC,GAAId,IAAeP,QAAQ,gB,4MAK/CH,EAAWyB,gBAAiB","file":"component---src-center-content-readme-mdx-14f1417882d4408459f5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport CenterContent from './';\nimport Box from '../Box';\nimport PodcastIcon from '../icons/AssetPodcast';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"centercontent\"\n    }}>{`CenterContent`}</h1>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`CenterContent`}</inlineCode>{` component to center arbitrarily sized content horizontally and vertically inside of its container.`}</p>\n    <h2 {...{\n      \"id\": \"usage-notes\"\n    }}>{`Usage notes`}</h2>\n    <p>{`The component renders two wrapper `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{`s and is meant to be used for large components with an unpredictable height (e.g. modal popups or headlines in a banner). Don't use it for centering an icon within a circle or text within a button.`}</p>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` prop to define a minimum height for the component. If the content is taller than the height specified, the component will grow accordingly.`}</p>\n    <p>{`Instead of defining a height, you can also use the `}<inlineCode parentName=\"p\">{`fillParent`}</inlineCode>{` prop which will make the component grow to match the width and height of its container. When using this, make sure the container has a position other than `}<inlineCode parentName=\"p\">{`static`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`relative`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`absolute`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`fixed`}</inlineCode>{` all work), and is not set to `}<inlineCode parentName=\"p\">{`overflow: hidden`}</inlineCode>{` as that could lead to longer content being cut off.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<Box background=\\\"shaded\\\" mb=\\\"m\\\">\\n  <CenterContent height={350}>\\n    <PodcastIcon vAlign /> Hello\\n  </CenterContent>\\n</Box>\\n<Box\\n  position=\\\"relative\\\"\\n  width={200}\\n  height={200}\\n  border=\\\"thin\\\"\\n  overflow=\\\"auto\\\"\\n>\\n  <CenterContent fillParent spacing=\\\"s\\\">\\n    This text is centred in its little square container, but if it gets too\\n    looooo\\n    <br />\\n    ooooooooooooo\\n    <br />\\n    ooooooooooooo\\n    <br />\\n    oooooooooong,\\n    <br />\\n    it just makes it grow with no cut-off edges.\\n  </CenterContent>\\n</Box>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CenterContent,\n      Box,\n      PodcastIcon,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Box background=\"shaded\" mb=\"m\" mdxType=\"Box\">\n\t\t<CenterContent height={350} mdxType=\"CenterContent\">\n\t\t\t<PodcastIcon vAlign mdxType=\"PodcastIcon\" /> Hello\n\t\t</CenterContent>\n\t</Box>\n      <Box position=\"relative\" width={200} height={200} border=\"thin\" overflow=\"auto\" mdxType=\"Box\">\n\t<CenterContent fillParent spacing=\"s\" mdxType=\"CenterContent\">\n\t\tThis text is centred in its little square container, but if it gets too looooo<br />\n\t\tooooooooooooo<br />\n\t\tooooooooooooo<br />\n\t\toooooooooong,<br />\n\t\tit just makes it grow with no cut-off edges.\n\t</CenterContent>\n      </Box>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props isToggle of={CenterContent} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}