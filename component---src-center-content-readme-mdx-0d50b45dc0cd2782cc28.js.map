{"version":3,"sources":["webpack:///../src/CenterContent/README.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","CenterContent","PodcastIcon","height","vAlign","style","position","width","backgroundColor","border","overflow","fillParent","spacing","of","isMDXComponent"],"mappings":"whBASO,IAAMA,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,gCAAe,0BAAYC,WAAW,KAAvB,iBAAf,uGACA,iBAAQ,CACN,GAAM,eADR,eAGA,0DAAyC,0BAAYA,WAAW,KAAvB,OAAzC,yMACA,gCAAe,0BAAYA,WAAW,KAAvB,UAAf,gJACA,2EAA0D,0BAAYA,WAAW,KAAvB,cAA1D,+JAAgR,0BAAYA,WAAW,KAAvB,UAAhR,KAAwU,0BAAYA,WAAW,KAAvB,YAAxU,KAAkY,0BAAYA,WAAW,KAAvB,YAAlY,QAA+b,0BAAYA,WAAW,KAAvB,SAA/b,iCAAkhB,0BAAYA,WAAW,KAAvB,oBAAlhB,wDACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,iiBAA2iBC,QAAS,CACrlBL,QACAH,kBACAS,eACAC,UACAC,kBACAC,uBACCR,QAAQ,cACd,YAAC,IAAD,CAAeS,OAAQ,IAAKT,QAAQ,iBACnC,YAAC,UAAD,CAAaU,QAAM,EAACV,QAAQ,gBAD7B,UAGK,mBAAKW,MAAO,CACVC,SAAU,WACVC,MAAO,IACPJ,OAAQ,IACRK,gBAAiB,YACjBC,OAAQ,iBACRC,SAAU,SAEjB,YAAC,IAAD,CAAeC,YAAU,EAACC,QAAQ,IAAIlB,QAAQ,iBAA9C,0DACwD,uBADxD,aAEW,uBAFX,gBAGc,uBAHd,gBAIc,uBAJd,gBAKc,uBALd,0BAUG,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOmB,GAAIZ,IAAeP,QAAQ,W,qMAKtCH,EAAWuB,gBAAiB","file":"component---src-center-content-readme-mdx-0d50b45dc0cd2782cc28.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/repo/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport CenterContent from './';\nimport PodcastIcon from '../icons/AssetPodcast';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"centercontent\"\n    }}>{`CenterContent`}</h1>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`CenterContent`}</inlineCode>{` component to center arbitrarily sized content horizontally and vertically inside of its container.`}</p>\n    <h2 {...{\n      \"id\": \"usage-notes\"\n    }}>{`Usage notes`}</h2>\n    <p>{`The component renders two wrapper `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{`s and is meant to be used for large components with an unpredictable height (e.g. modal popups or headlines in a banner). Don't use it for centering an icon within a circle or text within a button.`}</p>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` prop to define a minimum height for the component. If the content is taller than the height specified, the component will grow accordingly.`}</p>\n    <p>{`Instead of defining a height, you can also use the `}<inlineCode parentName=\"p\">{`fillParent`}</inlineCode>{` prop which will make the component grow to match the width and height of its container. When using this, make sure the container has a position other than `}<inlineCode parentName=\"p\">{`static`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`relative`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`absolute`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`fixed`}</inlineCode>{` all work), and is not set to `}<inlineCode parentName=\"p\">{`overflow: hidden`}</inlineCode>{` as that could lead to longer content being cut off.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={0} __code={'<CenterContent height={350}>\\n  <PodcastIcon vAlign /> Hello\\n</CenterContent>\\n<div\\n  style={{\\n    position: \\'relative\\',\\n    width: 200,\\n    height: 200,\\n    backgroundColor: \\'aliceblue\\',\\n    border: \\'1px solid grey\\',\\n    overflow: \\'auto\\',\\n  }}\\n>\\n  <CenterContent fillParent spacing=\\\"s\\\">\\n    I\\'m centred in my little square container, but if I get\\n    <br />\\n    too looooo\\n    <br />\\n    ooooooooooooo\\n    <br />\\n    ooooooooooooo\\n    <br />\\n    oooooooooong,\\n    <br />I just make it grow.\\n  </CenterContent>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CenterContent,\n      PodcastIcon\n    }} mdxType=\"Playground\">\n\t<CenterContent height={350} mdxType=\"CenterContent\">\n\t\t<PodcastIcon vAlign mdxType=\"PodcastIcon\" /> Hello\n\t</CenterContent>\n      <div style={{\n        position: 'relative',\n        width: 200,\n        height: 200,\n        backgroundColor: 'aliceblue',\n        border: '1px solid grey',\n        overflow: 'auto'\n      }}>\n\t<CenterContent fillParent spacing=\"s\" mdxType=\"CenterContent\">\n\t\tI'm centred in my little square container, but if I get<br />\n\t\ttoo looooo<br />\n\t\tooooooooooooo<br />\n\t\tooooooooooooo<br />\n\t\toooooooooong,<br />\n\t\tI just make it grow.\n\t</CenterContent>\n      </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={CenterContent} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}